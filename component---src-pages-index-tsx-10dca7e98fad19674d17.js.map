{"version":3,"file":"component---src-pages-index-tsx-10dca7e98fad19674d17.js","mappings":"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","sources":["webpack://z-game/./src/game/MapCell.ts","webpack://z-game/./src/game/GameData.ts","webpack://z-game/./src/game/events.ts","webpack://z-game/./src/game/lib/GameMap.ts","webpack://z-game/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://z-game/./src/game/lib/Sprite.ts","webpack://z-game/./src/game/lib/Anime.ts","webpack://z-game/./src/game/lib/vec.ts","webpack://z-game/./src/game/lib/CollisionMap.ts","webpack://z-game/./src/game/lib/StateMachine.ts","webpack://z-game/./src/game/Kernel.ts","webpack://z-game/./src/game/NPC.ts","webpack://z-game/./src/game/ZEA.ts","webpack://z-game/./src/game/DialogManager.ts","webpack://z-game/./src/game/Game.ts","webpack://z-game/./src/game/index.ts","webpack://z-game/./src/images/frame.svg","webpack://z-game/./src/images/frame_inner.svg","webpack://z-game/./src/pages/index.tsx","webpack://z-game/./src/images/sprite.png"],"sourcesContent":["import { Cell, Appearance } from './lib/GameMap'\nimport { Polygon } from './lib/vec'\n\nimport { GameEventTarget } from './events'\n\ntype CollisionDir = {\n  top: boolean\n  bottom: boolean\n  left: boolean\n  right: boolean\n}\n\nclass MapCell extends GameEventTarget<MapCell> implements Cell {\n  readonly v: { [layer: string]: Appearance }\n  readonly typ: number\n  readonly colDir: CollisionDir\n\n  constructor(\n    v: { [layer: string]: Appearance },\n    typ: number,\n    col: CollisionDir,\n  ) {\n    super()\n    this.v = v\n    this.typ = typ\n    this.colDir = col\n  }\n\n  appearance(layer: string): Appearance {\n    return this.v[layer]\n  }\n\n  heat(): boolean {\n    return this.typ == 2\n  }\n\n  collision(): Polygon[] {\n    const topOffset = 0.05\n    const pol: Polygon[] = []\n    if (this.colDir.top) {\n      pol.push([\n        [0, topOffset],\n        [1, topOffset],\n      ])\n    }\n    if (this.colDir.right && this.colDir.bottom && !this.colDir.left) {\n      pol.push([\n        [1, topOffset],\n        [1, 0.9],\n        [0.3, 1.4],\n        [0, 1.4],\n      ])\n      return pol\n    }\n    if (this.colDir.left && this.colDir.bottom && !this.colDir.right) {\n      pol.push([\n        [1, 1.4],\n        [0.7, 1.4],\n        [0, 0.9],\n        [0, topOffset],\n      ])\n      return pol\n    }\n\n    if (this.colDir.right) {\n      pol.push([\n        [1, 0.1],\n        [1, 1.4],\n      ])\n    }\n    if (this.colDir.bottom) {\n      pol.push([\n        [1, 1.4],\n        [0, 1.4],\n      ])\n    }\n    if (this.colDir.left) {\n      pol.push([\n        [0, 1.4],\n        [0, 0.1],\n      ])\n    }\n\n    return pol\n  }\n\n  headUpText(): number {\n    if (this.onAction.length > 0) {\n      return 1\n    }\n    if (this.typ == 2) {\n      return 2\n    }\n    return 0\n  }\n}\n\nexport default MapCell\n","import GameMap from './lib/GameMap'\nimport { Vec2 } from './lib/vec'\n\nimport MapCell from './MapCell'\nimport { EventHandler } from './events'\n\nimport mapData from './data/map.yaml'\n\ntype Props = {\n  getItem: EventHandler<MapCell>\n}\n\ntype GameData = {\n  m: GameMap<MapCell>\n  init: {\n    kernel: Vec2\n  }\n}\n\nexport const loadGameData = ({ getItem }: Props): GameData => {\n  const mw = mapData.main[0].length\n  const mh = mapData.main.length\n  return {\n    init: {\n      kernel: [mapData.start.pos[0] * 16, mapData.start.pos[1] * 16],\n    },\n    m: new GameMap<MapCell>(\n      [mw, mh],\n      (x: number, y: number) => {\n        const t = mapData.type[y][x]\n        const tr = x + 1 > mw - 1 ? mw - 1 : mapData.type[y][x + 1]\n        const tl = x - 1 < 0 ? 0 : mapData.type[y][x - 1]\n        const tt = y - 1 < 0 ? 0 : mapData.type[y - 1][x]\n        const tb = y + 1 > mh - 1 ? mh - 1 : mapData.type[y + 1][x]\n        const col = {\n          top: t == 2 || t == 3 || (t == 1 && tt != 1),\n          bottom: t == 1 && tb != 1,\n          left: t == 1 && tl != 1,\n          right: t == 1 && tr != 1,\n        }\n        const c = new MapCell(\n          {\n            main: [mapData.main[y][x][1], mapData.main[y][x][0]],\n            under: [mapData.under[y][x][1], mapData.under[y][x][0]],\n            overlay: [mapData.overlay[y][x][1], mapData.overlay[y][x][0]],\n            overlayAnime:\n              mapData.item[y][x] > 0\n                ? [0, 2]\n                : [\n                    mapData.overlayAnime[y][x][1],\n                    mapData.overlayAnime[y][x][0],\n                  ],\n          },\n          t,\n          col,\n        )\n        if (mapData.item[y][x] > 0) {\n          c.onAction.push((e) => {\n            c.onAction = []\n            e.target.v['overlayAnime'] = [0, 0]\n            getItem(e)\n          })\n        }\n        return c\n      },\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n    ),\n  }\n}\n\nexport default GameData\n","export type EventHandler<T> = (e: GameEvent<T>) => void\n\nexport class GameEventTarget<T> {\n  onArrive: EventHandler<T>[]\n  onAction: EventHandler<T>[]\n\n  constructor() {\n    this.onArrive = []\n    this.onAction = []\n  }\n}\n\nexport type GameEvent<T> = {\n  target: T\n}\n","import { Drawer } from './Sprite'\nimport { Vec2, Polygon } from './vec'\n\nexport type Appearance = [number, number]\n\nexport interface Cell {\n  appearance(layer: string): Appearance\n}\n\nexport interface CollisionCell extends Cell {\n  collision(): Polygon[]\n}\n\nclass GameMap<T extends Cell> {\n  readonly sz: Vec2\n  readonly data: Array<T>\n  readonly s: Vec2\n  readonly e: Vec2\n  readonly screenSize: Vec2\n  readonly baseScale: number\n\n  constructor(\n    sz: Vec2,\n    loader: (x: number, y: number) => T,\n    s: Vec2,\n    e: Vec2,\n    screenSize: Vec2,\n    baseScale = 1,\n  ) {\n    this.sz = sz\n    this.s = s\n    this.e = e\n    this.screenSize = screenSize\n    this.baseScale = baseScale\n    this.data = new Array<T>(sz[0] * sz[1])\n    for (let j = 0; j < sz[1]; j++) {\n      for (let i = 0; i < sz[0]; i++) {\n        this.data[j * sz[0] + i] = loader(i, j)\n      }\n    }\n  }\n\n  at(p: Vec2): T {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    return this.data[p2[1] * this.sz[0] + p2[0]]\n  }\n\n  set(p: Vec2, v: T) {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    this.data[p2[1] * this.sz[0] + p2[0]] = v\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    d: Drawer,\n    o: Vec2,\n    scale: number,\n    layer: string,\n  ) {\n    const v = cellRange(\n      d.sz(),\n      this.s,\n      this.e,\n      o,\n      this.screenSize,\n      scale,\n      this.baseScale,\n    )\n    const [cw, ch] = d.sz()\n\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.at([i, j])\n        const a = c.appearance(layer)\n        d.draw(ctx, [v.o[0] + i * cw, v.o[1] + j * ch], scale, a[0], a[1])\n      }\n    }\n  }\n}\n\nconst posMod = (a: Vec2, b: Vec2): Vec2 => {\n  const m = [a[0] % b[0], a[1] % b[1]]\n  return [m[0] < 0 ? m[0] + b[0] : m[0], m[1] < 0 ? m[1] + b[1] : m[1]]\n}\n\nexport const cellRange = (\n  sz: Vec2,\n  s: Vec2,\n  e: Vec2,\n  o: Vec2,\n  screenSize: Vec2,\n  scale: number,\n  baseScale: number,\n): {\n  s: Vec2\n  e: Vec2\n  o: Vec2\n} => {\n  o[0] = Math.floor(o[0])\n  o[1] = Math.floor(o[1])\n\n  const gw = Math.round(screenSize[0] / (sz[0] * scale)) + 2\n  const gh = Math.round(screenSize[1] / (sz[1] * scale)) + 2\n\n  const left = o[0] + s[0] * sz[0] + sz[0]\n  const top = o[1] + s[1] * sz[1] + sz[1]\n\n  const si2 = left >= 0 ? s[0] : s[0] - Math.floor(left / sz[0]) - baseScale + 1\n  const ei2 = si2 + gw + baseScale - 1\n\n  const sj2 = top >= 0 ? s[1] : s[1] - Math.floor(top / sz[1]) - baseScale + 1\n  const ej2 = sj2 + gh + baseScale - 1\n\n  return {\n    s: [si2, sj2],\n    e: [ei2, ej2],\n    o,\n  }\n}\n\nexport default GameMap\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { Vec2 } from './vec'\n\nexport interface Drawer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    s: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ): void\n  sz(): Vec2\n}\n\nexport type SpriteProp = {\n  topLeft: Vec2\n  sz: Vec2\n  baseScale?: number\n}\n\nclass Sprite implements Drawer {\n  readonly sprite: HTMLImageElement\n  readonly prop: Required<SpriteProp>\n\n  constructor(sprite: HTMLImageElement, prop: SpriteProp) {\n    this.sprite = sprite\n    this.prop = {\n      baseScale: 1,\n      ...prop,\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    ctx.drawImage(\n      this.sprite,\n      this.prop.topLeft[0] + mode1 * this.prop.sz[0],\n      this.prop.topLeft[1] + mode2 * this.prop.sz[1],\n      this.prop.sz[0],\n      this.prop.sz[1],\n      Math.floor(p[0] * scale),\n      Math.floor(p[1] * scale),\n      this.prop.sz[0] * scale * this.prop.baseScale,\n      this.prop.sz[1] * scale * this.prop.baseScale,\n    )\n  }\n\n  sz() {\n    return this.prop.sz\n  }\n}\n\nexport default Sprite\n","import { Vec2 } from './vec'\nimport Sprite, { SpriteProp, Drawer } from './Sprite'\n\nexport type AnimeProp = SpriteProp & {\n  frames: number[]\n  patterns?: number\n  countDiv?: number\n}\n\nclass Anime extends Sprite implements Drawer {\n  readonly propAnime: AnimeProp\n  private readonly patterns: number\n  private readonly countDiv: number\n  private cnt = 0\n  frame = 0\n\n  constructor(sprite: HTMLImageElement, prop: AnimeProp) {\n    super(sprite, prop)\n    this.propAnime = prop\n    if (prop.patterns) {\n      this.patterns = prop.patterns\n    } else {\n      this.patterns = prop.frames.reduce((acc, v) => (acc > v ? acc : v), 0) + 1\n    }\n    if (prop.countDiv) {\n      this.countDiv = prop.countDiv\n    } else {\n      this.countDiv = 1\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    super.draw(\n      ctx,\n      p,\n      scale,\n      this.propAnime.frames[this.frame] + this.patterns * mode1,\n      mode2,\n    )\n  }\n\n  tick(forceCnt?: number): number {\n    if (forceCnt !== undefined) {\n      this.cnt = forceCnt\n    }\n    this.frame = Math.floor(\n      (this.cnt / this.countDiv) % this.propAnime.frames.length,\n    )\n    this.cnt++\n    return this.propAnime.frames[this.frame]\n  }\n}\n\nexport default Anime\n","export type Vec2 = [number, number]\nexport type Polygon = Vec2[]\n\nexport const diff = (a: Vec2, b: Vec2): Vec2 => [a[0] - b[0], a[1] - b[1]]\nexport const cross = (a: Vec2, b: Vec2): number => a[0] * b[1] - a[1] * b[0]\n\nexport const intersected = (\n  sa: Vec2,\n  ea: Vec2,\n  sb: Vec2,\n  eb: Vec2,\n  tolerance: number,\n): boolean => {\n  const a = diff(ea, sa)\n  const b = diff(eb, sb)\n  const c1 = cross(a, diff(sb, sa))\n  const c2 = cross(a, diff(eb, sa))\n  const c3 = cross(b, diff(sa, sb))\n  const c4 = cross(b, diff(ea, sb))\n  return c1 < tolerance && c2 > -tolerance && c3 > -tolerance && c4 < tolerance\n}\n\nexport const norm = (a: Vec2): number => Math.sqrt(a[0] * a[0] + a[1] * a[1])\n","import GameMap, { CollisionCell, cellRange } from './GameMap'\nimport { Vec2, Polygon, intersected } from './vec'\n\ntype CollisionState = {\n  right: boolean\n  left: boolean\n\n  bottom?: number\n  top?: number\n}\n\nclass CollisionMap {\n  readonly map: GameMap<CollisionCell>\n  readonly cellSz: Vec2\n\n  private scanned: Polygon[]\n  private intersection: Polygon[]\n  private motion?: Polygon\n\n  constructor(map: GameMap<CollisionCell>, cellSz: Vec2) {\n    this.map = map\n    this.cellSz = cellSz\n    this.scanned = []\n    this.intersection = []\n  }\n\n  check(a: Vec2, b: Vec2): CollisionState {\n    const col: CollisionState = {\n      right: false,\n      left: false,\n    }\n    const s: Vec2 = [\n      Math.floor(Math.min(a[0], b[0]) / this.cellSz[0] - 0.5),\n      Math.floor(Math.min(a[1], b[1]) / this.cellSz[1] - 0.5),\n    ]\n    const e: Vec2 = [\n      Math.floor(Math.max(a[0], b[0]) / this.cellSz[0] + 0.5),\n      Math.floor(Math.max(a[1], b[1]) / this.cellSz[1] + 0.5),\n    ]\n    const motion: [Vec2, Vec2] = [\n      [a[0] / this.cellSz[0], a[1] / this.cellSz[1]],\n      [b[0] / this.cellSz[0], b[1] / this.cellSz[1]],\n    ]\n    this.motion = motion\n    for (let j = s[1]; j < e[1] + 1; j++) {\n      for (let i = s[0]; i < e[0] + 1; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          const pol = pp.reduce<Polygon>(\n            (acc, p) => (acc.push([i + p[0], j + p[1]]), acc),\n            [],\n          )\n          pol.length > 0 && this.scanned.push(pol)\n          for (let k = 0; k < pol.length - 1; k++) {\n            if (!intersected(pol[k], pol[k + 1], motion[0], motion[1], 0.005)) {\n              continue\n            }\n            if (pol[k][0] > pol[k + 1][0]) {\n              col.top = pol[k][1] + 0.01\n            } else if (pol[k][0] < pol[k + 1][0]) {\n              col.bottom = pol[k][1] - 0.01\n            }\n            if (pol[k][1] > pol[k + 1][1]) {\n              col.right = true\n            } else if (pol[k][1] < pol[k + 1][1]) {\n              col.left = true\n            }\n            this.intersection.push([pol[k], pol[k + 1]])\n          }\n        })\n      }\n    }\n    return col\n  }\n\n  draw(ctx: CanvasRenderingContext2D, o: Vec2, scale: number) {\n    ctx.strokeStyle = 'white'\n    ctx.lineWidth = 1\n\n    const v = cellRange(\n      this.cellSz,\n      this.map.s,\n      this.map.e,\n      o,\n      this.map.screenSize,\n      scale,\n      1,\n    )\n    const [cw, ch] = this.cellSz\n\n    ctx.beginPath()\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          pp.forEach((p, c) => {\n            const [x, y] = [\n              (v.o[0] + cw * (i + p[0])) * scale,\n              (v.o[1] + ch * (j + p[1])) * scale,\n            ]\n            c == 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y)\n          })\n          ctx.stroke()\n        })\n      }\n    }\n    ctx.closePath()\n\n    const xy = (p: Vec2): Vec2 => [\n      (v.o[0] + cw * p[0]) * scale,\n      (v.o[1] + ch * p[1]) * scale,\n    ]\n    const drawPolygon = (poly: Polygon[]) => {\n      ctx.beginPath()\n      poly.forEach((pp) => {\n        pp.forEach((p, c) =>\n          c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n        )\n        ctx.stroke()\n      })\n      ctx.closePath()\n    }\n\n    ctx.strokeStyle = 'yellow'\n    ctx.lineWidth = 1\n    drawPolygon(this.scanned)\n    this.scanned = []\n\n    ctx.strokeStyle = 'orange'\n    ctx.lineWidth = 5\n    drawPolygon(this.intersection)\n    this.intersection = []\n\n    if (this.motion) {\n      ctx.strokeStyle = 'red'\n      ctx.lineWidth = 4\n      ctx.beginPath()\n      this.motion.forEach((p, c) =>\n        c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n      )\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n\nexport default CollisionMap\n","class StateMachine {\n  private readonly initial: State\n  private readonly states: Map<State, null>\n  current: State\n\n  constructor(initial: State) {\n    this.current = nopState\n    this.initial = initial\n    this.states = new Map<State, null>()\n    this.set(initial)\n\n    const next = [initial]\n    while (next.length > 0) {\n      const n = next.pop()\n      if (!n) {\n        continue\n      }\n      this.states.set(n, null)\n      Object.values(n.nextStates).forEach(\n        (s) => this.states.has(s) || next.push(s),\n      )\n    }\n  }\n\n  set(s: State) {\n    this.current.leave && this.current.leave()\n    this.current = s\n    s.enter && s.enter()\n  }\n\n  tick() {\n    const next = this.current.tick()\n    if (next === null) {\n      return\n    }\n    console.log(next, this.current.nextStates)\n    this.set(this.current.nextStates[next])\n  }\n\n  reset() {\n    this.current = nopState\n    this.states.forEach((v, s) => s.reset && s.reset())\n    this.set(this.initial)\n  }\n}\n\nexport type State = {\n  nextStates: { [name: string]: State }\n  tick: () => string | null\n  reset?: () => void\n  enter?: () => void\n  leave?: () => void\n}\n\nexport const nopState = {\n  nextStates: {},\n  tick: () => null,\n}\n\nexport default StateMachine\n","import Anime from './lib/Anime'\nimport Sprite from './lib/Sprite'\nimport { Vec2 } from './lib/vec'\nimport GameMap from './lib/GameMap'\nimport CollisionMap from './lib/CollisionMap'\n\nimport MapCell from './MapCell'\n\nconst heatCount = 8\nconst popResume = 96\n\ntype KernelCommand = {\n  left: boolean\n  right: boolean\n  space: boolean\n}\n\ntype InitialKernelState = {\n  pos?: Vec2\n  vel?: Vec2\n  onGround?: boolean\n  orientation?: number\n}\n\nclass KernelState {\n  pos: Vec2\n  vel: Vec2\n  onGround: boolean\n  orientation: number\n\n  jumpPow: Vec2\n  heat: number\n  popped: number\n  trans: number\n\n  constructor(s: InitialKernelState) {\n    this.pos = s.pos || [0, 0]\n    this.vel = s.vel || [0, 0]\n    this.onGround = s.onGround || true\n    this.orientation = s.orientation || 0\n    this.jumpPow = [0, 0]\n    this.heat = 0\n    this.popped = 0\n    this.trans = 0\n  }\n\n  clone(): KernelState {\n    return {\n      ...this,\n      pos: [this.pos[0], this.pos[1]],\n      vel: [this.vel[0], this.vel[1]],\n      jumpPow: [this.jumpPow[0], this.jumpPow[1]],\n    }\n  }\n}\n\nclass Kernel {\n  private readonly anime: {\n    idle: Anime\n    squat: Anime\n    jump: Anime\n  }\n  private readonly shadow: Sprite\n  private readonly trans: Sprite\n  private readonly explosion: Sprite\n  private readonly headUpText: Anime\n  private readonly ellasticCoeff: number\n  private currentAnime: Anime\n  private state0: KernelState\n  private interacting: boolean\n\n  onInteract?: () => void\n\n  state: KernelState\n  explosionPos: Vec2\n  explosionNum: number\n  headUpTextMode: number\n\n  constructor(sprite: HTMLImageElement, state0: InitialKernelState) {\n    this.ellasticCoeff = 0.5\n\n    this.anime = {\n      idle: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [0, 0, 0, 2, 0, 1, 0],\n        patterns: 4,\n      }),\n      squat: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [3],\n        patterns: 4,\n      }),\n      jump: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [2, 2, 0, 2, 2, 2, 0],\n        patterns: 4,\n      }),\n    }\n    this.currentAnime = this.anime.idle\n    this.shadow = new Sprite(sprite, {\n      topLeft: [0, 24],\n      sz: [12, 12],\n    })\n    this.trans = new Sprite(sprite, {\n      topLeft: [0, 36],\n      sz: [12, 12],\n    })\n    this.explosion = new Sprite(sprite, {\n      topLeft: [0, 48],\n      sz: [36, 12],\n    })\n    this.headUpText = new Anime(sprite, {\n      topLeft: [0, 60],\n      sz: [24, 12],\n      frames: [0, 1],\n      patterns: 2,\n      countDiv: 8,\n    })\n\n    this.state0 = new KernelState(state0)\n    this.state = this.state0.clone()\n\n    this.explosionPos = this.state.pos\n    this.explosionNum = 0\n    this.headUpTextMode = 0\n    this.interacting = false\n  }\n\n  reset() {\n    this.state = this.state0.clone()\n  }\n\n  tick(cmd: KernelCommand, gameMap: GameMap<MapCell>, colMap: CollisionMap) {\n    if (cmd.left && this.state.onGround) {\n      this.state.jumpPow[0]--\n      if (this.state.jumpPow[0] < -4) {\n        this.state.jumpPow[0] = -4\n      }\n      this.state.orientation = 0\n    }\n    if (cmd.right && this.state.onGround) {\n      this.state.jumpPow[0]++\n      if (this.state.jumpPow[0] > 4) {\n        this.state.jumpPow[0] = 4\n      }\n      this.state.orientation = 1\n    }\n    if (\n      !cmd.left &&\n      !cmd.right &&\n      !cmd.space &&\n      this.state.onGround &&\n      this.state.jumpPow[0] !== 0 &&\n      this.state.jumpPow[1] === 0\n    ) {\n      this.state.onGround = false\n      this.state.vel = [this.state.jumpPow[0], -4]\n      this.state.jumpPow = [0, 0]\n    }\n    let interacting = false\n    if (!cmd.space || !this.state.onGround) {\n      if (\n        this.state.jumpPow[0] == 0 &&\n        this.state.jumpPow[1] < 0 &&\n        this.state.jumpPow[1] > -6\n      ) {\n        interacting = true\n      } else if (!cmd.space && this.state.jumpPow[1] < 0) {\n        this.state.onGround = false\n        if (this.state.popped == 0) {\n          this.state.vel = this.state.jumpPow\n        } else {\n          this.state.vel = [this.state.jumpPow[0], this.state.jumpPow[1] * 0.5]\n        }\n        this.state.jumpPow = [0, 0]\n      } else if (!this.state.onGround) {\n        if (this.state.popped == 0) {\n          this.state.vel[1] += 2\n        } else {\n          this.state.vel[1] += 1.5\n        }\n        if (this.state.vel[1] > 14) {\n          this.state.vel[1] = 14\n        }\n      }\n    }\n\n    const mpBottom: Vec2 = [\n      Math.round((this.state.pos[0] - 2) / 16),\n      Math.floor(this.state.pos[1] / 16),\n    ]\n    const col = colMap.check(\n      [this.state.pos[0] + 6, this.state.pos[1]],\n      [\n        this.state.pos[0] + this.state.vel[0] + 6,\n        this.state.pos[1] + this.state.vel[1],\n      ],\n    )\n    const headUpTextModePrev = this.headUpTextMode\n    this.headUpTextMode = gameMap.at(mpBottom).headUpText()\n    if (this.headUpTextMode > 0 && headUpTextModePrev == 0) {\n      this.headUpText.tick(0)\n    }\n\n    this.currentAnime = this.anime.idle\n    if (cmd.space && this.state.onGround) {\n      this.currentAnime = this.anime.squat\n      this.state.jumpPow[1] -= 2\n      if (this.state.jumpPow[1] < -11) {\n        this.state.jumpPow[1] = -11\n      }\n    } else if (!this.state.onGround) {\n      if (col.top && this.state.vel[1] < 0) {\n        this.state.vel[1] *= -this.ellasticCoeff\n        this.state.vel[0] *= this.ellasticCoeff\n        this.state.pos[1] = col.top * 16\n      }\n      if (\n        (col.left && this.state.vel[0] < 0) ||\n        (col.right && this.state.vel[0] > 0)\n      ) {\n        this.state.vel[0] *= -this.ellasticCoeff\n        this.state.pos[0] += this.state.vel[0]\n      }\n      if (col.bottom && this.state.vel[1] >= 0) {\n        this.state.pos[1] = col.bottom * 16\n        this.state.vel = [0, 0]\n        this.state.onGround = true\n        this.currentAnime = this.anime.squat\n      }\n      if (this.state.vel[1] < 0) {\n        this.currentAnime = this.anime.jump\n      } else if (this.state.vel[1] > 0) {\n        this.currentAnime = this.anime.squat\n      }\n    }\n\n    this.state.pos[0] += this.state.vel[0]\n    this.state.pos[1] += this.state.vel[1]\n\n    if (this.explosionNum && this.explosionNum > 0) {\n      this.explosionNum--\n      if (this.explosionNum == 2) {\n        this.state.heat = 5 * heatCount\n        this.state.popped = popResume\n\n        this.state.onGround = false\n        this.state.vel = [0, -17]\n        this.state.jumpPow = [0, 0]\n      }\n    } else if (gameMap.at(mpBottom).heat()) {\n      this.state.heat++\n      if (this.state.heat > 5 * heatCount - 2 && this.state.popped == 0) {\n        this.explosionPos = [this.state.pos[0], this.state.pos[1]]\n        this.explosionNum = 3\n      }\n    } else {\n      this.state.heat--\n      if (this.state.heat < 0) {\n        this.state.heat = 0\n      }\n      if (this.state.popped > 0) {\n        this.state.popped--\n        this.state.heat = 0\n        if (this.state.popped < 0) {\n          this.state.popped = 0\n        }\n      }\n    }\n    if (this.state.trans < 8) {\n      this.state.trans++\n    }\n\n    if (interacting && !this.interacting) {\n      const mpBottom0: Vec2 = [\n        Math.round((this.state.pos[0] - 2) / 16),\n        Math.floor(this.state.pos[1] / 16),\n      ]\n      const cell = gameMap.at(mpBottom0)\n      cell.onAction.forEach((h) => h({ target: cell }))\n      this.onInteract && this.onInteract()\n    }\n    this.interacting = interacting\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const kernelMode = this.currentAnime.tick()\n    if (this.headUpTextMode > 0) {\n      this.headUpText.tick()\n    }\n    const mode =\n      (this.state.popped > 0 && this.state.popped != 2) ||\n      this.state.heat == heatCount * 5 - 1\n        ? 5\n        : Math.min(4, Math.floor(this.state.heat / heatCount))\n    if (this.state.onGround) {\n      this.shadow.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        mode * 4 + kernelMode,\n        0,\n      )\n    }\n    if (this.state.trans > 2) {\n      this.currentAnime.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 6],\n        scale,\n        mode,\n        this.state.orientation,\n      )\n    }\n    if (this.state.trans < 8) {\n      this.trans.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        this.state.trans - 2,\n        0,\n      )\n    }\n    if (this.explosionNum > 0) {\n      this.explosion.draw(\n        ctx,\n        [\n          offset[0] + this.explosionPos[0] - 12,\n          offset[1] + this.explosionPos[1] - 8,\n        ],\n        scale,\n        3 - this.explosionNum,\n        0,\n      )\n    }\n    if (this.headUpTextMode > 0) {\n      this.headUpText.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 15],\n        scale,\n        this.headUpTextMode - 1,\n        0,\n      )\n    }\n  }\n}\n\nexport default Kernel\n","import Anime from './lib/Anime'\nimport { Vec2 } from './lib/vec'\n\nimport { GameEventTarget } from './events'\n\nexport class NPCState {\n  pos: Vec2\n  mode: number\n\n  constructor(s: InitialNPCState) {\n    this.pos = s.pos || [0, 0]\n    this.mode = s.mode || 0\n  }\n}\n\nexport type InitialNPCState = {\n  pos?: Vec2\n  mode?: number\n}\n\nclass NPC<State extends NPCState = NPCState> extends GameEventTarget<\n  NPC<State>\n> {\n  private readonly anime: Anime\n  private readonly headUpText: Anime\n  state: State\n  active: boolean\n  hasDialog: boolean\n\n  constructor(anime: Anime, headUpText: Anime, s: State) {\n    super()\n    this.anime = anime\n    this.headUpText = headUpText\n    this.state = s\n    this.active = false\n    this.hasDialog = false\n  }\n\n  tick(p: Vec2) {\n    const sz = this.anime.sz()\n    const activePrev = this.active\n    this.active =\n      Math.abs(p[0] - this.state.pos[0]) < sz[0] / 2 &&\n      Math.abs(p[1] - this.state.pos[1]) < sz[1] / 2\n\n    if (!activePrev && this.active && this.onArrive) {\n      this.onArrive.forEach((h) => h({ target: this }))\n    }\n\n    this.anime.tick()\n    this.headUpText.tick()\n  }\n\n  interact() {\n    if (this.active && this.onAction.length) {\n      this.onAction.forEach((h) => h({ target: this }))\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const sz = this.anime.sz()\n    this.anime.draw(\n      ctx,\n      [\n        offset[0] + this.state.pos[0] - sz[0] / 2,\n        offset[1] + this.state.pos[1] - sz[1] + 6,\n      ],\n      scale,\n      this.state.mode,\n      0,\n    )\n    if (this.hasDialog) {\n      this.headUpText.draw(\n        ctx,\n        [\n          offset[0] + this.state.pos[0] - sz[0] / 2,\n          offset[1] + this.state.pos[1] - sz[1] + 4,\n        ],\n        scale,\n        2 + (this.active ? 1 : 0),\n        0,\n      )\n    }\n  }\n}\n\nexport default NPC\n","import Anime from './lib/Anime'\n\nimport NPC, { NPCState, InitialNPCState } from './NPC'\n\nclass ZEA extends NPC {\n  constructor(sprite: HTMLImageElement, state0: InitialNPCState) {\n    super(\n      new Anime(sprite, {\n        topLeft: [0, 72],\n        sz: [24, 24],\n        frames: [\n          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,\n          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2,\n          2, 2, 2, 2, 2, 2, 2, 2,\n        ],\n        patterns: 5,\n      }),\n      new Anime(sprite, {\n        topLeft: [0, 60],\n        sz: [24, 12],\n        frames: [0, 1],\n        patterns: 2,\n        countDiv: 8,\n      }),\n      new NPCState(state0),\n    )\n  }\n}\n\nexport default ZEA\n","type DialogOption = {\n  timeout?: number\n}\n\nclass DialogManager {\n  readonly messageBox: HTMLDivElement\n\n  private timeoutTimer?: ReturnType<typeof setTimeout>\n\n  constructor(messageBox: HTMLDivElement) {\n    this.messageBox = messageBox\n  }\n\n  showMessage(text: string, opt?: DialogOption) {\n    if (this.timeoutTimer) {\n      clearTimeout(this.timeoutTimer)\n    }\n    this.messageBox.innerHTML = text\n    this.messageBox.style.display = 'block'\n    this.messageBox.classList.remove('hide')\n\n    if (opt?.timeout) {\n      this.timeoutTimer = setTimeout(this.hideMessage.bind(this), opt.timeout)\n    }\n  }\n\n  hideMessage() {\n    this.messageBox.classList.add('hide')\n  }\n}\n\nexport default DialogManager\n","import Sprite from './lib/Sprite'\nimport Anime from './lib/Anime'\nimport CollisionMap from './lib/CollisionMap'\nimport { Vec2 } from './lib/vec'\nimport StateMachine, { State, nopState } from './lib/StateMachine'\n\nimport Kernel from './Kernel'\nimport ZEA from './ZEA'\nimport { EventHandler } from './events'\nimport DialogManager from './DialogManager'\nimport GameData, { loadGameData } from './GameData'\n\nclass Game {\n  readonly canvas: HTMLCanvasElement\n  readonly ctx: CanvasRenderingContext2D\n  readonly sprite: HTMLImageElement\n  cleanup?: () => void\n\n  readonly scale: number\n\n  readonly sm: StateMachine\n  readonly dm: DialogManager\n\n  readonly game: GameData\n  readonly bgUnder: Sprite\n  readonly bg: Sprite\n  readonly bgOverlay: Sprite\n  readonly bgOverlayAnime: Anime\n  readonly bgGrad: Sprite\n  readonly kernel: Kernel\n  readonly collisionMap: CollisionMap\n  readonly zea: ZEA\n\n  command: Map<string, boolean>\n\n  origin: Vec2\n  viewpoint: Vec2\n  debugView: boolean\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    sprite: HTMLImageElement,\n    messageBox: HTMLDivElement,\n  ) {\n    const self = this\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw 'failed to get canvas context'\n    }\n    this.ctx = ctx\n    this.canvas = canvas\n    this.ctx.imageSmoothingEnabled = false\n    this.sprite = sprite\n\n    this.dm = new DialogManager(messageBox)\n    this.game = loadGameData({\n      getItem: () => {\n        self.dm.showMessage('Yum Yum', { timeout: 2000 })\n      },\n    })\n\n    this.scale = 3\n    this.origin = this.game.init.kernel\n    this.viewpoint = [0, 0]\n    this.debugView = false\n\n    this.kernel = new Kernel(this.sprite, {\n      pos: this.origin,\n    })\n    this.bgUnder = new Sprite(this.sprite, {\n      topLeft: [512, 512],\n      sz: [16, 16],\n      baseScale: 2,\n    })\n    this.bg = new Sprite(this.sprite, {\n      topLeft: [0, 512],\n      sz: [16, 16],\n    })\n    this.bgOverlay = new Sprite(this.sprite, {\n      topLeft: [0, 896],\n      sz: [16, 16],\n    })\n    this.bgOverlayAnime = new Anime(this.sprite, {\n      topLeft: [0, 768],\n      sz: [16, 16],\n      frames: [0, 0, 1, 1, 2, 2, 1, 1],\n    })\n    this.bgGrad = new Sprite(this.sprite, {\n      topLeft: [1024 - 16, 0],\n      sz: [16, 1024],\n    })\n    this.zea = new ZEA(this.sprite, {\n      pos: [70, 48],\n      mode: 1,\n    })\n    const zDialogs = ['Hemlo', '...']\n    let zTalkCnt = 0\n    const [zTalk, zTalkHandler] = this.newEventState<ZEA>({\n      nextStates: { next: nopState },\n      tick: () => {\n        self.dm.showMessage(zDialogs[zTalkCnt], { timeout: 2000 })\n        zTalkCnt += 1\n        return zTalkCnt < zDialogs.length ? null : 'next'\n      },\n      enter: () => {\n        this.zea.hasDialog = true\n      },\n      leave: () => {\n        this.zea.hasDialog = false\n      },\n    })\n    this.zea.onAction.push(zTalkHandler)\n    this.sm = new StateMachine(zTalk)\n\n    this.kernel.onInteract = () => {\n      this.zea.interact()\n    }\n\n    this.collisionMap = new CollisionMap(this.game.m, [16, 16])\n    this.command = new Map<string, boolean>()\n  }\n\n  start() {\n    const tickTimer = setInterval(this.tick.bind(this), 80)\n\n    this.dm.showMessage(\"What's poppin?\", { timeout: 5000 })\n\n    this.cleanup = () => {\n      clearInterval(tickTimer)\n    }\n  }\n\n  stop() {\n    if (this.cleanup) {\n      this.cleanup()\n    }\n  }\n\n  tick() {\n    this.ctx.fillStyle = 'black'\n    this.ctx.fillRect(0, 0, 640, 480)\n\n    try {\n      const kernelCmd = {\n        left: this.command.has('ArrowLeft'),\n        right: this.command.has('ArrowRight'),\n        space: this.command.has('Space'),\n      }\n      this.kernel.tick(kernelCmd, this.game.m, this.collisionMap)\n      this.bgOverlayAnime.tick()\n\n      const state = this.kernel.state\n      if (state.pos[1] > 16 * 18) {\n        this.kernel.reset()\n      }\n\n      this.zea.tick(state.pos)\n\n      const diffY = (state.pos[1] - this.origin[1]) / 1.25\n      if (this.viewpoint[1] < diffY - 16) {\n        this.viewpoint[1] += (diffY - 16 - this.viewpoint[1]) / 4\n      }\n      if (this.viewpoint[1] > diffY + 16) {\n        this.viewpoint[1] += (diffY + 16 - this.viewpoint[1]) / 4\n      }\n      const diffX =\n        (Math.round(((state.pos[0] - this.origin[0] - 6) * 3) / 640) * 640) / 3\n      this.viewpoint[0] += Math.max(\n        -50,\n        Math.min(50, (diffX - this.viewpoint[0]) / 2),\n      )\n\n      const offset = this.offset()\n\n      for (let x = 0; x < 640 / this.scale; x += 16) {\n        this.bgGrad.draw(\n          this.ctx,\n          [x, -1024 + 480 / this.scale - this.viewpoint[1] / 3 + 12],\n          this.scale,\n          0,\n          0,\n        )\n      }\n      this.game.m.draw(this.ctx, this.bgUnder, offset, this.scale, 'under')\n      this.game.m.draw(this.ctx, this.bg, offset, this.scale, 'main')\n      this.zea.draw(this.ctx, offset, this.scale)\n\n      this.kernel.draw(this.ctx, offset, this.scale)\n      this.game.m.draw(this.ctx, this.bgOverlay, offset, this.scale, 'overlay')\n      this.game.m.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n      this.game.m.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n\n      if (this.debugView) {\n        this.collisionMap.draw(this.ctx, offset, this.scale)\n      }\n    } catch (err) {\n      console.error(err)\n      this.stop()\n    }\n  }\n\n  private offset(): Vec2 {\n    return [-this.viewpoint[0], 110 - this.origin[1] - this.viewpoint[1]]\n  }\n\n  keydown(e: Pick<KeyboardEvent, 'code'>) {\n    this.command.set(e.code, true)\n  }\n\n  keyup(e: Pick<KeyboardEvent, 'code'>) {\n    if (this.command.has('F2')) {\n      this.debugView = !this.debugView\n    }\n    this.command.delete(e.code)\n  }\n\n  private newEventState<T>(state: State): [State, EventHandler<T>] {\n    const h = () => {\n      if (this.sm.current === state) {\n        this.sm.tick()\n      }\n    }\n    return [state, h]\n  }\n}\n\nexport default Game\n","import Game from './Game'\n\nexport default Game\n","export default __webpack_public_path__ + \"static/frame-ca82859c688250bcb14362e22a5d3408.svg\";","export default __webpack_public_path__ + \"static/frame_inner-60f1e379dcb3ddb7d26173360cdc65ba.svg\";","import React, { useEffect, useRef } from 'react'\nimport { css, keyframes } from '@emotion/react'\n\nimport Game from '@doramanjyu/z-game/game'\n\nimport frame from '@doramanjyu/z-game/images/frame.svg'\nimport frameInner from '@doramanjyu/z-game/images/frame_inner.svg'\nimport sprite from '@doramanjyu/z-game/images/sprite.png'\n\nconst IndexPage = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const spriteRef = useRef<HTMLImageElement>(null)\n  const messageRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!canvasRef.current || !spriteRef.current || !messageRef.current) {\n      return\n    }\n    const g = new Game(canvasRef.current, spriteRef.current, messageRef.current)\n    g.start()\n    const keydown = g.keydown.bind(g)\n    const keyup = g.keyup.bind(g)\n    document.addEventListener('keydown', keydown)\n    document.addEventListener('keyup', keyup)\n\n    const noPreventDefault = (e: TouchEvent): boolean => {\n      if (!e.target || !(e.target instanceof Element)) {\n        return false\n      }\n      return e.target.closest('a') !== null\n    }\n    let [tx, ty] = [0, 0]\n    let touching = false\n    const touchMoveThreshold = 32\n    const touchStart = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (!touching) {\n        tx = e.touches[0].screenX\n        ty = e.touches[0].screenY\n        touching = true\n      }\n    }\n    const touchMove = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches[0].screenY > ty + touchMoveThreshold) {\n        keydown({ code: 'Space' })\n      }\n      if (e.touches[0].screenX > tx + touchMoveThreshold) {\n        keydown({ code: 'ArrowLeft' })\n        keyup({ code: 'ArrowRight' })\n      } else if (e.touches[0].screenX < tx - touchMoveThreshold) {\n        keydown({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      } else {\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      }\n    }\n    const touchEnd = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches.length === 0) {\n        keyup({ code: 'Space' })\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n        touching = false\n      }\n    }\n\n    document.addEventListener('touchstart', touchStart)\n    document.addEventListener('touchmove', touchMove)\n    document.addEventListener('touchend', touchEnd)\n    document.addEventListener('touchcancel', touchEnd)\n\n    return () => {\n      document.removeEventListener('touchstart', touchStart)\n      document.removeEventListener('touchmove', touchMove)\n      document.removeEventListener('touchend', touchEnd)\n      document.removeEventListener('touchcancel', touchEnd)\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n      g.stop()\n    }\n  }, [canvasRef, spriteRef, messageRef])\n\n  return (\n    <main style={{ width: '788px', margin: '0 auto' }}>\n      <title>What's poppin?</title>\n      <h1 style={{ textAlign: 'center', margin: '3px' }}>UNDER DEVELOPMENT</h1>\n      <div\n        style={{\n          width: '788px',\n          height: '689px',\n          backgroundImage: `url(${frame})`,\n          position: 'relative',\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          style={{\n            backgroundColor: '#000',\n            width: '640px',\n            height: '480px',\n            borderRadius: '30px',\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n          css={css`\n            &:focus-visible {\n              outline-style: none !important;\n            }\n          `}\n          width=\"640\"\n          height=\"480\"\n        />\n        <div\n          style={{\n            width: '640px',\n            height: '480px',\n            backgroundImage: `url(${frameInner})`,\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n        />\n        <div\n          ref={messageRef}\n          style={{\n            boxSizing: 'border-box',\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderWidth: '2px',\n            borderStyle: 'dotted',\n            borderRadius: '0 20px 20px 20px',\n            borderColor: 'white',\n            position: 'absolute',\n            width: '540px',\n            height: '85px',\n            left: '124px',\n            bottom: '34px',\n            padding: '10px 20px',\n            fontSize: '20px',\n            lineHeight: '25px',\n            color: '#600',\n            display: 'none',\n            animationIterationCount: 1,\n            animationFillMode: 'forwards',\n          }}\n          css={css`\n            animation: ${bounceIn} 0.8s ease;\n            &.hide {\n              animation: ${bounceOut} 0.5s ease;\n            }\n          `}\n        ></div>\n      </div>\n      <img\n        ref={spriteRef}\n        src={sprite}\n        style={{\n          display: 'none',\n        }}\n      />\n      <div\n        style={{\n          paddingTop: '10px',\n          textAlign: 'right',\n          color: '#666',\n        }}\n        css={css`\n          > a {\n            color: #666;\n          }\n          > a:hover {\n            color: #999;\n          }\n        `}\n      >\n        <a\n          href=\"https://github.com/Doramanjyu/z-game\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source repository\n        </a>\n      </div>\n    </main>\n  )\n}\n\nconst bounceIn = keyframes`\n  from, 20%, 46%, 80%, to {\n    transform: translate3d(0,0,0);\n    visibility: visible;\n  }\n  40%, 42% {\n    transform: translate3d(0, -20px, 0);\n  }\n  70% {\n    transform: translate3d(0, -8px, 0);\n  }\n  90% {\n    transform: translate3d(0,-2px,0);\n  }\n`\n\nconst bounceOut = keyframes`\n  from, 50% {\n    transform: translate3d(0,0,0);\n  }\n  20% {\n    transform: translate3d(0,-2px,0);\n  }\n  70% {\n    transform: translate3d(0,-5px,0);\n  }\n  to {\n    visibility: hidden;\n  }\n`\n\nexport default IndexPage\n","export default __webpack_public_path__ + \"static/sprite-cd853a3e08192952875ad489b5b32e2b.png\";"],"names":["MapCell","v","typ","col","colDir","appearance","layer","this","heat","collision","topOffset","pol","top","push","right","bottom","left","headUpText","onAction","length","GameEventTarget","loadGameData","getItem","mw","mapData","mh","init","kernel","m","GameMap","x","y","t","tr","tl","tt","tb","c","main","under","overlay","overlayAnime","e","target","onArrive","sz","loader","s","screenSize","baseScale","data","Array","j","i","at","p","p2","posMod","Math","floor","set","draw","ctx","d","o","scale","cellRange","cw","ch","a","b","gw","round","gh","si2","ei2","sj2","_taggedTemplateLiteralLoose","strings","raw","slice","Sprite","sprite","prop","mode1","mode2","drawImage","topLeft","Anime","cnt","frame","propAnime","patterns","frames","reduce","acc","countDiv","tick","forceCnt","undefined","diff","cross","intersected","sa","ea","sb","eb","tolerance","c1","c2","c3","c4","CollisionMap","map","cellSz","scanned","intersection","check","min","max","motion","forEach","pp","k","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","xy","drawPolygon","poly","StateMachine","initial","current","nopState","states","Map","next","n","pop","Object","values","nextStates","has","leave","enter","console","log","reset","KernelState","pos","vel","onGround","orientation","jumpPow","popped","trans","clone","Kernel","state0","ellasticCoeff","anime","idle","squat","jump","currentAnime","shadow","explosion","state","explosionPos","explosionNum","headUpTextMode","interacting","cmd","gameMap","colMap","space","mpBottom","headUpTextModePrev","mpBottom0","cell","h","onInteract","offset","kernelMode","mode","heatCount","NPCState","ZEA","NPC","active","hasDialog","activePrev","abs","interact","DialogManager","messageBox","showMessage","text","opt","timeoutTimer","clearTimeout","innerHTML","style","display","classList","remove","timeout","setTimeout","hideMessage","bind","add","Game","canvas","self","getContext","imageSmoothingEnabled","dm","game","origin","viewpoint","debugView","bgUnder","bg","bgOverlay","bgOverlayAnime","bgGrad","zea","zDialogs","zTalkCnt","newEventState","zTalk","zTalkHandler","sm","collisionMap","command","start","tickTimer","setInterval","cleanup","clearInterval","stop","fillStyle","fillRect","kernelCmd","diffY","diffX","err","error","keydown","code","keyup","delete","bounceIn","keyframes","bounceOut","canvasRef","useRef","spriteRef","messageRef","useEffect","g","document","addEventListener","noPreventDefault","Element","closest","tx","ty","touching","touchStart","preventDefault","stopPropagation","touches","screenX","screenY","touchMove","touchEnd","removeEventListener","width","margin","textAlign","height","backgroundImage","position","ref","backgroundColor","borderRadius","css","frameInner","boxSizing","borderWidth","borderStyle","borderColor","padding","fontSize","lineHeight","color","animationIterationCount","animationFillMode","src","paddingTop","href","rel"],"sourceRoot":""}