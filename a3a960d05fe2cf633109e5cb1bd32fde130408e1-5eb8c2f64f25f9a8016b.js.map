{"version":3,"file":"a3a960d05fe2cf633109e5cb1bd32fde130408e1-5eb8c2f64f25f9a8016b.js","mappings":"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","sources":["webpack://z-game/./src/game/MapCell.ts","webpack://z-game/./src/game/GameData.ts","webpack://z-game/./src/game/events.ts","webpack://z-game/./src/game/lib/GameMap.ts","webpack://z-game/./src/images/sprite.png"],"sourcesContent":["import { Cell, Appearance } from './lib/GameMap'\nimport { Polygon } from './lib/vec'\n\nimport { GameEventTarget } from './events'\n\ntype CollisionDir = {\n  top: boolean\n  bottom: boolean\n  left: boolean\n  right: boolean\n}\n\nclass MapCell extends GameEventTarget<MapCell> implements Cell {\n  v: { [layer: string]: Appearance }\n  typ: number\n  colDir: CollisionDir\n  meta: string[]\n\n  constructor(\n    v: { [layer: string]: Appearance },\n    typ: number,\n    col: CollisionDir,\n    meta: string[],\n  ) {\n    super()\n    this.v = v\n    this.typ = typ\n    this.colDir = col\n    this.meta = meta\n  }\n\n  clone(): MapCell {\n    return new MapCell(\n      Object.keys(this.v).reduce((acc, k) => {\n        acc[k] = [...this.v[k]]\n        return acc\n      }, {} as { [layer: string]: Appearance }),\n      this.typ,\n      { ...this.colDir },\n      [...this.meta],\n    )\n  }\n\n  appearance(layer: string): Appearance {\n    return this.v[layer]\n  }\n\n  heat(): boolean {\n    return this.typ == 2\n  }\n\n  collision(): Polygon[] {\n    const topOffset = 0.05\n    const pol: Polygon[] = []\n    if (this.colDir.top) {\n      pol.push([\n        [0, topOffset],\n        [1, topOffset],\n      ])\n    }\n    if (this.colDir.right && this.colDir.bottom && !this.colDir.left) {\n      pol.push([\n        [1, topOffset],\n        [1, 0.9],\n        [0.3, 1.4],\n        [0, 1.4],\n      ])\n      return pol\n    }\n    if (this.colDir.left && this.colDir.bottom && !this.colDir.right) {\n      pol.push([\n        [1, 1.4],\n        [0.7, 1.4],\n        [0, 0.9],\n        [0, topOffset],\n      ])\n      return pol\n    }\n\n    if (this.colDir.right) {\n      pol.push([\n        [1, 0.1],\n        [1, 1.4],\n      ])\n    }\n    if (this.colDir.bottom) {\n      pol.push([\n        [1, 1.4],\n        [0, 1.4],\n      ])\n    }\n    if (this.colDir.left) {\n      pol.push([\n        [0, 1.4],\n        [0, 0.1],\n      ])\n    }\n\n    return pol\n  }\n\n  headUpText(): number {\n    if (this.onAction.length > 0) {\n      return 1\n    }\n    if (this.typ == 2) {\n      return 2\n    }\n    return 0\n  }\n}\n\nexport default MapCell\n","import GameMap from './lib/GameMap'\nimport { Vec2 } from './lib/vec'\n\nimport MapCell from './MapCell'\nimport { EventHandler } from './events'\n\nimport mapData from './data/map.yaml'\n\ntype Props = {\n  getItem: EventHandler<MapCell>\n}\n\ntype GameMetaData = {\n  init: {\n    kernel: Vec2\n  }\n  spawn: { [name: string]: Vec2 }\n}\n\ntype GameData = GameMetaData & {\n  m: GameMap<MapCell>\n}\n\nexport const importGameData = ({ getItem }: Props): GameData => {\n  const mw = mapData.main[0].length\n  const mh = mapData.main.length\n\n  const meta = (mapData.meta as Array<Array<Array<string>>>).reduce(\n    (out, row, j) =>\n      row.reduce(\n        (out, m, i) =>\n          m.reduce((out, d) => {\n            const n = d.split('.')\n            switch (n[0]) {\n              case 'init':\n                out.init = { kernel: [i * 16, j * 16] }\n                break\n              case 'spawn':\n                out.spawn[n[1]] = [i * 16, j * 16]\n                break\n            }\n            return out\n          }, out),\n        out,\n      ),\n    {\n      init: {\n        kernel: [0, 0],\n      },\n      spawn: {},\n    } as GameMetaData,\n  )\n\n  return {\n    ...meta,\n    m: new GameMap<MapCell>(\n      [mw, mh],\n      (x: number, y: number) => {\n        const t = mapData.type[y][x]\n        const tr = x + 1 > mw - 1 ? mw - 1 : mapData.type[y][x + 1]\n        const tl = x - 1 < 0 ? 0 : mapData.type[y][x - 1]\n        const tt = y - 1 < 0 ? 0 : mapData.type[y - 1][x]\n        const tb = y + 1 > mh - 1 ? mh - 1 : mapData.type[y + 1][x]\n        const col = {\n          top: t == 2 || t == 3 || (t == 1 && tt != 1),\n          bottom: t == 1 && tb != 1,\n          left: t == 1 && tl != 1,\n          right: t == 1 && tr != 1,\n        }\n        const items = (mapData.meta[y][x] as string[]).reduce<number[]>(\n          (acc, m) => {\n            const [t, v] = m.split('.')\n            if (t === 'item') {\n              acc.push(parseInt(v))\n            }\n            return acc\n          },\n          [],\n        )\n        const c = new MapCell(\n          {\n            main: [mapData.main[y][x][0], mapData.main[y][x][1]],\n            under: [mapData.under[y][x][0], mapData.under[y][x][1]],\n            overlay: [mapData.overlay[y][x][0], mapData.overlay[y][x][1]],\n            overlayAnime:\n              items.length > 0\n                ? [0, 2]\n                : [\n                    mapData.overlayAnime[y][x][0],\n                    mapData.overlayAnime[y][x][1],\n                  ],\n          },\n          t,\n          col,\n          mapData.meta[y][x],\n        )\n        if (items.length > 0) {\n          c.onAction.push((e) => {\n            c.onAction = []\n            e.target.v['overlayAnime'] = [0, 0]\n            getItem(e)\n          })\n        }\n        return c\n      },\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n    ),\n  }\n}\n\nexport const exportGameData = (g: GameData): Blob => {\n  const paddedArray = (a: Array<Array<string>>): string => {\n    const len = new Array<number>(g.m.sz[0])\n    a.forEach((r) =>\n      r.forEach((v, i) => {\n        if (!len[i] || len[i] < v.length) {\n          len[i] = v.length\n        }\n      }),\n    )\n    return a\n      .reduce((out, r) => {\n        out.push(\n          `  - [ ${r\n            .reduce<Array<string>>((acc, v, i) => {\n              const pad = len[i] - v.length\n              acc.push(`${' '.repeat(pad)}${v}`)\n              return acc\n            }, [])\n            .join(', ')} ]`,\n        )\n        return out\n      }, [])\n      .join('\\n')\n  }\n  const extractLayer = (layer: string) =>\n    [...Array(g.m.sz[1])].map((_, j) =>\n      [...Array(g.m.sz[0])].map((_, i) =>\n        JSON.stringify(g.m.at([i, j]).appearance(layer)),\n      ),\n    )\n  const extractMeta = () =>\n    [...Array(g.m.sz[1])].map((_, j) =>\n      [...Array(g.m.sz[0])].map((_, i) => JSON.stringify(g.m.at([i, j]).meta)),\n    )\n  const extractType = () =>\n    [...Array(g.m.sz[1])].map((_, j) =>\n      [...Array(g.m.sz[0])].map((_, i) => JSON.stringify(g.m.at([i, j]).typ)),\n    )\n\n  const data: { [key: string]: Array<Array<string>> } = {\n    meta: extractMeta(),\n    main: extractLayer('main'),\n    type: extractType(),\n    under: extractLayer('under'),\n    overlay: extractLayer('overlay'),\n    overlayAnime: extractLayer('overlayAnime'),\n  }\n\n  return new Blob(\n    [\n      Object.keys(data)\n        .map((k) => `${k}:\\n${paddedArray(data[k])}`)\n        .join('\\n') + '\\n',\n    ],\n    {\n      type: 'plain/text',\n    },\n  )\n}\n\nexport default GameData\n","export type EventHandler<T> = (e: GameEvent<T>) => void\n\nexport class GameEventTarget<T> {\n  onArrive: EventHandler<T>[]\n  onAction: EventHandler<T>[]\n\n  constructor() {\n    this.onArrive = []\n    this.onAction = []\n  }\n}\n\nexport type GameEvent<T> = {\n  target: T\n}\n","import { Drawer } from './Sprite'\nimport { Vec2, Polygon } from './vec'\n\nexport type Appearance = [number, number]\n\nexport interface Cell {\n  appearance(layer: string): Appearance\n}\n\nexport interface CollisionCell extends Cell {\n  collision(): Polygon[]\n}\n\nclass GameMap<T extends Cell> {\n  readonly sz: Vec2\n  readonly data: Array<T>\n  readonly s: Vec2\n  readonly e: Vec2\n  readonly screenSize: Vec2\n  readonly baseScale: number\n\n  constructor(\n    sz: Vec2,\n    loader: (x: number, y: number) => T,\n    s: Vec2,\n    e: Vec2,\n    screenSize: Vec2,\n    baseScale = 1,\n  ) {\n    this.sz = sz\n    this.s = s\n    this.e = e\n    this.screenSize = screenSize\n    this.baseScale = baseScale\n    this.data = new Array<T>(sz[0] * sz[1])\n    for (let j = 0; j < sz[1]; j++) {\n      for (let i = 0; i < sz[0]; i++) {\n        this.data[j * sz[0] + i] = loader(i, j)\n      }\n    }\n  }\n\n  at(p: Vec2): T {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    return this.data[p2[1] * this.sz[0] + p2[0]]\n  }\n\n  set(p: Vec2, v: T) {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    this.data[p2[1] * this.sz[0] + p2[0]] = v\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    d: Drawer,\n    o: Vec2,\n    scale: number,\n    layer: string,\n  ) {\n    const v = cellRange(\n      d.sz(),\n      this.s,\n      this.e,\n      o,\n      this.screenSize,\n      scale,\n      this.baseScale,\n    )\n    const [cw, ch] = d.sz()\n\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.at([i, j])\n        const a = c.appearance(layer)\n        d.draw(ctx, [v.o[0] + i * cw, v.o[1] + j * ch], scale, a[0], a[1])\n      }\n    }\n  }\n}\n\nconst posMod = (a: Vec2, b: Vec2): Vec2 => {\n  const m = [a[0] % b[0], a[1] % b[1]]\n  return [m[0] < 0 ? m[0] + b[0] : m[0], m[1] < 0 ? m[1] + b[1] : m[1]]\n}\n\nexport const cellRange = (\n  sz: Vec2,\n  s: Vec2,\n  e: Vec2,\n  o: Vec2,\n  screenSize: Vec2,\n  scale: number,\n  baseScale: number,\n): {\n  s: Vec2\n  e: Vec2\n  o: Vec2\n} => {\n  o[0] = Math.floor(o[0])\n  o[1] = Math.floor(o[1])\n\n  const gw = Math.round(screenSize[0] / (sz[0] * scale)) + 2\n  const gh = Math.round(screenSize[1] / (sz[1] * scale)) + 2\n\n  const left = o[0] + s[0] * sz[0] + sz[0]\n  const top = o[1] + s[1] * sz[1] + sz[1]\n\n  const si2 = left >= 0 ? s[0] : s[0] - Math.floor(left / sz[0]) - baseScale\n  const ei2 = si2 + gw + baseScale\n\n  const sj2 = top >= 0 ? s[1] : s[1] - Math.floor(top / sz[1]) - baseScale\n  const ej2 = sj2 + gh + baseScale\n\n  return {\n    s: [si2, sj2],\n    e: [ei2, ej2],\n    o,\n  }\n}\n\nexport default GameMap\n","export default __webpack_public_path__ + \"static/sprite-5542de2a02b35fcfa5775ad8bdf22b7e.png\";"],"names":["MapCell","v","typ","col","meta","colDir","clone","Object","keys","this","reduce","acc","k","appearance","layer","heat","collision","topOffset","pol","top","push","right","bottom","left","headUpText","onAction","length","GameEventTarget","importGameData","getItem","mw","mapData","mh","out","row","j","m","i","d","n","split","init","kernel","spawn","GameMap","x","y","t","tr","tl","tt","tb","items","parseInt","c","main","under","overlay","overlayAnime","e","target","exportGameData","g","extractLayer","Array","sz","map","_","JSON","stringify","at","data","type","Blob","a","len","forEach","r","pad","repeat","join","onArrive","loader","s","screenSize","baseScale","p","p2","posMod","Math","floor","set","draw","ctx","o","scale","cellRange","cw","ch","b","gw","round","gh","si2","ei2","sj2"],"sourceRoot":""}