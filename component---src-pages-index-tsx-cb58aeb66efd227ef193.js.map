{"version":3,"file":"component---src-pages-index-tsx-cb58aeb66efd227ef193.js","mappings":"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","sources":["webpack://z-game/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://z-game/./src/game/lib/Sprite.ts","webpack://z-game/./src/game/lib/Anime.ts","webpack://z-game/./src/game/lib/GameMap.ts","webpack://z-game/./src/game/lib/Vec.ts","webpack://z-game/./src/game/lib/Collision.ts","webpack://z-game/./src/game/Kernel.ts","webpack://z-game/./src/game/events.ts","webpack://z-game/./src/game/MapCell.ts","webpack://z-game/./src/game/NPC.ts","webpack://z-game/./src/game/ZEA.ts","webpack://z-game/./src/game/index.ts","webpack://z-game/./src/images/frame.svg","webpack://z-game/./src/images/frame_inner.svg","webpack://z-game/./src/images/sprite.png","webpack://z-game/./src/pages/index.tsx"],"sourcesContent":["export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { Vec2 } from './Vec'\n\nexport interface Drawer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    s: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ): void\n  sz(): Vec2\n}\n\nexport type SpriteProp = {\n  topLeft: Vec2\n  sz: Vec2\n  baseScale?: number\n}\n\nexport class Sprite implements Drawer {\n  readonly sprite: HTMLImageElement\n  readonly prop: Required<SpriteProp>\n\n  constructor(sprite: HTMLImageElement, prop: SpriteProp) {\n    this.sprite = sprite\n    this.prop = {\n      baseScale: 1,\n      ...prop,\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    ctx.drawImage(\n      this.sprite,\n      this.prop.topLeft[0] + mode1 * this.prop.sz[0],\n      this.prop.topLeft[1] + mode2 * this.prop.sz[1],\n      this.prop.sz[0],\n      this.prop.sz[1],\n      Math.floor(p[0] * scale),\n      Math.floor(p[1] * scale),\n      this.prop.sz[0] * scale * this.prop.baseScale,\n      this.prop.sz[1] * scale * this.prop.baseScale,\n    )\n  }\n\n  sz() {\n    return this.prop.sz\n  }\n}\n","import { Vec2 } from './Vec'\nimport { Sprite, SpriteProp, Drawer } from './Sprite'\n\nexport type AnimeProp = SpriteProp & {\n  frames: number[]\n  patterns?: number\n  countDiv?: number\n}\n\nexport class Anime extends Sprite implements Drawer {\n  readonly propAnime: AnimeProp\n  private readonly patterns: number\n  private readonly countDiv: number\n  private cnt = 0\n  frame = 0\n\n  constructor(sprite: HTMLImageElement, prop: AnimeProp) {\n    super(sprite, prop)\n    this.propAnime = prop\n    if (prop.patterns) {\n      this.patterns = prop.patterns\n    } else {\n      this.patterns = prop.frames.reduce((acc, v) => (acc > v ? acc : v), 0)\n    }\n    if (prop.countDiv) {\n      this.countDiv = prop.countDiv\n    } else {\n      this.countDiv = 1\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    super.draw(\n      ctx,\n      p,\n      scale,\n      this.propAnime.frames[this.frame] + this.patterns * mode2,\n      mode1,\n    )\n  }\n\n  tick(forceCnt?: number): number {\n    if (forceCnt !== undefined) {\n      this.cnt = forceCnt\n    }\n    this.frame = Math.floor(\n      (this.cnt / this.countDiv) % this.propAnime.frames.length,\n    )\n    this.cnt++\n    return this.propAnime.frames[this.frame]\n  }\n}\n","import { Drawer } from './Sprite'\nimport { Vec2, Polygon } from './Vec'\n\nexport type Appearance = {\n  mode1: number\n  mode2: number\n}\n\nexport interface Cell {\n  appearance(): Appearance\n}\n\nexport interface CollisionCell extends Cell {\n  collision(): Polygon[]\n}\n\nexport class GameMap<T extends Cell> {\n  readonly sz: Vec2\n  readonly data: Array<T>\n  readonly s: Vec2\n  readonly e: Vec2\n  readonly screenSize: Vec2\n  readonly baseScale: number\n\n  constructor(\n    sz: Vec2,\n    loader: (x: number, y: number) => T,\n    s: Vec2,\n    e: Vec2,\n    screenSize: Vec2,\n    baseScale = 1,\n  ) {\n    this.sz = sz\n    this.s = s\n    this.e = e\n    this.screenSize = screenSize\n    this.baseScale = baseScale\n    this.data = new Array<T>(sz[0] * sz[1])\n    for (let j = 0; j < sz[1]; j++) {\n      for (let i = 0; i < sz[0]; i++) {\n        this.data[j * sz[0] + i] = loader(i, j)\n      }\n    }\n  }\n\n  at(p: Vec2): T {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    return this.data[p2[1] * this.sz[0] + p2[0]]\n  }\n\n  set(p: Vec2, v: T) {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    this.data[p2[1] * this.sz[0] + p2[0]] = v\n  }\n\n  draw(ctx: CanvasRenderingContext2D, d: Drawer, o: Vec2, scale: number) {\n    const v = cellRange(\n      d.sz(),\n      this.s,\n      this.e,\n      o,\n      this.screenSize,\n      scale,\n      this.baseScale,\n    )\n    const [cw, ch] = d.sz()\n\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.at([i, j])\n        const a = c.appearance()\n        d.draw(ctx, [v.o[0] + i * cw, v.o[1] + j * ch], scale, a.mode1, a.mode2)\n      }\n    }\n  }\n}\n\nconst posMod = (a: Vec2, b: Vec2): Vec2 => {\n  const m = [a[0] % b[0], a[1] % b[1]]\n  return [m[0] < 0 ? m[0] + b[0] : m[0], m[1] < 0 ? m[1] + b[1] : m[1]]\n}\n\nexport const cellRange = (\n  sz: Vec2,\n  s: Vec2,\n  e: Vec2,\n  o: Vec2,\n  screenSize: Vec2,\n  scale: number,\n  baseScale: number,\n): {\n  s: Vec2\n  e: Vec2\n  o: Vec2\n} => {\n  o[0] = Math.floor(o[0])\n  o[1] = Math.floor(o[1])\n\n  const gw = Math.round(screenSize[0] / (sz[0] * scale)) + 2\n  const gh = Math.round(screenSize[1] / (sz[1] * scale)) + 2\n\n  const left = o[0] + s[0] * sz[0] + sz[0]\n  const top = o[1] + s[1] * sz[1] + sz[1]\n\n  const si2 = left >= 0 ? s[0] : s[0] - Math.floor(left / sz[0]) - baseScale + 1\n  const ei2 = si2 + gw + baseScale - 1\n\n  const sj2 = top >= 0 ? s[1] : s[1] - Math.floor(top / sz[1]) - baseScale + 1\n  const ej2 = sj2 + gh + baseScale - 1\n\n  return {\n    s: [si2, sj2],\n    e: [ei2, ej2],\n    o,\n  }\n}\n","export type Vec2 = [number, number]\nexport type Polygon = Vec2[]\n\nexport const diff = (a: Vec2, b: Vec2): Vec2 => [a[0] - b[0], a[1] - b[1]]\nexport const cross = (a: Vec2, b: Vec2): number => a[0] * b[1] - a[1] * b[0]\n\nexport const intersected = (\n  sa: Vec2,\n  ea: Vec2,\n  sb: Vec2,\n  eb: Vec2,\n  tolerance: number,\n): boolean => {\n  const a = diff(ea, sa)\n  const b = diff(eb, sb)\n  const c1 = cross(a, diff(sb, sa))\n  const c2 = cross(a, diff(eb, sa))\n  const c3 = cross(b, diff(sa, sb))\n  const c4 = cross(b, diff(ea, sb))\n  return c1 < tolerance && c2 > -tolerance && c3 > -tolerance && c4 < tolerance\n}\n\nexport const norm = (a: Vec2): number => Math.sqrt(a[0] * a[0] + a[1] * a[1])\n","import { CollisionCell, GameMap, cellRange } from './GameMap'\nimport { Vec2, Polygon, intersected } from './Vec'\n\ntype CollisionState = {\n  right: boolean\n  left: boolean\n\n  bottom?: number\n  top?: number\n}\n\nexport class CollisionMap {\n  readonly map: GameMap<CollisionCell>\n  readonly cellSz: Vec2\n\n  private scanned: Polygon[]\n  private intersection: Polygon[]\n  private motion?: Polygon\n\n  constructor(map: GameMap<CollisionCell>, cellSz: Vec2) {\n    this.map = map\n    this.cellSz = cellSz\n    this.scanned = []\n    this.intersection = []\n  }\n\n  check(a: Vec2, b: Vec2): CollisionState {\n    const col: CollisionState = {\n      right: false,\n      left: false,\n    }\n    const s: Vec2 = [\n      Math.floor(Math.min(a[0], b[0]) / this.cellSz[0] - 0.5),\n      Math.floor(Math.min(a[1], b[1]) / this.cellSz[1] - 0.5),\n    ]\n    const e: Vec2 = [\n      Math.floor(Math.max(a[0], b[0]) / this.cellSz[0] + 0.5),\n      Math.floor(Math.max(a[1], b[1]) / this.cellSz[1] + 0.5),\n    ]\n    const motion: [Vec2, Vec2] = [\n      [a[0] / this.cellSz[0], a[1] / this.cellSz[1]],\n      [b[0] / this.cellSz[0], b[1] / this.cellSz[1]],\n    ]\n    this.motion = motion\n    for (let j = s[1]; j < e[1] + 1; j++) {\n      for (let i = s[0]; i < e[0] + 1; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          const pol = pp.reduce<Polygon>(\n            (acc, p) => (acc.push([i + p[0], j + p[1]]), acc),\n            [],\n          )\n          pol.length > 0 && this.scanned.push(pol)\n          for (let k = 0; k < pol.length - 1; k++) {\n            if (!intersected(pol[k], pol[k + 1], motion[0], motion[1], 0.005)) {\n              continue\n            }\n            if (pol[k][0] > pol[k + 1][0]) {\n              col.top = pol[k][1] + 0.01\n            } else if (pol[k][0] < pol[k + 1][0]) {\n              col.bottom = pol[k][1] - 0.01\n            }\n            if (pol[k][1] > pol[k + 1][1]) {\n              col.right = true\n            } else if (pol[k][1] < pol[k + 1][1]) {\n              col.left = true\n            }\n            this.intersection.push([pol[k], pol[k + 1]])\n          }\n        })\n      }\n    }\n    return col\n  }\n\n  draw(ctx: CanvasRenderingContext2D, o: Vec2, scale: number) {\n    ctx.strokeStyle = 'white'\n    ctx.lineWidth = 1\n\n    const v = cellRange(\n      this.map.sz,\n      this.map.s,\n      this.map.e,\n      o,\n      this.map.screenSize,\n      scale,\n      1,\n    )\n    const [cw, ch] = this.cellSz\n\n    ctx.beginPath()\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          pp.forEach((p, c) => {\n            const [x, y] = [\n              (v.o[0] + cw * (i + p[0])) * scale,\n              (v.o[1] + ch * (j + p[1])) * scale,\n            ]\n            c == 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y)\n          })\n          ctx.stroke()\n        })\n      }\n    }\n    ctx.closePath()\n\n    const xy = (p: Vec2): Vec2 => [\n      (v.o[0] + cw * p[0]) * scale,\n      (v.o[1] + ch * p[1]) * scale,\n    ]\n    const drawPolygon = (poly: Polygon[]) => {\n      ctx.beginPath()\n      poly.forEach((pp) => {\n        pp.forEach((p, c) =>\n          c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n        )\n        ctx.stroke()\n      })\n      ctx.closePath()\n    }\n\n    ctx.strokeStyle = 'yellow'\n    ctx.lineWidth = 1\n    drawPolygon(this.scanned)\n    this.scanned = []\n\n    ctx.strokeStyle = 'orange'\n    ctx.lineWidth = 5\n    drawPolygon(this.intersection)\n    this.intersection = []\n\n    if (this.motion) {\n      ctx.strokeStyle = 'red'\n      ctx.lineWidth = 4\n      ctx.beginPath()\n      this.motion.forEach((p, c) =>\n        c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n      )\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n","import { Anime } from './lib/Anime'\nimport { Sprite } from './lib/Sprite'\nimport { Vec2 } from './lib/Vec'\nimport { GameMap } from './lib/GameMap'\nimport { CollisionMap } from './lib/Collision'\n\nimport { MapCell } from './MapCell'\n\nconst heatCount = 8\nconst popResume = 96\n\ntype KernelCommand = {\n  left: boolean\n  right: boolean\n  space: boolean\n}\n\ntype InitialKernelState = {\n  pos?: Vec2\n  vel?: Vec2\n  onGround?: boolean\n  orientation?: number\n}\n\nclass KernelState {\n  pos: Vec2\n  vel: Vec2\n  onGround: boolean\n  orientation: number\n\n  jumpPow: Vec2\n  heat: number\n  popped: number\n  trans: number\n\n  constructor(s: InitialKernelState) {\n    this.pos = s.pos || [0, 0]\n    this.vel = s.vel || [0, 0]\n    this.onGround = s.onGround || true\n    this.orientation = s.orientation || 0\n    this.jumpPow = [0, 0]\n    this.heat = 0\n    this.popped = 0\n    this.trans = 0\n  }\n\n  clone(): KernelState {\n    return {\n      ...this,\n      pos: [this.pos[0], this.pos[1]],\n      vel: [this.vel[0], this.vel[1]],\n      jumpPow: [this.jumpPow[0], this.jumpPow[1]],\n    }\n  }\n}\n\nexport class Kernel {\n  private readonly anime: {\n    idle: Anime\n    squat: Anime\n    jump: Anime\n  }\n  private readonly shadow: Sprite\n  private readonly trans: Sprite\n  private readonly explosion: Sprite\n  private readonly headUpText: Anime\n  private readonly ellasticCoeff: number\n  private currentAnime: Anime\n  private state0: KernelState\n\n  state: KernelState\n  explosionPos: Vec2\n  explosionNum: number\n  headUpTextMode: number\n\n  constructor(sprite: HTMLImageElement, state0: InitialKernelState) {\n    this.ellasticCoeff = 0.5\n\n    this.anime = {\n      idle: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [0, 0, 0, 2, 0, 1, 0],\n        patterns: 4,\n      }),\n      squat: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [3],\n        patterns: 4,\n      }),\n      jump: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [2, 2, 0, 2, 2, 2, 0],\n        patterns: 4,\n      }),\n    }\n    this.currentAnime = this.anime.idle\n    this.shadow = new Sprite(sprite, {\n      topLeft: [0, 24],\n      sz: [12, 12],\n    })\n    this.trans = new Sprite(sprite, {\n      topLeft: [0, 36],\n      sz: [12, 12],\n    })\n    this.explosion = new Sprite(sprite, {\n      topLeft: [0, 48],\n      sz: [36, 12],\n    })\n    this.headUpText = new Anime(sprite, {\n      topLeft: [0, 60],\n      sz: [24, 12],\n      frames: [0, 1],\n      patterns: 2,\n      countDiv: 8,\n    })\n\n    this.state0 = new KernelState(state0)\n    this.state = this.state0.clone()\n\n    this.explosionPos = this.state.pos\n    this.explosionNum = 0\n    this.headUpTextMode = 0\n  }\n\n  reset() {\n    this.state = this.state0.clone()\n  }\n\n  tick(cmd: KernelCommand, gameMap: GameMap<MapCell>, colMap: CollisionMap) {\n    if (cmd.left && this.state.onGround) {\n      this.state.jumpPow[0]--\n      if (this.state.jumpPow[0] < -4) {\n        this.state.jumpPow[0] = -4\n      }\n      this.state.orientation = 0\n    }\n    if (cmd.right && this.state.onGround) {\n      this.state.jumpPow[0]++\n      if (this.state.jumpPow[0] > 4) {\n        this.state.jumpPow[0] = 4\n      }\n      this.state.orientation = 1\n    }\n    if (\n      !cmd.left &&\n      !cmd.right &&\n      !cmd.space &&\n      this.state.onGround &&\n      this.state.jumpPow[0] !== 0 &&\n      this.state.jumpPow[1] === 0\n    ) {\n      this.state.onGround = false\n      this.state.vel = [this.state.jumpPow[0], -4]\n      this.state.jumpPow = [0, 0]\n    }\n    if (!cmd.space || !this.state.onGround) {\n      const mpBottom0: Vec2 = [\n        Math.round((this.state.pos[0] - 2) / 16),\n        Math.floor(this.state.pos[1] / 16),\n      ]\n      const cell = gameMap.at(mpBottom0)\n      if (\n        this.state.jumpPow[0] == 0 &&\n        this.state.jumpPow[1] < 0 &&\n        this.state.jumpPow[1] > -4 &&\n        cell.onAction\n      ) {\n        cell.onAction({ target: cell })\n      } else if (!cmd.space && this.state.jumpPow[1] < 0) {\n        this.state.onGround = false\n        if (this.state.popped == 0) {\n          this.state.vel = this.state.jumpPow\n        } else {\n          this.state.vel = [this.state.jumpPow[0], this.state.jumpPow[1] * 0.5]\n        }\n        this.state.jumpPow = [0, 0]\n      } else if (!this.state.onGround) {\n        if (this.state.popped == 0) {\n          this.state.vel[1] += 2\n        } else {\n          this.state.vel[1] += 1.5\n        }\n        if (this.state.vel[1] > 14) {\n          this.state.vel[1] = 14\n        }\n      }\n    }\n\n    const mpBottom: Vec2 = [\n      Math.round((this.state.pos[0] - 2) / 16),\n      Math.floor(this.state.pos[1] / 16),\n    ]\n    const col = colMap.check(\n      [this.state.pos[0] + 6, this.state.pos[1]],\n      [\n        this.state.pos[0] + this.state.vel[0] + 6,\n        this.state.pos[1] + this.state.vel[1],\n      ],\n    )\n    const headUpTextModePrev = this.headUpTextMode\n    this.headUpTextMode = gameMap.at(mpBottom).headUpText()\n    if (this.headUpTextMode > 0 && headUpTextModePrev == 0) {\n      this.headUpText.tick(0)\n    }\n\n    this.currentAnime = this.anime.idle\n    if (cmd.space && this.state.onGround) {\n      this.currentAnime = this.anime.squat\n      this.state.jumpPow[1] -= 2\n      if (this.state.jumpPow[1] < -11) {\n        this.state.jumpPow[1] = -11\n      }\n    } else if (!this.state.onGround) {\n      if (col.top && this.state.vel[1] < 0) {\n        this.state.vel[1] *= -this.ellasticCoeff\n        this.state.vel[0] *= this.ellasticCoeff\n        this.state.pos[1] = col.top * 16\n      }\n      if (\n        (col.left && this.state.vel[0] < 0) ||\n        (col.right && this.state.vel[0] > 0)\n      ) {\n        this.state.vel[0] *= -this.ellasticCoeff\n        this.state.pos[0] += this.state.vel[0]\n      }\n      if (col.bottom && this.state.vel[1] >= 0) {\n        this.state.pos[1] = col.bottom * 16\n        this.state.vel = [0, 0]\n        this.state.onGround = true\n        this.currentAnime = this.anime.squat\n      }\n      if (this.state.vel[1] < 0) {\n        this.currentAnime = this.anime.jump\n      } else if (this.state.vel[1] > 0) {\n        this.currentAnime = this.anime.squat\n      }\n    }\n\n    this.state.pos[0] += this.state.vel[0]\n    this.state.pos[1] += this.state.vel[1]\n\n    if (this.explosionNum && this.explosionNum > 0) {\n      this.explosionNum--\n      if (this.explosionNum == 2) {\n        this.state.heat = 5 * heatCount\n        this.state.popped = popResume\n\n        this.state.onGround = false\n        this.state.vel = [0, -17]\n        this.state.jumpPow = [0, 0]\n      }\n    } else if (gameMap.at(mpBottom).heat()) {\n      this.state.heat++\n      if (this.state.heat > 5 * heatCount - 2 && this.state.popped == 0) {\n        this.explosionPos = [this.state.pos[0], this.state.pos[1]]\n        this.explosionNum = 3\n      }\n    } else {\n      this.state.heat--\n      if (this.state.heat < 0) {\n        this.state.heat = 0\n      }\n      if (this.state.popped > 0) {\n        this.state.popped--\n        this.state.heat = 0\n        if (this.state.popped < 0) {\n          this.state.popped = 0\n        }\n      }\n    }\n    if (this.state.trans < 8) {\n      this.state.trans++\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const kernelMode = this.currentAnime.tick()\n    if (this.headUpTextMode > 0) {\n      this.headUpText.tick()\n    }\n    const mode =\n      (this.state.popped > 0 && this.state.popped != 2) ||\n      this.state.heat == heatCount * 5 - 1\n        ? 5\n        : Math.min(4, Math.floor(this.state.heat / heatCount))\n    if (this.state.onGround) {\n      this.shadow.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        mode * 4 + kernelMode,\n        0,\n      )\n    }\n    if (this.state.trans > 2) {\n      this.currentAnime.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 6],\n        scale,\n        this.state.orientation,\n        mode,\n      )\n    }\n    if (this.state.trans < 8) {\n      this.trans.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        this.state.trans - 2,\n        0,\n      )\n    }\n    if (this.explosionNum > 0) {\n      this.explosion.draw(\n        ctx,\n        [\n          offset[0] + this.explosionPos[0] - 12,\n          offset[1] + this.explosionPos[1] - 8,\n        ],\n        scale,\n        3 - this.explosionNum,\n        0,\n      )\n    }\n    if (this.headUpTextMode > 0) {\n      this.headUpText.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 15],\n        scale,\n        0,\n        this.headUpTextMode - 1,\n      )\n    }\n  }\n}\n","export class GameEventTarget<T> {\n  onArrive?: (e: GameEvent<T>) => void\n  onAction?: (e: GameEvent<T>) => void\n}\n\nexport type GameEvent<T> = {\n  target: T\n}\n","import { Cell, Appearance } from './lib/GameMap'\nimport { Polygon } from './lib/Vec'\n\nimport { GameEventTarget } from './events'\n\ntype CollisionDir = {\n  top: boolean\n  bottom: boolean\n  left: boolean\n  right: boolean\n}\n\nexport class MapCell extends GameEventTarget<MapCell> implements Cell {\n  readonly v: Appearance\n  readonly typ: number\n  readonly colDir: CollisionDir\n\n  constructor(mode1: number, mode2: number, typ: number, col: CollisionDir) {\n    super()\n    this.v = { mode1, mode2 }\n    this.typ = typ\n    this.colDir = col\n  }\n\n  appearance(): Appearance {\n    return this.v\n  }\n\n  heat(): boolean {\n    return this.typ == 2\n  }\n\n  collision(): Polygon[] {\n    const topOffset = 0.05\n    const pol: Polygon[] = []\n    if (this.colDir.top) {\n      pol.push([\n        [0, topOffset],\n        [1, topOffset],\n      ])\n    }\n    if (this.colDir.right && this.colDir.bottom && !this.colDir.left) {\n      pol.push([\n        [1, topOffset],\n        [1, 0.9],\n        [0.3, 1.4],\n        [0, 1.4],\n      ])\n      return pol\n    }\n    if (this.colDir.left && this.colDir.bottom && !this.colDir.right) {\n      pol.push([\n        [1, 1.4],\n        [0.7, 1.4],\n        [0, 0.9],\n        [0, topOffset],\n      ])\n      return pol\n    }\n\n    if (this.colDir.right) {\n      pol.push([\n        [1, 0.1],\n        [1, 1.4],\n      ])\n    }\n    if (this.colDir.bottom) {\n      pol.push([\n        [1, 1.4],\n        [0, 1.4],\n      ])\n    }\n    if (this.colDir.left) {\n      pol.push([\n        [0, 1.4],\n        [0, 0.1],\n      ])\n    }\n\n    return pol\n  }\n\n  headUpText(): number {\n    if (this.onAction) {\n      return 1\n    }\n    if (this.typ == 2) {\n      return 2\n    }\n    return 0\n  }\n}\n\nexport class OverlayMapCell implements Cell {\n  v: Appearance\n\n  constructor(mode1: number, mode2: number) {\n    this.v = { mode1, mode2 }\n  }\n\n  appearance(): Appearance {\n    return this.v\n  }\n}\n","import { Anime } from './lib/Anime'\nimport { Vec2 } from './lib/Vec'\n\nimport { GameEventTarget } from './events'\n\nexport class NPCState {\n  pos: Vec2\n  mode: number\n\n  constructor(s: InitialNPCState) {\n    this.pos = s.pos || [0, 0]\n    this.mode = s.mode || 0\n  }\n}\n\nexport type InitialNPCState = {\n  pos?: Vec2\n  mode?: number\n}\n\nexport class NPC<State extends NPCState = NPCState> extends GameEventTarget<\n  NPC<State>\n> {\n  private readonly anime: Anime\n  private readonly headUpText: Anime\n  state: State\n  active: boolean\n\n  constructor(anime: Anime, headUpText: Anime, s: State) {\n    super()\n    this.anime = anime\n    this.headUpText = headUpText\n    this.state = s\n    this.active = false\n  }\n\n  tick(p: Vec2) {\n    const sz = this.anime.sz()\n    const activePrev = this.active\n    this.active =\n      Math.abs(p[0] - this.state.pos[0]) < sz[0] / 2 &&\n      Math.abs(p[1] - this.state.pos[1]) < sz[1] / 2\n\n    if (!activePrev && this.active && this.onArrive) {\n      this.onArrive({ target: this })\n    }\n\n    this.anime.tick()\n    this.headUpText.tick()\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const sz = this.anime.sz()\n    this.anime.draw(\n      ctx,\n      [\n        offset[0] + this.state.pos[0] - sz[0] / 2,\n        offset[1] + this.state.pos[1] - sz[1] + 6,\n      ],\n      scale,\n      0,\n      this.state.mode,\n    )\n    if (this.onArrive || this.onAction) {\n      this.headUpText.draw(\n        ctx,\n        [\n          offset[0] + this.state.pos[0] - sz[0] / 2,\n          offset[1] + this.state.pos[1] - sz[1] + 4,\n        ],\n        scale,\n        0,\n        2 + (this.active ? 1 : 0),\n      )\n    }\n  }\n}\n","import { Anime } from './lib/Anime'\n\nimport { NPC, NPCState, InitialNPCState } from './NPC'\n\nexport class ZEA extends NPC {\n  constructor(sprite: HTMLImageElement, state0: InitialNPCState) {\n    super(\n      new Anime(sprite, {\n        topLeft: [0, 72],\n        sz: [24, 24],\n        frames: [\n          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,\n          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2,\n          2, 2, 2, 2, 2, 2, 2, 2,\n        ],\n        patterns: 5,\n      }),\n      new Anime(sprite, {\n        topLeft: [0, 60],\n        sz: [24, 12],\n        frames: [0, 1],\n        patterns: 2,\n        countDiv: 8,\n      }),\n      new NPCState(state0),\n    )\n  }\n}\n","import { Sprite } from './lib/Sprite'\nimport { Anime } from './lib/Anime'\nimport { GameMap } from './lib/GameMap'\nimport { CollisionMap } from './lib/Collision'\nimport { Vec2 } from './lib/Vec'\n\nimport { Kernel } from './Kernel'\nimport { MapCell, OverlayMapCell } from './MapCell'\nimport { ZEA } from './ZEA'\n\nimport mapData from './data/map.yaml'\n\nclass Game {\n  readonly canvas: HTMLCanvasElement\n  readonly ctx: CanvasRenderingContext2D\n  readonly sprite: HTMLImageElement\n  readonly messageBox: HTMLDivElement\n  cleanup?: () => void\n\n  readonly scale: number\n\n  readonly gameMap: GameMap<MapCell>\n  readonly underMap: GameMap<OverlayMapCell>\n  readonly overlayMap: GameMap<OverlayMapCell>\n  readonly overlayAnimeMap: GameMap<OverlayMapCell>\n  readonly bgUnder: Sprite\n  readonly bg: Sprite\n  readonly bgOverlay: Sprite\n  readonly bgOverlayAnime: Anime\n  readonly bgGrad: Sprite\n  readonly kernel: Kernel\n  readonly collisionMap: CollisionMap\n  readonly zea: ZEA\n\n  command: Map<string, boolean>\n\n  origin: Vec2\n  viewpoint: Vec2\n  debugView: boolean\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    sprite: HTMLImageElement,\n    messageBox: HTMLDivElement,\n  ) {\n    const self = this\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw 'failed to get canvas context'\n    }\n    this.ctx = ctx\n    this.canvas = canvas\n    this.ctx.imageSmoothingEnabled = false\n    this.sprite = sprite\n    this.messageBox = messageBox\n\n    this.scale = 3\n    this.origin = [mapData.start.pos[0] * 16, mapData.start.pos[1] * 16]\n    this.viewpoint = [0, 0]\n    this.debugView = false\n\n    this.kernel = new Kernel(this.sprite, {\n      pos: this.origin,\n    })\n    this.bgUnder = new Sprite(this.sprite, {\n      topLeft: [512, 512],\n      sz: [16, 16],\n      baseScale: 2,\n    })\n    this.bg = new Sprite(this.sprite, {\n      topLeft: [0, 512],\n      sz: [16, 16],\n    })\n    this.bgOverlay = new Sprite(this.sprite, {\n      topLeft: [0, 896],\n      sz: [16, 16],\n    })\n    this.bgOverlayAnime = new Anime(this.sprite, {\n      topLeft: [0, 768],\n      sz: [16, 16],\n      frames: [0, 0, 1, 1, 2, 2, 1, 1],\n    })\n    this.bgGrad = new Sprite(this.sprite, {\n      topLeft: [1024 - 16, 0],\n      sz: [16, 1024],\n    })\n    this.zea = new ZEA(this.sprite, {\n      pos: [70, 48],\n      mode: 1,\n    })\n    this.zea.onArrive = () => {\n      self.showMessage('Hemlo')\n      setTimeout(() => {\n        self.hideMessage()\n      }, 2000)\n    }\n\n    const mw = mapData.main[0].length\n    const mh = mapData.main.length\n    this.gameMap = new GameMap<MapCell>(\n      [mw, mh],\n      (x: number, y: number) => {\n        const t = mapData.type[y][x]\n        const tr = x + 1 > mw - 1 ? mw - 1 : mapData.type[y][x + 1]\n        const tl = x - 1 < 0 ? 0 : mapData.type[y][x - 1]\n        const tt = y - 1 < 0 ? 0 : mapData.type[y - 1][x]\n        const tb = y + 1 > mh - 1 ? mh - 1 : mapData.type[y + 1][x]\n        const col = {\n          top: t == 2 || t == 3 || (t == 1 && tt != 1),\n          bottom: t == 1 && tb != 1,\n          left: t == 1 && tl != 1,\n          right: t == 1 && tr != 1,\n        }\n        const c = new MapCell(\n          mapData.main[y][x][1],\n          mapData.main[y][x][0],\n          t,\n          col,\n        )\n        if (mapData.item[y][x] > 0) {\n          c.onAction = () => {\n            c.onAction = undefined\n            self.overlayAnimeMap.set([x, y], new OverlayMapCell(0, 0))\n            self.showMessage('Yum Yum')\n            setTimeout(() => {\n              self.hideMessage()\n            }, 2000)\n          }\n        }\n        return c\n      },\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n    )\n    this.collisionMap = new CollisionMap(this.gameMap, [16, 16])\n    this.underMap = new GameMap<OverlayMapCell>(\n      [mw, mh],\n      (x: number, y: number) =>\n        new OverlayMapCell(mapData.under[y][x][1], mapData.under[y][x][0]),\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n      2,\n    )\n    this.overlayMap = new GameMap<OverlayMapCell>(\n      [mw, mh],\n      (x: number, y: number) =>\n        new OverlayMapCell(mapData.overlay[y][x][1], mapData.overlay[y][x][0]),\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n    )\n    this.overlayAnimeMap = new GameMap<OverlayMapCell>(\n      [mw, mh],\n      (x: number, y: number) => {\n        if (mapData.item[y][x] > 0) {\n          return new OverlayMapCell(2, 0)\n        }\n        return new OverlayMapCell(\n          mapData.overlayAnime[y][x][1],\n          mapData.overlayAnime[y][x][0],\n        )\n      },\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n    )\n    this.command = new Map<string, boolean>()\n  }\n\n  start() {\n    const tickTimer = setInterval(this.tick.bind(this), 80)\n\n    this.showMessage(\"What's poppin?\")\n    setTimeout(this.hideMessage.bind(this), 5000)\n\n    this.cleanup = () => {\n      clearInterval(tickTimer)\n    }\n  }\n\n  stop() {\n    if (this.cleanup) {\n      this.cleanup()\n    }\n  }\n\n  tick() {\n    this.ctx.fillStyle = 'black'\n    this.ctx.fillRect(0, 0, 640, 480)\n\n    try {\n      const kernelCmd = {\n        left: this.command.has('ArrowLeft'),\n        right: this.command.has('ArrowRight'),\n        space: this.command.has('Space'),\n      }\n      this.kernel.tick(kernelCmd, this.gameMap, this.collisionMap)\n      this.bgOverlayAnime.tick()\n\n      const state = this.kernel.state\n      if (state.pos[1] > 16 * 18) {\n        this.kernel.reset()\n      }\n\n      this.zea.tick(state.pos)\n\n      const diffY = (state.pos[1] - this.origin[1]) / 1.25\n      if (this.viewpoint[1] < diffY - 16) {\n        this.viewpoint[1] += (diffY - 16 - this.viewpoint[1]) / 4\n      }\n      if (this.viewpoint[1] > diffY + 16) {\n        this.viewpoint[1] += (diffY + 16 - this.viewpoint[1]) / 4\n      }\n      const diffX =\n        (Math.round(((state.pos[0] - this.origin[0] - 6) * 3) / 640) * 640) / 3\n      this.viewpoint[0] += Math.max(\n        -50,\n        Math.min(50, (diffX - this.viewpoint[0]) / 2),\n      )\n\n      const offset: Vec2 = [\n        -this.viewpoint[0],\n        110 - this.origin[1] - this.viewpoint[1],\n      ]\n\n      for (let x = 0; x < 640 / this.scale; x += 16) {\n        this.bgGrad.draw(\n          this.ctx,\n          [x, -1024 + 480 / this.scale - this.viewpoint[1] / 3 + 12],\n          this.scale,\n          0,\n          0,\n        )\n      }\n      this.underMap.draw(this.ctx, this.bgUnder, offset, this.scale)\n      this.gameMap.draw(this.ctx, this.bg, offset, this.scale)\n      this.zea.draw(this.ctx, offset, this.scale)\n\n      this.kernel.draw(this.ctx, offset, this.scale)\n      this.overlayMap.draw(this.ctx, this.bgOverlay, offset, this.scale)\n      this.overlayAnimeMap.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n      )\n\n      if (this.debugView) {\n        this.collisionMap.draw(this.ctx, offset, this.scale)\n      }\n    } catch (err) {\n      console.error(err)\n      this.stop()\n    }\n  }\n\n  keydown(e: Pick<KeyboardEvent, 'code'>) {\n    this.command.set(e.code, true)\n  }\n  keyup(e: Pick<KeyboardEvent, 'code'>) {\n    if (this.command.has('F2')) {\n      this.debugView = !this.debugView\n    }\n    this.command.delete(e.code)\n  }\n\n  private showMessage(text: string) {\n    this.messageBox.innerText = text\n    this.messageBox.style.display = 'block'\n    this.messageBox.classList.remove('hide')\n  }\n  private hideMessage() {\n    this.messageBox.classList.add('hide')\n  }\n}\n\nexport default Game\n","export default __webpack_public_path__ + \"static/frame-ca82859c688250bcb14362e22a5d3408.svg\";","export default __webpack_public_path__ + \"static/frame_inner-60f1e379dcb3ddb7d26173360cdc65ba.svg\";","export default __webpack_public_path__ + \"static/sprite-146f66d3b2b93bcaebee56e562a3f55c.png\";","import React, { useEffect, useRef } from 'react'\nimport { css, keyframes } from '@emotion/react'\n\nimport Game from '@doramanjyu/z-game/game'\n\nimport frame from '@doramanjyu/z-game/images/frame.svg'\nimport frameInner from '@doramanjyu/z-game/images/frame_inner.svg'\nimport sprite from '@doramanjyu/z-game/images/sprite.png'\n\nconst IndexPage = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const spriteRef = useRef<HTMLImageElement>(null)\n  const messageRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!canvasRef.current || !spriteRef.current || !messageRef.current) {\n      return\n    }\n    const g = new Game(canvasRef.current, spriteRef.current, messageRef.current)\n    g.start()\n    const keydown = g.keydown.bind(g)\n    const keyup = g.keyup.bind(g)\n    document.addEventListener('keydown', keydown)\n    document.addEventListener('keyup', keyup)\n\n    const noPreventDefault = (e: TouchEvent): boolean => {\n      if (!e.target || !(e.target instanceof Element)) {\n        return false\n      }\n      return e.target.closest('a') !== null\n    }\n    let [tx, ty] = [0, 0]\n    let touching = false\n    const touchMoveThreshold = 32\n    const touchStart = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (!touching) {\n        tx = e.touches[0].screenX\n        ty = e.touches[0].screenY\n        touching = true\n      }\n    }\n    const touchMove = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches[0].screenY > ty + touchMoveThreshold) {\n        keydown({ code: 'Space' })\n      }\n      if (e.touches[0].screenX > tx + touchMoveThreshold) {\n        keydown({ code: 'ArrowLeft' })\n        keyup({ code: 'ArrowRight' })\n      } else if (e.touches[0].screenX < tx - touchMoveThreshold) {\n        keydown({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      } else {\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      }\n    }\n    const touchEnd = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches.length === 0) {\n        keyup({ code: 'Space' })\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n        touching = false\n      }\n    }\n\n    document.addEventListener('touchstart', touchStart)\n    document.addEventListener('touchmove', touchMove)\n    document.addEventListener('touchend', touchEnd)\n    document.addEventListener('touchcancel', touchEnd)\n\n    return () => {\n      document.removeEventListener('touchstart', touchStart)\n      document.removeEventListener('touchmove', touchMove)\n      document.removeEventListener('touchend', touchEnd)\n      document.removeEventListener('touchcancel', touchEnd)\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n      g.stop()\n    }\n  }, [canvasRef, spriteRef, messageRef])\n\n  return (\n    <main>\n      <title>What's poppin?</title>\n      <h1 style={{ textAlign: 'center', margin: '3px' }}>UNDER DEVELOPMENT</h1>\n      <div\n        style={{\n          width: '788px',\n          height: '689px',\n          backgroundImage: `url(${frame})`,\n          position: 'relative',\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          style={{\n            backgroundColor: '#000',\n            width: '640px',\n            height: '480px',\n            borderRadius: '30px',\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n          css={css`\n            &:focus-visible {\n              outline-style: none !important;\n            }\n          `}\n          width=\"640\"\n          height=\"480\"\n        />\n        <div\n          style={{\n            width: '640px',\n            height: '480px',\n            backgroundImage: `url(${frameInner})`,\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n        />\n        <div\n          ref={messageRef}\n          style={{\n            boxSizing: 'border-box',\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderWidth: '2px',\n            borderStyle: 'dotted',\n            borderRadius: '0 20px 20px 20px',\n            borderColor: 'white',\n            position: 'absolute',\n            width: '540px',\n            height: '85px',\n            left: '124px',\n            bottom: '34px',\n            padding: '10px 20px',\n            fontSize: '20px',\n            lineHeight: '25px',\n            color: '#600',\n            display: 'none',\n            animationIterationCount: 1,\n            animationFillMode: 'forwards',\n          }}\n          css={css`\n            animation: ${bounceIn} 0.8s ease;\n            &.hide {\n              animation: ${bounceOut} 0.5s ease;\n            }\n          `}\n        ></div>\n      </div>\n      <img\n        ref={spriteRef}\n        src={sprite}\n        style={{\n          display: 'none',\n        }}\n      />\n      <div\n        style={{\n          paddingTop: '10px',\n          textAlign: 'right',\n          color: '#666',\n        }}\n        css={css`\n          > a {\n            color: #666;\n          }\n          > a:hover {\n            color: #999;\n          }\n        `}\n      >\n        <a\n          href=\"https://github.com/Doramanjyu/z-game\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source repository\n        </a>\n      </div>\n    </main>\n  )\n}\n\nconst bounceIn = keyframes`\n  from, 20%, 46%, 80%, to {\n    transform: translate3d(0,0,0);\n    visibility: visible;\n  }\n  40%, 42% {\n    transform: translate3d(0, -20px, 0);\n  }\n  70% {\n    transform: translate3d(0, -8px, 0);\n  }\n  90% {\n    transform: translate3d(0,-2px,0);\n  }\n`\n\nconst bounceOut = keyframes`\n  from, 50% {\n    transform: translate3d(0,0,0);\n  }\n  20% {\n    transform: translate3d(0,-2px,0);\n  }\n  70% {\n    transform: translate3d(0,-5px,0);\n  }\n  to {\n    visibility: hidden;\n  }\n`\n\nexport default IndexPage\n"],"names":["_taggedTemplateLiteralLoose","strings","raw","slice","Sprite","sprite","prop","this","baseScale","draw","ctx","p","scale","mode1","mode2","drawImage","topLeft","sz","Math","floor","Anime","cnt","frame","propAnime","patterns","frames","reduce","acc","v","countDiv","tick","forceCnt","undefined","length","GameMap","loader","s","e","screenSize","data","Array","j","i","at","p2","posMod","set","d","o","cellRange","cw","ch","a","appearance","b","m","gw","round","gh","left","top","si2","ei2","sj2","diff","cross","intersected","sa","ea","sb","eb","tolerance","c1","c2","c3","c4","CollisionMap","map","cellSz","scanned","intersection","check","col","right","min","max","motion","collision","forEach","pp","pol","push","k","bottom","strokeStyle","lineWidth","beginPath","c","x","y","moveTo","lineTo","stroke","closePath","xy","drawPolygon","poly","KernelState","pos","vel","onGround","orientation","jumpPow","heat","popped","trans","clone","Kernel","state0","ellasticCoeff","anime","idle","squat","jump","currentAnime","shadow","explosion","headUpText","state","explosionPos","explosionNum","headUpTextMode","reset","cmd","gameMap","colMap","space","mpBottom0","cell","onAction","target","mpBottom","headUpTextModePrev","offset","kernelMode","mode","heatCount","GameEventTarget","MapCell","typ","colDir","topOffset","OverlayMapCell","NPCState","ZEA","active","activePrev","abs","onArrive","Game","canvas","messageBox","self","getContext","imageSmoothingEnabled","origin","mapData","viewpoint","debugView","kernel","bgUnder","bg","bgOverlay","bgOverlayAnime","bgGrad","zea","showMessage","setTimeout","hideMessage","mw","mh","t","tr","tl","tt","tb","overlayAnimeMap","collisionMap","underMap","overlayMap","command","Map","start","tickTimer","setInterval","bind","cleanup","clearInterval","stop","fillStyle","fillRect","kernelCmd","has","diffY","diffX","err","console","error","keydown","code","keyup","delete","text","innerText","style","display","classList","remove","add","bounceIn","keyframes","bounceOut","canvasRef","useRef","spriteRef","messageRef","useEffect","current","g","document","addEventListener","noPreventDefault","Element","closest","tx","ty","touching","touchStart","preventDefault","stopPropagation","touches","screenX","screenY","touchMove","touchEnd","removeEventListener","textAlign","margin","width","height","backgroundImage","position","ref","backgroundColor","borderRadius","css","frameInner","boxSizing","borderWidth","borderStyle","borderColor","padding","fontSize","lineHeight","color","animationIterationCount","animationFillMode","src","paddingTop","href","rel"],"sourceRoot":""}