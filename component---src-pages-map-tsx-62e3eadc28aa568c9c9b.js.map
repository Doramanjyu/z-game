{"version":3,"file":"component---src-pages-map-tsx-62e3eadc28aa568c9c9b.js","mappings":"oIAEO,IAAMA,EAIX,WACEC,KAAKC,SAAW,GAChBD,KAAKE,SAAW,K,4ECKb,IAAMC,EAAb,WAQE,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,QACA,IADAA,IAAAA,EAAY,GAEZT,KAAKI,GAAKA,EACVJ,KAAKM,EAAIA,EACTN,KAAKO,EAAIA,EACTP,KAAKQ,WAAaA,EAClBR,KAAKS,UAAYA,EACjBT,KAAKU,KAAO,IAAIC,MAASP,EAAG,GAAKA,EAAG,IACpC,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAG,GAAIQ,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAG,GAAIS,IACzBb,KAAKU,KAAKE,EAAIR,EAAG,GAAKS,GAAKR,EAAOQ,EAAGD,GAxB7C,2BA6BEE,GAAA,SAAGC,GACD,IAAMC,EAAKC,EAAO,CAACC,KAAKC,MAAMJ,EAAE,IAAKG,KAAKC,MAAMJ,EAAE,KAAMf,KAAKI,IAC7D,OAAOJ,KAAKU,KAAKM,EAAG,GAAKhB,KAAKI,GAAG,GAAKY,EAAG,KA/B7C,EAkCEI,IAAA,SAAIL,EAASM,GACX,IAAML,EAAKC,EAAO,CAACC,KAAKC,MAAMJ,EAAE,IAAKG,KAAKC,MAAMJ,EAAE,KAAMf,KAAKI,IAC7DJ,KAAKU,KAAKM,EAAG,GAAKhB,KAAKI,GAAG,GAAKY,EAAG,IAAMK,GApC5C,EAuCEC,KAAA,SACEC,EACAC,EACAC,EACAC,EACAC,GAaA,IAXA,IAAMN,EAAIO,EACRJ,EAAEpB,KACFJ,KAAKM,EACLN,KAAKO,EACLkB,EACAzB,KAAKQ,WACLkB,EACA1B,KAAKS,WAEP,EAAiBe,EAAEpB,KAAZyB,EAAP,KAAWC,EAAX,KAESlB,EAAIS,EAAEf,EAAE,GAAIM,EAAIS,EAAEd,EAAE,GAAIK,IAC/B,IAAK,IAAIC,EAAIQ,EAAEf,EAAE,GAAIO,EAAIQ,EAAEd,EAAE,GAAIM,IAAK,CACpC,IACMkB,EADI/B,KAAKc,GAAG,CAACD,EAAGD,IACVoB,WAAWL,GACvBH,EAAEF,KAAKC,EAAK,CAACF,EAAEI,EAAE,GAAKZ,EAAIgB,EAAIR,EAAEI,EAAE,GAAKb,EAAIkB,GAAKJ,EAAOK,EAAE,GAAIA,EAAE,MA7DvE,KAmEMd,EAAS,SAACc,EAASE,GACvB,IAAMC,EAAI,CAACH,EAAE,GAAKE,EAAE,GAAIF,EAAE,GAAKE,EAAE,IACjC,MAAO,CAACC,EAAE,GAAK,EAAIA,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAIA,EAAE,GAAK,EAAIA,EAAE,GAAKD,EAAE,GAAKC,EAAE,KAGvDN,EAAY,SACvBxB,EACAE,EACAC,EACAkB,EACAjB,EACAkB,EACAjB,GAMAgB,EAAE,GAAKP,KAAKC,MAAMM,EAAE,IACpBA,EAAE,GAAKP,KAAKC,MAAMM,EAAE,IAEpB,IAAMU,EAAKjB,KAAKkB,MAAM5B,EAAW,IAAMJ,EAAG,GAAKsB,IAAU,EACnDW,EAAKnB,KAAKkB,MAAM5B,EAAW,IAAMJ,EAAG,GAAKsB,IAAU,EAEnDY,EAAOb,EAAE,GAAKnB,EAAE,GAAKF,EAAG,GAAKA,EAAG,GAChCmC,EAAMd,EAAE,GAAKnB,EAAE,GAAKF,EAAG,GAAKA,EAAG,GAE/BoC,EAAMF,GAAQ,EAAIhC,EAAE,GAAKA,EAAE,GAAKY,KAAKC,MAAMmB,EAAOlC,EAAG,IAAMK,EAAY,EACvEgC,EAAMD,EAAML,EAAK1B,EAAY,EAE7BiC,EAAMH,GAAO,EAAIjC,EAAE,GAAKA,EAAE,GAAKY,KAAKC,MAAMoB,EAAMnC,EAAG,IAAMK,EAAY,EAG3E,MAAO,CACLH,EAAG,CAACkC,EAAKE,GACTnC,EAAG,CAACkC,EAJMC,EAAML,EAAK5B,EAAY,GAKjCgB,EAAAA,K,6ECxGSkB,EAAb,YAKE,WACEtB,EACAuB,EACAC,GACA,aACA,sBACKxB,EAAIA,EACT,EAAKuB,IAAMA,EACX,EAAKE,OAASD,EAJd,GATJ,uCAgBEb,WAAA,SAAWL,GACT,OAAO3B,KAAKqB,EAAEM,IAjBlB,EAoBEoB,KAAA,WACE,OAAmB,GAAZ/C,KAAK4C,KArBhB,EAwBEI,UAAA,WACE,IAAMC,EAAY,IACZC,EAAiB,GAOvB,OANIlD,KAAK8C,OAAOP,KACdW,EAAIC,KAAK,CACP,CAAC,EAAGF,GACJ,CAAC,EAAGA,KAGJjD,KAAK8C,OAAOM,OAASpD,KAAK8C,OAAOO,SAAWrD,KAAK8C,OAAOR,MAC1DY,EAAIC,KAAK,CACP,CAAC,EAAGF,GACJ,CAAC,EAAG,IACJ,CAAC,GAAK,KACN,CAAC,EAAG,OAECC,GAELlD,KAAK8C,OAAOR,MAAQtC,KAAK8C,OAAOO,SAAWrD,KAAK8C,OAAOM,OACzDF,EAAIC,KAAK,CACP,CAAC,EAAG,KACJ,CAAC,GAAK,KACN,CAAC,EAAG,IACJ,CAAC,EAAGF,KAECC,IAGLlD,KAAK8C,OAAOM,OACdF,EAAIC,KAAK,CACP,CAAC,EAAG,IACJ,CAAC,EAAG,OAGJnD,KAAK8C,OAAOO,QACdH,EAAIC,KAAK,CACP,CAAC,EAAG,KACJ,CAAC,EAAG,OAGJnD,KAAK8C,OAAOR,MACdY,EAAIC,KAAK,CACP,CAAC,EAAG,KACJ,CAAC,EAAG,MAIDD,IAvEX,EA0EEI,WAAA,WACE,OAAItD,KAAKE,SAASqD,OAAS,EAClB,EAEO,GAAZvD,KAAK4C,IACA,EAEF,GAjFX,G,QAA6B7C,G,UCFhByD,EAAU,SAAC,GAAyC,IAAvCC,EAAuC,EAAvCA,QAClBC,EAAKC,EAAAA,KAAAA,GAAAA,OACLC,EAAKD,EAAAA,KAAAA,OACX,OAAO,IAAIxD,EAAAA,EACT,CAACuD,EAAIE,IACL,SAACC,EAAWC,GACV,IAAMC,EAAIJ,EAAAA,KAAaG,GAAGD,GACpBG,EAAKH,EAAI,EAAIH,EAAK,EAAIA,EAAK,EAAIC,EAAAA,KAAaG,GAAGD,EAAI,GACnDI,EAAKJ,EAAI,EAAI,EAAI,EAAIF,EAAAA,KAAaG,GAAGD,EAAI,GACzCK,EAAKJ,EAAI,EAAI,EAAI,EAAIH,EAAAA,KAAaG,EAAI,GAAGD,GACzCM,EAAKL,EAAI,EAAIF,EAAK,EAAIA,EAAK,EAAID,EAAAA,KAAaG,EAAI,GAAGD,GACnDhB,EAAM,CACVN,IAAU,GAALwB,GAAe,GAALA,GAAgB,GAALA,GAAgB,GAANG,EACpCb,OAAa,GAALU,GAAgB,GAANI,EAClB7B,KAAW,GAALyB,GAAgB,GAANE,EAChBb,MAAY,GAALW,GAAgB,GAANC,GAEbI,EAAI,IAAIzB,EACZ,CACE0B,KAAM,CAACV,EAAAA,KAAaG,GAAGD,GAAG,GAAIF,EAAAA,KAAaG,GAAGD,GAAG,IACjDS,MAAO,CAACX,EAAAA,MAAcG,GAAGD,GAAG,GAAIF,EAAAA,MAAcG,GAAGD,GAAG,IACpDU,QAAS,CAACZ,EAAAA,QAAgBG,GAAGD,GAAG,GAAIF,EAAAA,QAAgBG,GAAGD,GAAG,IAC1DW,aACEb,EAAAA,KAAaG,GAAGD,GAAK,EACjB,CAAC,EAAG,GACJ,CAACF,EAAAA,aAAqBG,GAAGD,GAAG,GAAIF,EAAAA,aAAqBG,GAAGD,GAAG,KAEnEE,EACAlB,GASF,OAPIc,EAAAA,KAAaG,GAAGD,GAAK,GACvBO,EAAElE,SAASiD,MAAK,SAAC5C,GACf6D,EAAElE,SAAW,GACbK,EAAEkE,OAAOpD,EAAT,aAA6B,CAAC,EAAG,GACjCoC,EAAQlD,MAGL6D,IAET,EAAE,IAAK,GACP,CAAC,IAAKR,GACN,CAAC,IAAK,Q,uHCqDV,EA7FmC,SAAC,GAAe,IAAbc,EAAa,EAAbA,OAC9BC,GAAUC,EAAAA,EAAAA,UACd,kBACEpB,EAAAA,EAAAA,GAAQ,CACNC,QAAS,WACPoB,QAAQC,IAAI,yBAGlB,CAACnB,IAGH,OADAkB,QAAQC,IAAIH,EAAQvE,KAElB,eACE2E,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,SAAU,UAEZC,KAAKA,EAAAA,EAAAA,IAAF,8LAiByBT,EAjBzB,kEA0BF,OAAI/D,MAAMgE,EAAQvE,GAAG,KAAKgF,KAAI,SAACC,EAAGzE,GAAJ,OAC7B,eAAK0E,IAAG,MAAQ1E,IACb,OAAID,MAAMgE,EAAQvE,GAAG,KAAKgF,KAAI,SAACC,EAAGxE,GACjC,IAAM0E,EAAOZ,EAAQ7D,GAAG,CAACD,EAAGD,IACtByD,EAAOkB,EAAKvD,WAAW,QACvBsC,EAAQiB,EAAKvD,WAAW,SACxBuC,EAAUgB,EAAKvD,WAAW,WAC1BwC,EAAee,EAAKvD,WAAW,gBAC9BwD,EAAqB,GAAVnB,EAAK,GAAZoB,EAAqB,IAAgB,GAAVpB,EAAK,GACpCqB,EAAW,IAAiB,GAAXpB,EAAM,GAAnBqB,EAA4B,IAAiB,GAAXrB,EAAM,GAC5CsB,EAAwB,GAAbrB,EAAQ,GAAfsB,EAAwB,IAAmB,GAAbtB,EAAQ,GAC1CuB,EACa,GAAlBtB,EAAa,GADHuB,EAEV,IAAwB,GAAlBvB,EAAa,GAErB,OACE,eAAKc,IAAG,MAAQzE,IACd,gBACEkE,MAAO,CACLiB,mBAAoB,IAAS,EAALN,EAAN,OAAwB,EAALC,EAAnB,KAClBM,eAAgB,gBAChBjB,MAAO,OACPC,OAAQ,WAGZ,gBACEF,MAAO,CACLiB,mBAAoB,IAAIR,EAAN,OAAeC,EAAf,SAGtB,gBACEV,MAAO,CACLiB,mBAAoB,IAAIJ,EAAN,OAAeC,EAAf,SAGtB,gBACEd,MAAO,CACLiB,mBAAoB,IAAIF,EAAN,OAAgBC,EAAhB,kB,SC/EtC,EAPsB,kBACpB,qBACE,mCACA,QAAC,EAAD,CAAWrB,OAAQA,EAAAA,O,oBCTvB,IAAe,IAA0B,sD","sources":["webpack://z-game/./src/game/events.ts","webpack://z-game/./src/game/lib/GameMap.ts","webpack://z-game/./src/game/MapCell.ts","webpack://z-game/./src/game/map.ts","webpack://z-game/./src/game/MapEditor.tsx","webpack://z-game/./src/pages/map.tsx","webpack://z-game/./src/images/sprite.png"],"sourcesContent":["export type EventHandler<T> = (e: GameEvent<T>) => void\n\nexport class GameEventTarget<T> {\n  onArrive: EventHandler<T>[]\n  onAction: EventHandler<T>[]\n\n  constructor() {\n    this.onArrive = []\n    this.onAction = []\n  }\n}\n\nexport type GameEvent<T> = {\n  target: T\n}\n","import { Drawer } from './Sprite'\nimport { Vec2, Polygon } from './Vec'\n\nexport type Appearance = [number, number]\n\nexport interface Cell {\n  appearance(layer: string): Appearance\n}\n\nexport interface CollisionCell extends Cell {\n  collision(): Polygon[]\n}\n\nexport class GameMap<T extends Cell> {\n  readonly sz: Vec2\n  readonly data: Array<T>\n  readonly s: Vec2\n  readonly e: Vec2\n  readonly screenSize: Vec2\n  readonly baseScale: number\n\n  constructor(\n    sz: Vec2,\n    loader: (x: number, y: number) => T,\n    s: Vec2,\n    e: Vec2,\n    screenSize: Vec2,\n    baseScale = 1,\n  ) {\n    this.sz = sz\n    this.s = s\n    this.e = e\n    this.screenSize = screenSize\n    this.baseScale = baseScale\n    this.data = new Array<T>(sz[0] * sz[1])\n    for (let j = 0; j < sz[1]; j++) {\n      for (let i = 0; i < sz[0]; i++) {\n        this.data[j * sz[0] + i] = loader(i, j)\n      }\n    }\n  }\n\n  at(p: Vec2): T {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    return this.data[p2[1] * this.sz[0] + p2[0]]\n  }\n\n  set(p: Vec2, v: T) {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    this.data[p2[1] * this.sz[0] + p2[0]] = v\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    d: Drawer,\n    o: Vec2,\n    scale: number,\n    layer: string,\n  ) {\n    const v = cellRange(\n      d.sz(),\n      this.s,\n      this.e,\n      o,\n      this.screenSize,\n      scale,\n      this.baseScale,\n    )\n    const [cw, ch] = d.sz()\n\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.at([i, j])\n        const a = c.appearance(layer)\n        d.draw(ctx, [v.o[0] + i * cw, v.o[1] + j * ch], scale, a[0], a[1])\n      }\n    }\n  }\n}\n\nconst posMod = (a: Vec2, b: Vec2): Vec2 => {\n  const m = [a[0] % b[0], a[1] % b[1]]\n  return [m[0] < 0 ? m[0] + b[0] : m[0], m[1] < 0 ? m[1] + b[1] : m[1]]\n}\n\nexport const cellRange = (\n  sz: Vec2,\n  s: Vec2,\n  e: Vec2,\n  o: Vec2,\n  screenSize: Vec2,\n  scale: number,\n  baseScale: number,\n): {\n  s: Vec2\n  e: Vec2\n  o: Vec2\n} => {\n  o[0] = Math.floor(o[0])\n  o[1] = Math.floor(o[1])\n\n  const gw = Math.round(screenSize[0] / (sz[0] * scale)) + 2\n  const gh = Math.round(screenSize[1] / (sz[1] * scale)) + 2\n\n  const left = o[0] + s[0] * sz[0] + sz[0]\n  const top = o[1] + s[1] * sz[1] + sz[1]\n\n  const si2 = left >= 0 ? s[0] : s[0] - Math.floor(left / sz[0]) - baseScale + 1\n  const ei2 = si2 + gw + baseScale - 1\n\n  const sj2 = top >= 0 ? s[1] : s[1] - Math.floor(top / sz[1]) - baseScale + 1\n  const ej2 = sj2 + gh + baseScale - 1\n\n  return {\n    s: [si2, sj2],\n    e: [ei2, ej2],\n    o,\n  }\n}\n","import { Cell, Appearance } from './lib/GameMap'\nimport { Polygon } from './lib/Vec'\n\nimport { GameEventTarget } from './events'\n\ntype CollisionDir = {\n  top: boolean\n  bottom: boolean\n  left: boolean\n  right: boolean\n}\n\nexport class MapCell extends GameEventTarget<MapCell> implements Cell {\n  readonly v: { [layer: string]: Appearance }\n  readonly typ: number\n  readonly colDir: CollisionDir\n\n  constructor(\n    v: { [layer: string]: Appearance },\n    typ: number,\n    col: CollisionDir,\n  ) {\n    super()\n    this.v = v\n    this.typ = typ\n    this.colDir = col\n  }\n\n  appearance(layer: string): Appearance {\n    return this.v[layer]\n  }\n\n  heat(): boolean {\n    return this.typ == 2\n  }\n\n  collision(): Polygon[] {\n    const topOffset = 0.05\n    const pol: Polygon[] = []\n    if (this.colDir.top) {\n      pol.push([\n        [0, topOffset],\n        [1, topOffset],\n      ])\n    }\n    if (this.colDir.right && this.colDir.bottom && !this.colDir.left) {\n      pol.push([\n        [1, topOffset],\n        [1, 0.9],\n        [0.3, 1.4],\n        [0, 1.4],\n      ])\n      return pol\n    }\n    if (this.colDir.left && this.colDir.bottom && !this.colDir.right) {\n      pol.push([\n        [1, 1.4],\n        [0.7, 1.4],\n        [0, 0.9],\n        [0, topOffset],\n      ])\n      return pol\n    }\n\n    if (this.colDir.right) {\n      pol.push([\n        [1, 0.1],\n        [1, 1.4],\n      ])\n    }\n    if (this.colDir.bottom) {\n      pol.push([\n        [1, 1.4],\n        [0, 1.4],\n      ])\n    }\n    if (this.colDir.left) {\n      pol.push([\n        [0, 1.4],\n        [0, 0.1],\n      ])\n    }\n\n    return pol\n  }\n\n  headUpText(): number {\n    if (this.onAction.length > 0) {\n      return 1\n    }\n    if (this.typ == 2) {\n      return 2\n    }\n    return 0\n  }\n}\n","import { GameMap } from './lib/GameMap'\nimport { MapCell } from './MapCell'\nimport { EventHandler } from './events'\n\nimport mapData from './data/map.yaml'\n\ntype Props = {\n  getItem: EventHandler<MapCell>\n}\n\nexport const loadMap = ({ getItem }: Props): GameMap<MapCell> => {\n  const mw = mapData.main[0].length\n  const mh = mapData.main.length\n  return new GameMap<MapCell>(\n    [mw, mh],\n    (x: number, y: number) => {\n      const t = mapData.type[y][x]\n      const tr = x + 1 > mw - 1 ? mw - 1 : mapData.type[y][x + 1]\n      const tl = x - 1 < 0 ? 0 : mapData.type[y][x - 1]\n      const tt = y - 1 < 0 ? 0 : mapData.type[y - 1][x]\n      const tb = y + 1 > mh - 1 ? mh - 1 : mapData.type[y + 1][x]\n      const col = {\n        top: t == 2 || t == 3 || (t == 1 && tt != 1),\n        bottom: t == 1 && tb != 1,\n        left: t == 1 && tl != 1,\n        right: t == 1 && tr != 1,\n      }\n      const c = new MapCell(\n        {\n          main: [mapData.main[y][x][1], mapData.main[y][x][0]],\n          under: [mapData.under[y][x][1], mapData.under[y][x][0]],\n          overlay: [mapData.overlay[y][x][1], mapData.overlay[y][x][0]],\n          overlayAnime:\n            mapData.item[y][x] > 0\n              ? [0, 2]\n              : [mapData.overlayAnime[y][x][1], mapData.overlayAnime[y][x][0]],\n        },\n        t,\n        col,\n      )\n      if (mapData.item[y][x] > 0) {\n        c.onAction.push((e) => {\n          c.onAction = []\n          e.target.v['overlayAnime'] = [0, 0]\n          getItem(e)\n        })\n      }\n      return c\n    },\n    [-100, 0],\n    [100, mh],\n    [640, 480],\n  )\n}\n","import React, { useMemo } from 'react'\nimport { css } from '@emotion/react'\n\nimport { loadMap } from './map'\n\nimport mapData from './data/map.yaml'\n\ntype Props = {\n  sprite: string\n}\n\nconst MapEditor: React.FC<Props> = ({ sprite }) => {\n  const gameMap = useMemo(\n    () =>\n      loadMap({\n        getItem: () => {\n          console.log('item event fired')\n        },\n      }),\n    [mapData],\n  )\n  console.log(gameMap.sz)\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100vh',\n        overflow: 'scroll',\n      }}\n      css={css`\n        div {\n          margin: 0;\n          padding: 0;\n          height: 16px;\n          white-space: nowrap;\n        }\n        div > div {\n          width: 16px;\n          height: 16px;\n          position: relative;\n          left: 0;\n          top: 0;\n          display: inline-block;\n        }\n        div > div > span {\n          display: block;\n          background-image: url(${sprite});\n          position: absolute;\n          left: 0;\n          top: 0;\n          width: 16px;\n          height: 16px;\n        }\n      `}\n    >\n      {[...Array(gameMap.sz[1])].map((_, j) => (\n        <div key={`row${j}`}>\n          {[...Array(gameMap.sz[0])].map((_, i) => {\n            const cell = gameMap.at([i, j])\n            const main = cell.appearance('main')\n            const under = cell.appearance('under')\n            const overlay = cell.appearance('overlay')\n            const overlayAnime = cell.appearance('overlayAnime')\n            const [mx, my] = [main[0] * 16, 512 + main[1] * 16]\n            const [ux, uy] = [512 + under[0] * 16, 512 + under[1] * 16]\n            const [ox, oy] = [overlay[0] * 16, 896 + overlay[1] * 16]\n            const [oax, oay] = [\n              overlayAnime[0] * 16,\n              768 + overlayAnime[1] * 16,\n            ]\n            return (\n              <div key={`col${i}`}>\n                <span\n                  style={{\n                    backgroundPosition: `-${ux * 2}px -${uy * 2}px`,\n                    backgroundSize: `2048px 2048px`,\n                    width: '32px',\n                    height: '32px',\n                  }}\n                />\n                <span\n                  style={{\n                    backgroundPosition: `-${mx}px -${my}px`,\n                  }}\n                />\n                <span\n                  style={{\n                    backgroundPosition: `-${ox}px -${oy}px`,\n                  }}\n                />\n                <span\n                  style={{\n                    backgroundPosition: `-${oax}px -${oay}px`,\n                  }}\n                />\n              </div>\n            )\n          })}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default MapEditor\n","import React from 'react'\n\nimport MapEditor from '@doramanjyu/z-game/game/MapEditor'\n\nimport sprite from '@doramanjyu/z-game/images/sprite.png'\n\nconst MapEditorPage = () => (\n  <main>\n    <title>MapEditor</title>\n    <MapEditor sprite={sprite} />\n  </main>\n)\n\nexport default MapEditorPage\n","export default __webpack_public_path__ + \"static/sprite-cd853a3e08192952875ad489b5b32e2b.png\";"],"names":["GameEventTarget","this","onArrive","onAction","GameMap","sz","loader","s","e","screenSize","baseScale","data","Array","j","i","at","p","p2","posMod","Math","floor","set","v","draw","ctx","d","o","scale","layer","cellRange","cw","ch","a","appearance","b","m","gw","round","gh","left","top","si2","ei2","sj2","MapCell","typ","col","colDir","heat","collision","topOffset","pol","push","right","bottom","headUpText","length","loadMap","getItem","mw","mapData","mh","x","y","t","tr","tl","tt","tb","c","main","under","overlay","overlayAnime","target","sprite","gameMap","useMemo","console","log","style","width","height","overflow","css","map","_","key","cell","mx","my","ux","uy","ox","oy","oax","oay","backgroundPosition","backgroundSize"],"sourceRoot":""}