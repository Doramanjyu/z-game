{"version":3,"file":"component---src-pages-index-tsx-401eb31c2a66828ab230.js","mappings":"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","sources":["webpack://z-game/./src/game/lib/Sprite.ts","webpack://z-game/./src/game/lib/Anime.ts","webpack://z-game/./src/game/lib/vec.ts","webpack://z-game/./src/game/lib/CollisionMap.ts","webpack://z-game/./src/game/lib/StateMachine.ts","webpack://z-game/./src/game/Kernel.ts","webpack://z-game/./src/game/NPC.ts","webpack://z-game/./src/game/ZEA.ts","webpack://z-game/./src/game/Nggis.ts","webpack://z-game/./src/game/DialogManager.ts","webpack://z-game/./src/game/dialogState.ts","webpack://z-game/./src/game/Game.ts","webpack://z-game/./src/game/ItemUI.tsx","webpack://z-game/./src/game/index.ts","webpack://z-game/./src/images/frame.svg","webpack://z-game/./src/images/frame_inner.svg","webpack://z-game/./src/pages/index.tsx"],"sourcesContent":["import { Vec2 } from './vec'\n\nexport type DrawOptions = {\n  opacity?: number\n}\n\nexport interface Drawer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    s: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n    opt?: DrawOptions,\n  ): void\n  sz(): Vec2\n}\n\nexport type SpriteProp = {\n  topLeft: Vec2\n  sz: Vec2\n  baseScale?: number\n}\n\nclass Sprite implements Drawer {\n  readonly sprite: HTMLImageElement\n  readonly prop: Required<SpriteProp>\n\n  constructor(sprite: HTMLImageElement, prop: SpriteProp) {\n    this.sprite = sprite\n    this.prop = {\n      baseScale: 1,\n      ...prop,\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n    opt?: DrawOptions,\n  ) {\n    if (opt?.opacity !== undefined) {\n      ctx.globalAlpha = opt.opacity\n    }\n    ctx.drawImage(\n      this.sprite,\n      this.prop.topLeft[0] + mode1 * this.prop.sz[0],\n      this.prop.topLeft[1] + mode2 * this.prop.sz[1],\n      this.prop.sz[0],\n      this.prop.sz[1],\n      Math.floor(p[0] * scale),\n      Math.floor(p[1] * scale),\n      this.prop.sz[0] * scale * this.prop.baseScale,\n      this.prop.sz[1] * scale * this.prop.baseScale,\n    )\n    if (opt?.opacity !== undefined) {\n      ctx.globalAlpha = 1\n    }\n  }\n\n  sz() {\n    return this.prop.sz\n  }\n}\n\nexport default Sprite\n","import { Vec2 } from './vec'\nimport Sprite, { SpriteProp, Drawer, DrawOptions } from './Sprite'\n\nexport type AnimeProp = SpriteProp & {\n  frames: number[]\n  patterns?: number\n  countDiv?: number\n}\n\nclass Anime extends Sprite implements Drawer {\n  readonly propAnime: AnimeProp\n  private readonly patterns: number\n  private readonly countDiv: number\n  private cnt = 0\n  frame = 0\n\n  constructor(sprite: HTMLImageElement, prop: AnimeProp) {\n    super(sprite, prop)\n    this.propAnime = prop\n    if (prop.patterns) {\n      this.patterns = prop.patterns\n    } else {\n      this.patterns = prop.frames.reduce((acc, v) => (acc > v ? acc : v), 0) + 1\n    }\n    if (prop.countDiv) {\n      this.countDiv = prop.countDiv\n    } else {\n      this.countDiv = 1\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n    opt?: DrawOptions,\n  ) {\n    super.draw(\n      ctx,\n      p,\n      scale,\n      this.propAnime.frames[this.frame] + this.patterns * mode1,\n      mode2,\n      opt,\n    )\n  }\n\n  tick(forceCnt?: number): number {\n    if (forceCnt !== undefined) {\n      this.cnt = forceCnt\n    }\n    this.frame = Math.floor(\n      (this.cnt / this.countDiv) % this.propAnime.frames.length,\n    )\n    this.cnt++\n    return this.propAnime.frames[this.frame]\n  }\n}\n\nexport default Anime\n","export type Vec2 = [number, number]\nexport type Polygon = Vec2[]\n\nexport const diff = (a: Vec2, b: Vec2): Vec2 => [a[0] - b[0], a[1] - b[1]]\nexport const cross = (a: Vec2, b: Vec2): number => a[0] * b[1] - a[1] * b[0]\n\nexport const intersected = (\n  sa: Vec2,\n  ea: Vec2,\n  sb: Vec2,\n  eb: Vec2,\n  tolerance: number,\n): boolean => {\n  const a = diff(ea, sa)\n  const b = diff(eb, sb)\n  const c1 = cross(a, diff(sb, sa))\n  const c2 = cross(a, diff(eb, sa))\n  const c3 = cross(b, diff(sa, sb))\n  const c4 = cross(b, diff(ea, sb))\n  return c1 < tolerance && c2 > -tolerance && c3 > -tolerance && c4 < tolerance\n}\n\nexport const norm = (a: Vec2): number => Math.sqrt(a[0] * a[0] + a[1] * a[1])\n","import GameMap, { CollisionCell, cellRange } from './GameMap'\nimport { Vec2, Polygon, intersected } from './vec'\n\ntype CollisionState = {\n  right: boolean\n  left: boolean\n\n  bottom?: number\n  top?: number\n}\n\nclass CollisionMap {\n  readonly map: GameMap<CollisionCell>\n  readonly cellSz: Vec2\n\n  private scanned: Polygon[]\n  private intersection: Polygon[]\n  private motion?: Polygon\n\n  constructor(map: GameMap<CollisionCell>, cellSz: Vec2) {\n    this.map = map\n    this.cellSz = cellSz\n    this.scanned = []\n    this.intersection = []\n  }\n\n  check(a: Vec2, b: Vec2): CollisionState {\n    const col: CollisionState = {\n      right: false,\n      left: false,\n    }\n    const s: Vec2 = [\n      Math.floor(Math.min(a[0], b[0]) / this.cellSz[0] - 0.5),\n      Math.floor(Math.min(a[1], b[1]) / this.cellSz[1] - 0.5),\n    ]\n    const e: Vec2 = [\n      Math.floor(Math.max(a[0], b[0]) / this.cellSz[0] + 0.5),\n      Math.floor(Math.max(a[1], b[1]) / this.cellSz[1] + 0.5),\n    ]\n    const motion: [Vec2, Vec2] = [\n      [a[0] / this.cellSz[0], a[1] / this.cellSz[1]],\n      [b[0] / this.cellSz[0], b[1] / this.cellSz[1]],\n    ]\n    this.motion = motion\n    for (let j = s[1]; j < e[1] + 1; j++) {\n      for (let i = s[0]; i < e[0] + 1; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          const pol = pp.reduce<Polygon>(\n            (acc, p) => (acc.push([i + p[0], j + p[1]]), acc),\n            [],\n          )\n          pol.length > 0 && this.scanned.push(pol)\n          for (let k = 0; k < pol.length - 1; k++) {\n            if (!intersected(pol[k], pol[k + 1], motion[0], motion[1], 0.005)) {\n              continue\n            }\n            if (pol[k][0] > pol[k + 1][0]) {\n              col.top = pol[k][1] + 0.01\n            } else if (pol[k][0] < pol[k + 1][0]) {\n              col.bottom = pol[k][1] - 0.01\n            }\n            if (pol[k][1] > pol[k + 1][1]) {\n              col.right = true\n            } else if (pol[k][1] < pol[k + 1][1]) {\n              col.left = true\n            }\n            this.intersection.push([pol[k], pol[k + 1]])\n          }\n        })\n      }\n    }\n    return col\n  }\n\n  draw(ctx: CanvasRenderingContext2D, o: Vec2, scale: number) {\n    ctx.strokeStyle = 'white'\n    ctx.lineWidth = 1\n\n    const v = cellRange(\n      this.cellSz,\n      this.map.s,\n      this.map.e,\n      o,\n      this.map.screenSize,\n      scale,\n      1,\n    )\n    const [cw, ch] = this.cellSz\n\n    ctx.beginPath()\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          pp.forEach((p, c) => {\n            const [x, y] = [\n              (v.o[0] + cw * (i + p[0])) * scale,\n              (v.o[1] + ch * (j + p[1])) * scale,\n            ]\n            c == 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y)\n          })\n          ctx.stroke()\n        })\n      }\n    }\n    ctx.closePath()\n\n    const xy = (p: Vec2): Vec2 => [\n      (v.o[0] + cw * p[0]) * scale,\n      (v.o[1] + ch * p[1]) * scale,\n    ]\n    const drawPolygon = (poly: Polygon[]) => {\n      ctx.beginPath()\n      poly.forEach((pp) => {\n        pp.forEach((p, c) =>\n          c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n        )\n        ctx.stroke()\n      })\n      ctx.closePath()\n    }\n\n    ctx.strokeStyle = 'yellow'\n    ctx.lineWidth = 1\n    drawPolygon(this.scanned)\n    this.scanned = []\n\n    ctx.strokeStyle = 'orange'\n    ctx.lineWidth = 5\n    drawPolygon(this.intersection)\n    this.intersection = []\n\n    if (this.motion) {\n      ctx.strokeStyle = 'red'\n      ctx.lineWidth = 4\n      ctx.beginPath()\n      this.motion.forEach((p, c) =>\n        c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n      )\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n\nexport default CollisionMap\n","class StateMachine {\n  private readonly initial: State\n  private readonly states: Map<State, null>\n  current: State\n\n  constructor(initial: State) {\n    this.current = nopState\n    this.initial = initial\n    this.states = new Map<State, null>()\n    this.set(initial)\n\n    const next = [initial]\n    while (next.length > 0) {\n      const n = next.pop()\n      if (!n) {\n        continue\n      }\n      this.states.set(n, null)\n      Object.values(n.nextStates).forEach(\n        (s) => this.states.has(s) || next.push(s),\n      )\n    }\n  }\n\n  set(s: State) {\n    this.current.leave && this.current.leave()\n    this.current = s\n    s.enter && s.enter()\n  }\n\n  tick() {\n    const next = this.current.tick()\n    if (next === null) {\n      return\n    }\n    console.log(next, this.current.nextStates)\n    this.set(this.current.nextStates[next])\n  }\n\n  reset() {\n    this.current = nopState\n    this.states.forEach((v, s) => s.reset && s.reset())\n    this.set(this.initial)\n  }\n\n  handler(s: State) {\n    return () => {\n      if (this.current === s) {\n        this.tick()\n      }\n    }\n  }\n}\n\nexport type State = {\n  nextStates: { [name: string]: State }\n  tick: () => string | null\n  reset?: () => void\n  enter?: () => void\n  leave?: () => void\n}\n\nexport const nopState = {\n  nextStates: {},\n  tick: () => null,\n}\n\nexport default StateMachine\n","import Anime from './lib/Anime'\nimport Sprite from './lib/Sprite'\nimport { Vec2 } from './lib/vec'\nimport GameMap from './lib/GameMap'\nimport CollisionMap from './lib/CollisionMap'\n\nimport MapCell from './MapCell'\nimport { GameEventContext } from './context'\n\nconst heatCount = 8\nconst popResume = 96\n\ntype KernelCommand = {\n  left: boolean\n  right: boolean\n  space: boolean\n}\n\ntype InitialKernelState = {\n  pos?: Vec2\n  vel?: Vec2\n  onGround?: boolean\n  orientation?: number\n}\n\nclass KernelState {\n  pos: Vec2\n  vel: Vec2\n  onGround: boolean\n  orientation: number\n\n  jumpPow: Vec2\n  heat: number\n  popped: number\n  trans: number\n\n  constructor(s: InitialKernelState) {\n    this.pos = s.pos || [0, 0]\n    this.vel = s.vel || [0, 0]\n    this.onGround = s.onGround || true\n    this.orientation = s.orientation || 0\n    this.jumpPow = [0, 0]\n    this.heat = 0\n    this.popped = 0\n    this.trans = 0\n  }\n\n  clone(): KernelState {\n    return {\n      ...this,\n      pos: [this.pos[0], this.pos[1]],\n      vel: [this.vel[0], this.vel[1]],\n      jumpPow: [this.jumpPow[0], this.jumpPow[1]],\n    }\n  }\n}\n\nclass Kernel {\n  private readonly eventCtx: GameEventContext\n  private readonly anime: {\n    idle: Anime\n    squat: Anime\n    jump: Anime\n  }\n  private readonly shadow: Sprite\n  private readonly trans: Sprite\n  private readonly explosion: Sprite\n  private readonly headUpText: Anime\n  private readonly item: Sprite\n  private readonly ellasticCoeff: number\n  private currentAnime: Anime\n  private state0: KernelState\n  private interacting: boolean\n  private earnedItem?: {\n    id: number\n    effectCnt: number\n  }\n\n  readonly effectItem: (id: number) => void\n\n  onInteract?: () => void\n\n  state: KernelState\n  explosionPos: Vec2\n  explosionNum: number\n  headUpTextMode: number\n\n  constructor(\n    ec: GameEventContext,\n    sprite: HTMLImageElement,\n    state0: InitialKernelState,\n  ) {\n    this.eventCtx = ec\n    this.ellasticCoeff = 0.5\n\n    this.anime = {\n      idle: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [0, 0, 0, 2, 0, 1, 0],\n        patterns: 4,\n      }),\n      squat: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [3],\n        patterns: 4,\n      }),\n      jump: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [2, 2, 0, 2, 2, 2, 0],\n        patterns: 4,\n      }),\n    }\n    this.currentAnime = this.anime.idle\n    this.shadow = new Sprite(sprite, {\n      topLeft: [0, 24],\n      sz: [12, 12],\n    })\n    this.trans = new Sprite(sprite, {\n      topLeft: [0, 36],\n      sz: [12, 12],\n    })\n    this.explosion = new Sprite(sprite, {\n      topLeft: [0, 48],\n      sz: [36, 12],\n    })\n    this.headUpText = new Anime(sprite, {\n      topLeft: [0, 60],\n      sz: [24, 12],\n      frames: [0, 1],\n      patterns: 2,\n      countDiv: 8,\n    })\n    this.item = new Sprite(sprite, {\n      topLeft: [512, 0],\n      sz: [12, 12],\n    })\n\n    this.state0 = new KernelState(state0)\n    this.state = this.state0.clone()\n\n    this.explosionPos = this.state.pos\n    this.explosionNum = 0\n    this.headUpTextMode = 0\n    this.interacting = false\n\n    const self = this\n    this.effectItem = (id: number): void => {\n      self.earnedItem = {\n        id: id,\n        effectCnt: 0,\n      }\n    }\n  }\n\n  reset() {\n    this.state = this.state0.clone()\n  }\n\n  mapPos() {\n    const mp: Vec2 = [\n      Math.round((this.state.pos[0] - 8) / 16),\n      Math.floor(this.state.pos[1] / 16),\n    ]\n    return mp\n  }\n\n  tick(cmd: KernelCommand, gameMap: GameMap<MapCell>, colMap: CollisionMap) {\n    if (cmd.left && this.state.onGround) {\n      this.state.jumpPow[0]--\n      if (this.state.jumpPow[0] < -4) {\n        this.state.jumpPow[0] = -4\n      }\n      this.state.orientation = 0\n    }\n    if (cmd.right && this.state.onGround) {\n      this.state.jumpPow[0]++\n      if (this.state.jumpPow[0] > 4) {\n        this.state.jumpPow[0] = 4\n      }\n      this.state.orientation = 1\n    }\n    if (\n      !cmd.left &&\n      !cmd.right &&\n      !cmd.space &&\n      this.state.onGround &&\n      this.state.jumpPow[0] !== 0 &&\n      this.state.jumpPow[1] === 0\n    ) {\n      this.state.onGround = false\n      this.state.vel = [this.state.jumpPow[0], -4]\n      this.state.jumpPow = [0, 0]\n    }\n    let interacting = false\n    if (!cmd.space || !this.state.onGround) {\n      if (\n        this.state.jumpPow[0] == 0 &&\n        this.state.jumpPow[1] < 0 &&\n        this.state.jumpPow[1] > -4\n      ) {\n        interacting = true\n      } else if (!cmd.space && this.state.jumpPow[1] < 0) {\n        this.state.onGround = false\n        if (this.state.popped == 0) {\n          this.state.vel = this.state.jumpPow\n        } else {\n          this.state.vel = [this.state.jumpPow[0], this.state.jumpPow[1] * 0.5]\n        }\n        this.state.jumpPow = [0, 0]\n      } else if (!this.state.onGround) {\n        if (this.state.popped == 0) {\n          this.state.vel[1] += 2\n        } else {\n          this.state.vel[1] += 1.5\n        }\n        if (this.state.vel[1] > 14) {\n          this.state.vel[1] = 14\n        }\n      }\n    }\n\n    const mpBottom = this.mapPos()\n    const col = colMap.check(\n      [this.state.pos[0], this.state.pos[1]],\n      [\n        this.state.pos[0] + this.state.vel[0],\n        this.state.pos[1] + this.state.vel[1],\n      ],\n    )\n    const headUpTextModePrev = this.headUpTextMode\n    this.headUpTextMode = gameMap.at(mpBottom).headUpText()\n    if (this.headUpTextMode > 0 && headUpTextModePrev == 0) {\n      this.headUpText.tick(0)\n    }\n\n    this.currentAnime = this.anime.idle\n    if (cmd.space && this.state.onGround) {\n      this.currentAnime = this.anime.squat\n      this.state.jumpPow[1] -= 2\n      if (this.state.jumpPow[1] < -11) {\n        this.state.jumpPow[1] = -11\n      }\n    } else if (!this.state.onGround) {\n      if (col.top && this.state.vel[1] < 0) {\n        this.state.vel[1] *= -this.ellasticCoeff\n        this.state.vel[0] *= this.ellasticCoeff\n        this.state.pos[1] = col.top * 16\n      }\n      if (\n        (col.left && this.state.vel[0] < 0) ||\n        (col.right && this.state.vel[0] > 0)\n      ) {\n        this.state.vel[0] *= -this.ellasticCoeff\n        this.state.pos[0] += this.state.vel[0]\n      }\n      if (col.bottom && this.state.vel[1] >= 0) {\n        this.state.pos[1] = col.bottom * 16\n        this.state.vel = [0, 0]\n        this.state.onGround = true\n        this.currentAnime = this.anime.squat\n      }\n      if (this.state.vel[1] < 0) {\n        this.currentAnime = this.anime.jump\n      } else if (this.state.vel[1] > 0) {\n        this.currentAnime = this.anime.squat\n      }\n    }\n\n    this.state.pos[0] += this.state.vel[0]\n    this.state.pos[1] += this.state.vel[1]\n\n    const decreasePopped = (dec = 1) => {\n      if (this.state.popped > 0) {\n        this.state.popped -= dec\n        this.state.heat = 0\n        if (dec > 1 && this.state.popped < 2) {\n          this.state.popped = 2\n        } else if (this.state.popped < 0) {\n          this.state.popped = 0\n        }\n      }\n    }\n    if (this.explosionNum && this.explosionNum > 0) {\n      this.explosionNum--\n      if (this.explosionNum == 2) {\n        this.state.heat = 5 * heatCount\n        this.state.popped = popResume\n\n        this.state.onGround = false\n        this.state.vel = [0, -17]\n        this.state.jumpPow = [0, 0]\n      }\n    } else if (gameMap.at(mpBottom).heat()) {\n      this.state.heat++\n      if (this.state.heat > 5 * heatCount - 2 && this.state.popped == 0) {\n        this.explosionPos = [this.state.pos[0], this.state.pos[1]]\n        this.explosionNum = 3\n      }\n    } else {\n      this.state.heat--\n      if (this.state.heat < 0) {\n        this.state.heat = 0\n      }\n      decreasePopped()\n    }\n    if (this.state.trans < 8) {\n      this.state.trans++\n    }\n\n    if (interacting && !this.interacting) {\n      this.state.jumpPow = [0, 0]\n      decreasePopped(10)\n\n      const mpBottom0: Vec2 = [\n        Math.floor(this.state.pos[0] / 16),\n        Math.floor(this.state.pos[1] / 16),\n      ]\n      const cell = gameMap.at(mpBottom0)\n      cell.onAction.forEach((h) => h({ ...this.eventCtx, target: cell }))\n      this.onInteract && this.onInteract()\n    }\n    this.interacting = interacting\n\n    if (this.earnedItem) {\n      this.earnedItem.effectCnt += 1\n      if (this.earnedItem.effectCnt > 12) {\n        this.earnedItem = undefined\n      }\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const kernelMode = this.currentAnime.tick()\n    if (this.headUpTextMode > 0) {\n      this.headUpText.tick()\n    }\n    const mode =\n      (this.state.popped > 0 && this.state.popped != 2) ||\n      this.state.heat == heatCount * 5 - 1\n        ? 5\n        : Math.min(4, Math.floor(this.state.heat / heatCount))\n    if (this.state.onGround) {\n      this.shadow.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 5],\n        scale,\n        mode * 4 + kernelMode,\n        0,\n      )\n    }\n    if (this.state.trans > 2) {\n      this.currentAnime.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 6],\n        scale,\n        mode,\n        this.state.orientation,\n      )\n    }\n    if (this.state.trans < 8) {\n      this.trans.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 5],\n        scale,\n        this.state.trans - 2,\n        0,\n      )\n    }\n    if (this.explosionNum > 0) {\n      this.explosion.draw(\n        ctx,\n        [\n          offset[0] + this.explosionPos[0] - 18,\n          offset[1] + this.explosionPos[1] - 8,\n        ],\n        scale,\n        3 - this.explosionNum,\n        0,\n      )\n    }\n    if (this.headUpTextMode > 0) {\n      this.headUpText.draw(\n        ctx,\n        [\n          offset[0] + this.state.pos[0] - 12,\n          offset[1] + this.state.pos[1] - 15,\n        ],\n        scale,\n        this.headUpTextMode - 1,\n        0,\n      )\n    }\n    if (this.earnedItem) {\n      const opacity = 1 - Math.ceil((this.earnedItem.effectCnt - 1) / 3) / 4\n      this.item.draw(\n        ctx,\n        [\n          offset[0] + this.state.pos[0] - 6,\n          offset[1] + this.state.pos[1] - 12 - this.earnedItem.effectCnt,\n        ],\n        scale,\n        this.earnedItem.id,\n        0,\n        { opacity },\n      )\n    }\n  }\n}\n\nexport default Kernel\n","import Anime from './lib/Anime'\nimport { Vec2 } from './lib/vec'\n\nimport { GameEventContext } from './context'\nimport { GameEventTarget } from './event'\n\nexport class NPCState {\n  pos: Vec2\n  mode: number\n\n  constructor(s: InitialNPCState) {\n    this.pos = s.pos || [0, 0]\n    this.mode = s.mode || 0\n  }\n}\n\nexport type InitialNPCState = {\n  pos?: Vec2\n  mode?: number\n}\n\ntype Props = {\n  offset?: Vec2\n  textOffset?: Vec2\n}\n\nclass NPC<State extends NPCState = NPCState> extends GameEventTarget<\n  NPC<State>\n> {\n  private readonly eventCtx: GameEventContext\n  private readonly anime: Anime\n  private readonly headUpText: Anime\n  private readonly props: Required<Props>\n  state: State\n  active: boolean\n  hasDialog: boolean\n\n  constructor(\n    ec: GameEventContext,\n    anime: Anime,\n    headUpText: Anime,\n    s: State,\n    props?: Props,\n  ) {\n    super()\n    this.eventCtx = ec\n    this.anime = anime\n    this.headUpText = headUpText\n    this.state = s\n    this.active = false\n    this.hasDialog = false\n    this.props = {\n      offset: [0, 0],\n      textOffset: [0, 0],\n      ...props,\n    }\n  }\n\n  tick(p: Vec2) {\n    const sz = this.anime.sz()\n    const activePrev = this.active\n    this.active =\n      Math.abs(p[0] - this.state.pos[0]) < sz[0] / 2 &&\n      Math.abs(p[1] - this.state.pos[1]) < sz[1] / 2\n\n    if (!activePrev && this.active && this.onArrive) {\n      this.onArrive.forEach((h) => h({ ...this.eventCtx, target: this }))\n    }\n\n    this.anime.tick()\n    this.headUpText.tick()\n  }\n\n  interact() {\n    if (this.active && this.onAction.length) {\n      this.onAction.forEach((h) => h({ ...this.eventCtx, target: this }))\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const sz = this.anime.sz()\n    this.anime.draw(\n      ctx,\n      [\n        offset[0] + this.props.offset[0] + this.state.pos[0] - sz[0] / 2,\n        offset[1] + this.props.offset[1] + this.state.pos[1] - sz[1] + 6,\n      ],\n      scale,\n      this.state.mode,\n      0,\n    )\n    if (this.hasDialog) {\n      const szText = this.headUpText.sz()\n      this.headUpText.draw(\n        ctx,\n        [\n          offset[0] +\n            this.props.textOffset[0] +\n            this.state.pos[0] -\n            szText[0] / 2,\n          offset[1] + this.props.textOffset[1] + this.state.pos[1] - sz[1],\n        ],\n        scale,\n        2 + (this.active ? 1 : 0),\n        0,\n      )\n    }\n  }\n}\n\nexport default NPC\n","import Anime from './lib/Anime'\n\nimport NPC, { NPCState, InitialNPCState } from './NPC'\n\nimport { GameEventContext } from './context'\n\nclass ZEA extends NPC {\n  constructor(\n    ec: GameEventContext,\n    sprite: HTMLImageElement,\n    state0: InitialNPCState,\n  ) {\n    super(\n      ec,\n      new Anime(sprite, {\n        topLeft: [0, 72],\n        sz: [24, 24],\n        frames: [\n          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,\n          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2,\n          2, 2, 2, 2, 2, 2, 2, 2,\n        ],\n        patterns: 5,\n      }),\n      new Anime(sprite, {\n        topLeft: [0, 60],\n        sz: [24, 12],\n        frames: [0, 1],\n        patterns: 2,\n        countDiv: 8,\n      }),\n      new NPCState(state0),\n      {\n        textOffset: [0, 4],\n      },\n    )\n  }\n}\n\nexport default ZEA\n","import Anime from './lib/Anime'\n\nimport NPC, { NPCState, InitialNPCState } from './NPC'\n\nimport { GameEventContext } from './context'\n\nclass Nggis extends NPC {\n  constructor(\n    ec: GameEventContext,\n    sprite: HTMLImageElement,\n    state0: InitialNPCState,\n  ) {\n    super(\n      ec,\n      new Anime(sprite, {\n        topLeft: [0, 96],\n        sz: [12, 12],\n        frames: [0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1],\n        patterns: 3,\n        countDiv: 2,\n      }),\n      new Anime(sprite, {\n        topLeft: [0, 60],\n        sz: [24, 12],\n        frames: [0, 1],\n        patterns: 2,\n        countDiv: 8,\n      }),\n      new NPCState(state0),\n      {\n        offset: [0, -16],\n        textOffset: [0, -19],\n      },\n    )\n  }\n}\n\nexport default Nggis\n","type DialogOption = {\n  timeout?: number\n}\n\nexport interface DialogManagerInterface {\n  showMessage(text: string, opt?: DialogOption): void\n  hideMessage(): void\n}\n\nclass DialogManager implements DialogManagerInterface {\n  readonly messageBox: HTMLDivElement\n  open: boolean\n\n  private text?: string\n  private timeoutTimer?: ReturnType<typeof setTimeout>\n\n  constructor(messageBox: HTMLDivElement) {\n    this.messageBox = messageBox\n    this.open = true\n  }\n\n  showMessage(text: string, opt?: DialogOption) {\n    if (this.timeoutTimer) {\n      clearTimeout(this.timeoutTimer)\n      this.timeoutTimer = undefined\n    }\n    this.text = text\n    this.messageBox.innerHTML = `${text} <span class=\"messageLast\"/>`\n    this.messageBox.style.display = 'block'\n    this.messageBox.classList.remove('hide')\n    this.open = true\n\n    if (opt?.timeout) {\n      this.timeoutTimer = setTimeout(this.hideMessage.bind(this), opt.timeout)\n    }\n  }\n\n  hideMessage() {\n    if (this.timeoutTimer) {\n      clearTimeout(this.timeoutTimer)\n      this.timeoutTimer = undefined\n    }\n    if (this.text) {\n      this.messageBox.innerHTML = this.text\n    }\n    this.messageBox.classList.add('hide')\n    this.open = false\n  }\n\n  keyup(e: Pick<KeyboardEvent, 'code'>) {\n    e.code === 'Space' && this.hideMessage()\n  }\n}\n\nexport default DialogManager\n","import { State } from './lib/StateMachine'\nimport DialogManager from './DialogManager'\n\ninterface hasDialogger {\n  hasDialog: boolean\n}\n\nexport const newDialogState = (\n  dm: DialogManager,\n  npc: hasDialogger,\n  texts: string[],\n  loops: number,\n  onDone?: () => void,\n) => {\n  const doneState: State = {\n    nextStates: {},\n    tick: () => {\n      onDone && onDone()\n      return null\n    },\n  }\n  let cnt = 0\n  return {\n    nextStates: { done: doneState },\n    tick: () => {\n      dm.showMessage(texts[cnt % texts.length])\n      cnt += 1\n      if (loops < 1) {\n        return null\n      }\n      return cnt < loops * texts.length ? null : 'done'\n    },\n    enter: () => {\n      npc.hasDialog = true\n    },\n    leave: () => {\n      npc.hasDialog = false\n    },\n  }\n}\n","import Sprite from './lib/Sprite'\nimport Anime from './lib/Anime'\nimport CollisionMap from './lib/CollisionMap'\nimport { Vec2 } from './lib/vec'\nimport StateMachine from './lib/StateMachine'\n\nimport Kernel from './Kernel'\nimport ZEA from './ZEA'\nimport Nggis from './Nggis'\nimport DialogManager from './DialogManager'\nimport GameData, { importGameData } from './GameData'\nimport { CellType } from './MapCell'\nimport { ItemUpdater } from './item'\nimport { GameEventContext } from './context'\nimport { newDialogState } from './dialogState'\n\nclass Game {\n  readonly canvas: HTMLCanvasElement\n  readonly ctx: CanvasRenderingContext2D\n  readonly sprite: HTMLImageElement\n  cleanup?: () => void\n\n  readonly scale: number\n\n  readonly dm: DialogManager\n\n  readonly game: GameData\n  readonly bgUnder: Sprite\n  readonly bg: Sprite\n  readonly bgOverlay: Sprite\n  readonly bgOverlayAnime: Anime\n  readonly bgGrad: Sprite\n  readonly kernel: Kernel\n  readonly collisionMap: CollisionMap\n  readonly zea: ZEA\n  readonly nggis: Nggis\n\n  command: Map<string, boolean>\n\n  origin: Vec2\n  viewpoint: Vec2\n  debugView: boolean\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    sprite: HTMLImageElement,\n    messageBox: HTMLDivElement,\n    updateItems: (updater: ItemUpdater) => void,\n  ) {\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw 'failed to get canvas context'\n    }\n    this.ctx = ctx\n    this.canvas = canvas\n    this.ctx.imageSmoothingEnabled = false\n    this.sprite = sprite\n\n    updateItems(() => [])\n    this.dm = new DialogManager(messageBox)\n\n    let effectItem: (id: number) => void = () => {\n      console.error('item effect not ready')\n    }\n    const eventCtx: GameEventContext = {\n      updateItems,\n      dialogManager: this.dm,\n      effectItem: (id: number) => {\n        effectItem && effectItem(id)\n      },\n    }\n\n    this.game = importGameData(eventCtx)\n\n    this.scale = 3\n    this.origin = this.game.init.kernel\n    this.viewpoint = [0, 0]\n    this.debugView = false\n\n    this.kernel = new Kernel(eventCtx, this.sprite, {\n      pos: this.origin,\n    })\n    effectItem = this.kernel.effectItem\n\n    this.bgUnder = new Sprite(this.sprite, {\n      topLeft: [512, 512],\n      sz: [16, 16],\n      baseScale: 2,\n    })\n    this.bg = new Sprite(this.sprite, {\n      topLeft: [0, 512],\n      sz: [16, 16],\n    })\n    this.bgOverlay = new Sprite(this.sprite, {\n      topLeft: [0, 896],\n      sz: [16, 16],\n    })\n    this.bgOverlayAnime = new Anime(this.sprite, {\n      topLeft: [0, 768],\n      sz: [16, 16],\n      frames: [0, 0, 1, 1, 2, 2, 1, 1],\n    })\n    this.bgGrad = new Sprite(this.sprite, {\n      topLeft: [1024 - 16, 0],\n      sz: [16, 1024],\n    })\n\n    this.zea = new ZEA(eventCtx, this.sprite, {\n      pos: this.game.spawn.ZEA,\n      mode: 1,\n    })\n    const zTalk = newDialogState(this.dm, this.zea, ['Hemlo', '...'], 0)\n    const smZ = new StateMachine(zTalk)\n    this.zea.onAction.push(smZ.handler(zTalk))\n\n    this.nggis = new Nggis(eventCtx, this.sprite, {\n      pos: this.game.spawn.Nggis,\n      mode: 0,\n    })\n    const nggisTalk = newDialogState(this.dm, this.nggis, ['Halo'], 1)\n    const smNggis = new StateMachine(nggisTalk)\n    this.nggis.onAction.push(smNggis.handler(nggisTalk))\n\n    this.kernel.onInteract = () => {\n      this.zea.interact()\n      this.nggis.interact()\n    }\n\n    this.collisionMap = new CollisionMap(this.game.m, [16, 16])\n    this.command = new Map<string, boolean>()\n  }\n\n  start() {\n    const tickTimer = setInterval(this.tick.bind(this), 80)\n\n    this.dm.showMessage(\"What's poppin?\")\n\n    this.cleanup = () => {\n      clearInterval(tickTimer)\n    }\n  }\n\n  stop() {\n    if (this.cleanup) {\n      this.cleanup()\n    }\n  }\n\n  tick() {\n    this.ctx.fillStyle = 'black'\n    this.ctx.fillRect(0, 0, 640, 480)\n\n    try {\n      const kernelCmd = {\n        left: this.command.has('ArrowLeft'),\n        right: this.command.has('ArrowRight'),\n        space: this.command.has('Space'),\n      }\n      this.kernel.tick(kernelCmd, this.game.m, this.collisionMap)\n      this.bgOverlayAnime.tick()\n\n      if (this.game.m.at(this.kernel.mapPos()).typ === CellType.GameOver) {\n        this.kernel.reset()\n      }\n\n      const state = this.kernel.state\n      this.zea.tick(state.pos)\n      this.nggis.tick(state.pos)\n\n      const viewControl = (\n        vp: number,\n        diff: number,\n        tolerance: number,\n        gain: number,\n      ) => {\n        if (vp < diff - tolerance) {\n          vp += (diff - tolerance - vp) * gain\n        }\n        if (vp > diff + tolerance) {\n          vp += (diff + tolerance - vp) * gain\n        }\n        return Math.floor(vp)\n      }\n      this.viewpoint = [\n        viewControl(this.viewpoint[0], state.pos[0] - this.origin[0], 24, 0.25),\n        viewControl(\n          this.viewpoint[1],\n          (state.pos[1] - this.origin[1]) / 1.25,\n          16,\n          0.3,\n        ),\n      ]\n\n      const offset = this.offset()\n\n      for (let x = 0; x < 640 / this.scale; x += 16) {\n        this.bgGrad.draw(\n          this.ctx,\n          [x, -1024 + 480 / this.scale - this.viewpoint[1] / 3 + 12],\n          this.scale,\n          0,\n          0,\n        )\n      }\n      this.game.m.draw(this.ctx, this.bgUnder, offset, this.scale, 'under')\n      this.game.m.draw(this.ctx, this.bg, offset, this.scale, 'main')\n      this.zea.draw(this.ctx, offset, this.scale)\n      this.nggis.draw(this.ctx, offset, this.scale)\n\n      this.kernel.draw(this.ctx, offset, this.scale)\n      this.game.m.draw(this.ctx, this.bgOverlay, offset, this.scale, 'overlay')\n      this.game.m.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n      this.game.m.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n\n      if (this.debugView) {\n        this.collisionMap.draw(this.ctx, offset, this.scale)\n      }\n    } catch (err) {\n      console.error(err)\n      this.stop()\n    }\n  }\n\n  private offset(): Vec2 {\n    return [-this.viewpoint[0] - 28, 110 - this.origin[1] - this.viewpoint[1]]\n  }\n\n  keydown(e: Pick<KeyboardEvent, 'code'>) {\n    if (this.dm.open) {\n      return\n    }\n    this.command.set(e.code, true)\n  }\n\n  keyup(e: Pick<KeyboardEvent, 'code'>) {\n    if (this.command.has('F2')) {\n      this.debugView = !this.debugView\n    }\n    if (this.dm.open) {\n      this.dm.keyup(e)\n      return\n    }\n    this.command.delete(e.code)\n  }\n}\n\nexport default Game\n","import React from 'react'\nimport { css } from '@emotion/react'\n\nimport { Item, ItemUpdater } from './item'\n\ntype Props = {\n  sprite: string\n  scale: number\n  style: React.CSSProperties\n}\n\nclass ItemUI extends React.Component<Props> {\n  readonly updateItems: (updater: ItemUpdater) => void\n  items: Item[]\n\n  constructor(props: Props) {\n    super(props)\n    this.items = []\n\n    const self = this\n\n    this.updateItems = (updater: ItemUpdater) => {\n      self.items = updater(self.items)\n      self.forceUpdate()\n    }\n  }\n\n  render() {\n    const { sprite, scale, style } = this.props\n    return (\n      <div\n        style={{\n          ...style,\n          width: '100%',\n          padding: '16px 64px',\n          display: 'flex',\n        }}\n        css={css`\n          > div {\n            width: ${12 * scale}px;\n            height: ${12 * scale}px;\n            border: ${scale}px solid #666;\n            background-color: rgba(64, 64, 64, 0.5);\n            background-image: url(${sprite});\n            background-size: ${1024 * scale}px ${1024 * scale}px;\n            image-rendering: pixelated;\n            margin: ${scale / 2}px;\n            opacity: 0.5;\n            position: relative;\n          }\n          > div.usableItem {\n            opacity: 1;\n          }\n          > div.usableItem:hover {\n            border: ${scale}px solid #ccc;\n            cursor: pointer;\n          }\n          > div > span {\n            visibility: hidden;\n            background-color: rgba(0, 0, 0, 0.5);\n            border-radius: 4px;\n            text-align: center;\n            padding: 4px;\n            color: white;\n            position: absolute;\n            width: 100px;\n            top: 120%;\n            left: 50%;\n            margin-left: -50px;\n          }\n          > div:hover > span {\n            visibility: visible;\n          }\n        `}\n      >\n        {this.items.map((item) => {\n          const clses = [] as string[]\n          item.onUse && clses.push('usableItem')\n          return (\n            <div\n              key={item.id}\n              onClick={() => item.onUse && item.onUse()}\n              className={clses.join(' ')}\n              style={{\n                backgroundPosition: `-${(512 + item.id * 12) * scale}px 0`,\n              }}\n            >\n              <span>{item.label}</span>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ItemUI\n","import Game from './Game'\nexport { default as ItemUI } from './ItemUI'\n\nexport default Game\n","export default __webpack_public_path__ + \"static/frame-ca82859c688250bcb14362e22a5d3408.svg\";","export default __webpack_public_path__ + \"static/frame_inner-60f1e379dcb3ddb7d26173360cdc65ba.svg\";","import React, { useEffect, useRef } from 'react'\nimport { css } from '@emotion/react'\n\nimport Game, { ItemUI } from '@doramanjyu/z-game/game'\n\nimport frame from '@doramanjyu/z-game/images/frame.svg'\nimport frameInner from '@doramanjyu/z-game/images/frame_inner.svg'\nimport sprite from '@doramanjyu/z-game/images/sprite.png'\n\nimport '@doramanjyu/z-game/css/message.css'\n\nconst IndexPage = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const spriteRef = useRef<HTMLImageElement>(null)\n  const messageRef = useRef<HTMLDivElement>(null)\n  const itemUIRef = useRef<ItemUI>(null)\n\n  useEffect(() => {\n    if (\n      !canvasRef.current ||\n      !spriteRef.current ||\n      !messageRef.current ||\n      !itemUIRef.current\n    ) {\n      return\n    }\n    const g = new Game(\n      canvasRef.current,\n      spriteRef.current,\n      messageRef.current,\n      itemUIRef.current.updateItems,\n    )\n    g.start()\n    const keydown = g.keydown.bind(g)\n    const keyup = g.keyup.bind(g)\n    document.addEventListener('keydown', keydown)\n    document.addEventListener('keyup', keyup)\n\n    const noPreventDefault = (e: TouchEvent): boolean => {\n      if (!e.target || !(e.target instanceof Element)) {\n        return false\n      }\n      return e.target.closest('a,.usableItem') !== null\n    }\n    let [tx, ty] = [0, 0]\n    let touching = false\n    const touchMoveThreshold = 32\n    const touchStart = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (!touching) {\n        tx = e.touches[0].screenX\n        ty = e.touches[0].screenY\n        touching = true\n      }\n    }\n    const touchMove = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches[0].screenY > ty + touchMoveThreshold) {\n        keydown({ code: 'Space' })\n      }\n      if (e.touches[0].screenX > tx + touchMoveThreshold) {\n        keydown({ code: 'ArrowLeft' })\n        keyup({ code: 'ArrowRight' })\n      } else if (e.touches[0].screenX < tx - touchMoveThreshold) {\n        keydown({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      } else {\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      }\n    }\n    const touchEnd = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches.length === 0) {\n        keyup({ code: 'Space' })\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n        touching = false\n      }\n    }\n\n    document.addEventListener('touchstart', touchStart)\n    document.addEventListener('touchmove', touchMove)\n    document.addEventListener('touchend', touchEnd)\n    document.addEventListener('touchcancel', touchEnd)\n\n    return () => {\n      document.removeEventListener('touchstart', touchStart)\n      document.removeEventListener('touchmove', touchMove)\n      document.removeEventListener('touchend', touchEnd)\n      document.removeEventListener('touchcancel', touchEnd)\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n      g.stop()\n    }\n  }, [canvasRef, spriteRef, messageRef])\n\n  return (\n    <main style={{ width: '788px', margin: '0 auto' }}>\n      <title>What's poppin?</title>\n      <h1 style={{ textAlign: 'center', margin: '3px' }}>UNDER DEVELOPMENT</h1>\n      <div\n        style={{\n          width: '788px',\n          height: '689px',\n          backgroundImage: `url(${frame})`,\n          position: 'relative',\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          style={{\n            backgroundColor: '#000',\n            width: '640px',\n            height: '480px',\n            borderRadius: '30px',\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n          css={css`\n            &:focus-visible {\n              outline-style: none !important;\n            }\n          `}\n          width=\"640\"\n          height=\"480\"\n        />\n        <div\n          style={{\n            width: '640px',\n            height: '480px',\n            backgroundImage: `url(${frameInner})`,\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n        >\n          <ItemUI\n            ref={itemUIRef}\n            sprite={sprite}\n            scale={3}\n            style={{\n              position: 'absolute',\n              top: '16px',\n            }}\n          />\n          <div\n            ref={messageRef}\n            style={{\n              boxSizing: 'border-box',\n              backgroundColor: 'rgba(255, 255, 255, 0.8)',\n              borderWidth: '2px',\n              borderStyle: 'dotted',\n              borderRadius: '0 20px 20px 20px',\n              borderColor: 'white',\n              position: 'absolute',\n              width: '540px',\n              height: '85px',\n              left: '50px',\n              bottom: '30px',\n              padding: '10px 20px',\n              fontSize: '20px',\n              lineHeight: '25px',\n              color: '#600',\n              display: 'none',\n              animationIterationCount: 1,\n              animationFillMode: 'forwards',\n            }}\n            css={css`\n              animation: bounceIn 0.8s ease;\n              &.hide {\n                animation: bounceOut 0.5s ease;\n              }\n              span.messageLast:after {\n                content: '▼';\n                animation: cursorBlink 1s linear infinite;\n              }\n              span.message:after {\n                content: '▶';\n                animation: cursorBlink 1s linear infinite;\n              }\n            `}\n          />\n        </div>\n      </div>\n      <img\n        ref={spriteRef}\n        src={sprite}\n        style={{\n          display: 'none',\n        }}\n      />\n      <div\n        style={{\n          paddingTop: '10px',\n          textAlign: 'right',\n          color: '#666',\n        }}\n        css={css`\n          > a {\n            color: #666;\n          }\n          > a:hover {\n            color: #999;\n          }\n        `}\n      >\n        <a\n          href=\"https://github.com/Doramanjyu/z-game\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source repository\n        </a>\n      </div>\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"names":["Sprite","sprite","prop","this","baseScale","draw","ctx","p","scale","mode1","mode2","opt","undefined","opacity","globalAlpha","drawImage","topLeft","sz","Math","floor","Anime","cnt","frame","propAnime","patterns","frames","reduce","acc","v","countDiv","tick","forceCnt","length","diff","a","b","cross","intersected","sa","ea","sb","eb","tolerance","c1","c2","c3","c4","CollisionMap","map","cellSz","scanned","intersection","check","col","right","left","s","min","e","max","motion","j","i","at","collision","forEach","pp","pol","push","k","top","bottom","o","strokeStyle","lineWidth","cellRange","screenSize","cw","ch","beginPath","c","x","y","moveTo","lineTo","stroke","closePath","xy","drawPolygon","poly","StateMachine","initial","current","nopState","states","Map","set","next","n","pop","Object","values","nextStates","has","leave","enter","console","log","reset","handler","KernelState","pos","vel","onGround","orientation","jumpPow","heat","popped","trans","clone","Kernel","ec","state0","eventCtx","ellasticCoeff","anime","idle","squat","jump","currentAnime","shadow","explosion","headUpText","item","state","explosionPos","explosionNum","headUpTextMode","interacting","self","effectItem","id","earnedItem","effectCnt","mapPos","round","cmd","gameMap","colMap","space","mpBottom","headUpTextModePrev","decreasePopped","dec","mpBottom0","cell","onAction","h","target","onInteract","offset","kernelMode","mode","heatCount","ceil","NPCState","NPC","props","active","hasDialog","textOffset","activePrev","abs","onArrive","interact","szText","GameEventTarget","ZEA","Nggis","DialogManager","messageBox","open","showMessage","text","timeoutTimer","clearTimeout","innerHTML","style","display","classList","remove","timeout","setTimeout","hideMessage","bind","add","keyup","code","newDialogState","dm","npc","texts","loops","onDone","done","Game","canvas","updateItems","getContext","imageSmoothingEnabled","error","dialogManager","game","importGameData","origin","init","kernel","viewpoint","debugView","bgUnder","bg","bgOverlay","bgOverlayAnime","bgGrad","zea","spawn","zTalk","smZ","nggis","nggisTalk","smNggis","collisionMap","m","command","start","tickTimer","setInterval","cleanup","clearInterval","stop","fillStyle","fillRect","kernelCmd","typ","CellType","viewControl","vp","gain","err","keydown","delete","ItemUI","items","updater","forceUpdate","render","width","padding","css","clses","onUse","key","onClick","className","join","backgroundPosition","label","React","canvasRef","useRef","spriteRef","messageRef","itemUIRef","useEffect","g","document","addEventListener","noPreventDefault","Element","closest","tx","ty","touching","touchStart","preventDefault","stopPropagation","touches","screenX","screenY","touchMove","touchEnd","removeEventListener","margin","textAlign","height","backgroundImage","position","ref","backgroundColor","borderRadius","frameInner","boxSizing","borderWidth","borderStyle","borderColor","fontSize","lineHeight","color","animationIterationCount","animationFillMode","src","paddingTop","href","rel"],"sourceRoot":""}