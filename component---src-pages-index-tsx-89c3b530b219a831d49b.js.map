{"version":3,"file":"component---src-pages-index-tsx-89c3b530b219a831d49b.js","mappings":"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","sources":["webpack://z-game/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://z-game/./src/game/lib/Sprite.ts","webpack://z-game/./src/game/lib/Anime.ts","webpack://z-game/./src/game/lib/GameMap.ts","webpack://z-game/./src/game/lib/Vec.ts","webpack://z-game/./src/game/lib/Collision.ts","webpack://z-game/./src/game/lib/StateMachine.ts","webpack://z-game/./src/game/Kernel.ts","webpack://z-game/./src/game/events.ts","webpack://z-game/./src/game/MapCell.ts","webpack://z-game/./src/game/NPC.ts","webpack://z-game/./src/game/ZEA.ts","webpack://z-game/./src/game/dialog.ts","webpack://z-game/./src/game/index.ts","webpack://z-game/./src/images/frame.svg","webpack://z-game/./src/images/frame_inner.svg","webpack://z-game/./src/pages/index.tsx","webpack://z-game/./src/images/sprite.png"],"sourcesContent":["export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { Vec2 } from './Vec'\n\nexport interface Drawer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    s: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ): void\n  sz(): Vec2\n}\n\nexport type SpriteProp = {\n  topLeft: Vec2\n  sz: Vec2\n  baseScale?: number\n}\n\nexport class Sprite implements Drawer {\n  readonly sprite: HTMLImageElement\n  readonly prop: Required<SpriteProp>\n\n  constructor(sprite: HTMLImageElement, prop: SpriteProp) {\n    this.sprite = sprite\n    this.prop = {\n      baseScale: 1,\n      ...prop,\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    ctx.drawImage(\n      this.sprite,\n      this.prop.topLeft[0] + mode1 * this.prop.sz[0],\n      this.prop.topLeft[1] + mode2 * this.prop.sz[1],\n      this.prop.sz[0],\n      this.prop.sz[1],\n      Math.floor(p[0] * scale),\n      Math.floor(p[1] * scale),\n      this.prop.sz[0] * scale * this.prop.baseScale,\n      this.prop.sz[1] * scale * this.prop.baseScale,\n    )\n  }\n\n  sz() {\n    return this.prop.sz\n  }\n}\n","import { Vec2 } from './Vec'\nimport { Sprite, SpriteProp, Drawer } from './Sprite'\n\nexport type AnimeProp = SpriteProp & {\n  frames: number[]\n  patterns?: number\n  countDiv?: number\n}\n\nexport class Anime extends Sprite implements Drawer {\n  readonly propAnime: AnimeProp\n  private readonly patterns: number\n  private readonly countDiv: number\n  private cnt = 0\n  frame = 0\n\n  constructor(sprite: HTMLImageElement, prop: AnimeProp) {\n    super(sprite, prop)\n    this.propAnime = prop\n    if (prop.patterns) {\n      this.patterns = prop.patterns\n    } else {\n      this.patterns = prop.frames.reduce((acc, v) => (acc > v ? acc : v), 0)\n    }\n    if (prop.countDiv) {\n      this.countDiv = prop.countDiv\n    } else {\n      this.countDiv = 1\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    super.draw(\n      ctx,\n      p,\n      scale,\n      this.propAnime.frames[this.frame] + this.patterns * mode1,\n      mode2,\n    )\n  }\n\n  tick(forceCnt?: number): number {\n    if (forceCnt !== undefined) {\n      this.cnt = forceCnt\n    }\n    this.frame = Math.floor(\n      (this.cnt / this.countDiv) % this.propAnime.frames.length,\n    )\n    this.cnt++\n    return this.propAnime.frames[this.frame]\n  }\n}\n","import { Drawer } from './Sprite'\nimport { Vec2, Polygon } from './Vec'\n\nexport type Appearance = [number, number]\n\nexport interface Cell {\n  appearance(layer: string): Appearance\n}\n\nexport interface CollisionCell extends Cell {\n  collision(): Polygon[]\n}\n\nexport class GameMap<T extends Cell> {\n  readonly sz: Vec2\n  readonly data: Array<T>\n  readonly s: Vec2\n  readonly e: Vec2\n  readonly screenSize: Vec2\n  readonly baseScale: number\n\n  constructor(\n    sz: Vec2,\n    loader: (x: number, y: number) => T,\n    s: Vec2,\n    e: Vec2,\n    screenSize: Vec2,\n    baseScale = 1,\n  ) {\n    this.sz = sz\n    this.s = s\n    this.e = e\n    this.screenSize = screenSize\n    this.baseScale = baseScale\n    this.data = new Array<T>(sz[0] * sz[1])\n    for (let j = 0; j < sz[1]; j++) {\n      for (let i = 0; i < sz[0]; i++) {\n        this.data[j * sz[0] + i] = loader(i, j)\n      }\n    }\n  }\n\n  at(p: Vec2): T {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    return this.data[p2[1] * this.sz[0] + p2[0]]\n  }\n\n  set(p: Vec2, v: T) {\n    const p2 = posMod([Math.floor(p[0]), Math.floor(p[1])], this.sz)\n    this.data[p2[1] * this.sz[0] + p2[0]] = v\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    d: Drawer,\n    o: Vec2,\n    scale: number,\n    layer: string,\n  ) {\n    const v = cellRange(\n      d.sz(),\n      this.s,\n      this.e,\n      o,\n      this.screenSize,\n      scale,\n      this.baseScale,\n    )\n    const [cw, ch] = d.sz()\n\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.at([i, j])\n        const a = c.appearance(layer)\n        d.draw(ctx, [v.o[0] + i * cw, v.o[1] + j * ch], scale, a[0], a[1])\n      }\n    }\n  }\n}\n\nconst posMod = (a: Vec2, b: Vec2): Vec2 => {\n  const m = [a[0] % b[0], a[1] % b[1]]\n  return [m[0] < 0 ? m[0] + b[0] : m[0], m[1] < 0 ? m[1] + b[1] : m[1]]\n}\n\nexport const cellRange = (\n  sz: Vec2,\n  s: Vec2,\n  e: Vec2,\n  o: Vec2,\n  screenSize: Vec2,\n  scale: number,\n  baseScale: number,\n): {\n  s: Vec2\n  e: Vec2\n  o: Vec2\n} => {\n  o[0] = Math.floor(o[0])\n  o[1] = Math.floor(o[1])\n\n  const gw = Math.round(screenSize[0] / (sz[0] * scale)) + 2\n  const gh = Math.round(screenSize[1] / (sz[1] * scale)) + 2\n\n  const left = o[0] + s[0] * sz[0] + sz[0]\n  const top = o[1] + s[1] * sz[1] + sz[1]\n\n  const si2 = left >= 0 ? s[0] : s[0] - Math.floor(left / sz[0]) - baseScale + 1\n  const ei2 = si2 + gw + baseScale - 1\n\n  const sj2 = top >= 0 ? s[1] : s[1] - Math.floor(top / sz[1]) - baseScale + 1\n  const ej2 = sj2 + gh + baseScale - 1\n\n  return {\n    s: [si2, sj2],\n    e: [ei2, ej2],\n    o,\n  }\n}\n","export type Vec2 = [number, number]\nexport type Polygon = Vec2[]\n\nexport const diff = (a: Vec2, b: Vec2): Vec2 => [a[0] - b[0], a[1] - b[1]]\nexport const cross = (a: Vec2, b: Vec2): number => a[0] * b[1] - a[1] * b[0]\n\nexport const intersected = (\n  sa: Vec2,\n  ea: Vec2,\n  sb: Vec2,\n  eb: Vec2,\n  tolerance: number,\n): boolean => {\n  const a = diff(ea, sa)\n  const b = diff(eb, sb)\n  const c1 = cross(a, diff(sb, sa))\n  const c2 = cross(a, diff(eb, sa))\n  const c3 = cross(b, diff(sa, sb))\n  const c4 = cross(b, diff(ea, sb))\n  return c1 < tolerance && c2 > -tolerance && c3 > -tolerance && c4 < tolerance\n}\n\nexport const norm = (a: Vec2): number => Math.sqrt(a[0] * a[0] + a[1] * a[1])\n","import { CollisionCell, GameMap, cellRange } from './GameMap'\nimport { Vec2, Polygon, intersected } from './Vec'\n\ntype CollisionState = {\n  right: boolean\n  left: boolean\n\n  bottom?: number\n  top?: number\n}\n\nexport class CollisionMap {\n  readonly map: GameMap<CollisionCell>\n  readonly cellSz: Vec2\n\n  private scanned: Polygon[]\n  private intersection: Polygon[]\n  private motion?: Polygon\n\n  constructor(map: GameMap<CollisionCell>, cellSz: Vec2) {\n    this.map = map\n    this.cellSz = cellSz\n    this.scanned = []\n    this.intersection = []\n  }\n\n  check(a: Vec2, b: Vec2): CollisionState {\n    const col: CollisionState = {\n      right: false,\n      left: false,\n    }\n    const s: Vec2 = [\n      Math.floor(Math.min(a[0], b[0]) / this.cellSz[0] - 0.5),\n      Math.floor(Math.min(a[1], b[1]) / this.cellSz[1] - 0.5),\n    ]\n    const e: Vec2 = [\n      Math.floor(Math.max(a[0], b[0]) / this.cellSz[0] + 0.5),\n      Math.floor(Math.max(a[1], b[1]) / this.cellSz[1] + 0.5),\n    ]\n    const motion: [Vec2, Vec2] = [\n      [a[0] / this.cellSz[0], a[1] / this.cellSz[1]],\n      [b[0] / this.cellSz[0], b[1] / this.cellSz[1]],\n    ]\n    this.motion = motion\n    for (let j = s[1]; j < e[1] + 1; j++) {\n      for (let i = s[0]; i < e[0] + 1; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          const pol = pp.reduce<Polygon>(\n            (acc, p) => (acc.push([i + p[0], j + p[1]]), acc),\n            [],\n          )\n          pol.length > 0 && this.scanned.push(pol)\n          for (let k = 0; k < pol.length - 1; k++) {\n            if (!intersected(pol[k], pol[k + 1], motion[0], motion[1], 0.005)) {\n              continue\n            }\n            if (pol[k][0] > pol[k + 1][0]) {\n              col.top = pol[k][1] + 0.01\n            } else if (pol[k][0] < pol[k + 1][0]) {\n              col.bottom = pol[k][1] - 0.01\n            }\n            if (pol[k][1] > pol[k + 1][1]) {\n              col.right = true\n            } else if (pol[k][1] < pol[k + 1][1]) {\n              col.left = true\n            }\n            this.intersection.push([pol[k], pol[k + 1]])\n          }\n        })\n      }\n    }\n    return col\n  }\n\n  draw(ctx: CanvasRenderingContext2D, o: Vec2, scale: number) {\n    ctx.strokeStyle = 'white'\n    ctx.lineWidth = 1\n\n    const v = cellRange(\n      this.cellSz,\n      this.map.s,\n      this.map.e,\n      o,\n      this.map.screenSize,\n      scale,\n      1,\n    )\n    const [cw, ch] = this.cellSz\n\n    ctx.beginPath()\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          pp.forEach((p, c) => {\n            const [x, y] = [\n              (v.o[0] + cw * (i + p[0])) * scale,\n              (v.o[1] + ch * (j + p[1])) * scale,\n            ]\n            c == 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y)\n          })\n          ctx.stroke()\n        })\n      }\n    }\n    ctx.closePath()\n\n    const xy = (p: Vec2): Vec2 => [\n      (v.o[0] + cw * p[0]) * scale,\n      (v.o[1] + ch * p[1]) * scale,\n    ]\n    const drawPolygon = (poly: Polygon[]) => {\n      ctx.beginPath()\n      poly.forEach((pp) => {\n        pp.forEach((p, c) =>\n          c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n        )\n        ctx.stroke()\n      })\n      ctx.closePath()\n    }\n\n    ctx.strokeStyle = 'yellow'\n    ctx.lineWidth = 1\n    drawPolygon(this.scanned)\n    this.scanned = []\n\n    ctx.strokeStyle = 'orange'\n    ctx.lineWidth = 5\n    drawPolygon(this.intersection)\n    this.intersection = []\n\n    if (this.motion) {\n      ctx.strokeStyle = 'red'\n      ctx.lineWidth = 4\n      ctx.beginPath()\n      this.motion.forEach((p, c) =>\n        c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n      )\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n","export class StateMachine {\n  private readonly initial: State\n  private readonly states: Map<State, null>\n  current: State\n\n  constructor(initial: State) {\n    this.current = nopState\n    this.initial = initial\n    this.states = new Map<State, null>()\n    this.set(initial)\n\n    const next = [initial]\n    while (next.length > 0) {\n      const n = next.pop()\n      if (!n) {\n        continue\n      }\n      this.states.set(n, null)\n      Object.values(n.nextStates).forEach(\n        (s) => this.states.has(s) || next.push(s),\n      )\n    }\n  }\n\n  set(s: State) {\n    this.current.leave && this.current.leave()\n    this.current = s\n    s.enter && s.enter()\n  }\n\n  tick() {\n    const next = this.current.tick()\n    if (next === null) {\n      return\n    }\n    console.log(next, this.current.nextStates)\n    this.set(this.current.nextStates[next])\n  }\n\n  reset() {\n    this.current = nopState\n    this.states.forEach((v, s) => s.reset && s.reset())\n    this.set(this.initial)\n  }\n}\n\nexport type State = {\n  nextStates: { [name: string]: State }\n  tick: () => string | null\n  reset?: () => void\n  enter?: () => void\n  leave?: () => void\n}\n\nexport const nopState = {\n  nextStates: {},\n  tick: () => null,\n}\n","import { Anime } from './lib/Anime'\nimport { Sprite } from './lib/Sprite'\nimport { Vec2 } from './lib/Vec'\nimport { GameMap } from './lib/GameMap'\nimport { CollisionMap } from './lib/Collision'\n\nimport { MapCell } from './MapCell'\n\nconst heatCount = 8\nconst popResume = 96\n\ntype KernelCommand = {\n  left: boolean\n  right: boolean\n  space: boolean\n}\n\ntype InitialKernelState = {\n  pos?: Vec2\n  vel?: Vec2\n  onGround?: boolean\n  orientation?: number\n}\n\nclass KernelState {\n  pos: Vec2\n  vel: Vec2\n  onGround: boolean\n  orientation: number\n\n  jumpPow: Vec2\n  heat: number\n  popped: number\n  trans: number\n\n  constructor(s: InitialKernelState) {\n    this.pos = s.pos || [0, 0]\n    this.vel = s.vel || [0, 0]\n    this.onGround = s.onGround || true\n    this.orientation = s.orientation || 0\n    this.jumpPow = [0, 0]\n    this.heat = 0\n    this.popped = 0\n    this.trans = 0\n  }\n\n  clone(): KernelState {\n    return {\n      ...this,\n      pos: [this.pos[0], this.pos[1]],\n      vel: [this.vel[0], this.vel[1]],\n      jumpPow: [this.jumpPow[0], this.jumpPow[1]],\n    }\n  }\n}\n\nexport class Kernel {\n  private readonly anime: {\n    idle: Anime\n    squat: Anime\n    jump: Anime\n  }\n  private readonly shadow: Sprite\n  private readonly trans: Sprite\n  private readonly explosion: Sprite\n  private readonly headUpText: Anime\n  private readonly ellasticCoeff: number\n  private currentAnime: Anime\n  private state0: KernelState\n  private interacting: boolean\n\n  onInteract?: () => void\n\n  state: KernelState\n  explosionPos: Vec2\n  explosionNum: number\n  headUpTextMode: number\n\n  constructor(sprite: HTMLImageElement, state0: InitialKernelState) {\n    this.ellasticCoeff = 0.5\n\n    this.anime = {\n      idle: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [0, 0, 0, 2, 0, 1, 0],\n        patterns: 4,\n      }),\n      squat: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [3],\n        patterns: 4,\n      }),\n      jump: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [2, 2, 0, 2, 2, 2, 0],\n        patterns: 4,\n      }),\n    }\n    this.currentAnime = this.anime.idle\n    this.shadow = new Sprite(sprite, {\n      topLeft: [0, 24],\n      sz: [12, 12],\n    })\n    this.trans = new Sprite(sprite, {\n      topLeft: [0, 36],\n      sz: [12, 12],\n    })\n    this.explosion = new Sprite(sprite, {\n      topLeft: [0, 48],\n      sz: [36, 12],\n    })\n    this.headUpText = new Anime(sprite, {\n      topLeft: [0, 60],\n      sz: [24, 12],\n      frames: [0, 1],\n      patterns: 2,\n      countDiv: 8,\n    })\n\n    this.state0 = new KernelState(state0)\n    this.state = this.state0.clone()\n\n    this.explosionPos = this.state.pos\n    this.explosionNum = 0\n    this.headUpTextMode = 0\n    this.interacting = false\n  }\n\n  reset() {\n    this.state = this.state0.clone()\n  }\n\n  tick(cmd: KernelCommand, gameMap: GameMap<MapCell>, colMap: CollisionMap) {\n    if (cmd.left && this.state.onGround) {\n      this.state.jumpPow[0]--\n      if (this.state.jumpPow[0] < -4) {\n        this.state.jumpPow[0] = -4\n      }\n      this.state.orientation = 0\n    }\n    if (cmd.right && this.state.onGround) {\n      this.state.jumpPow[0]++\n      if (this.state.jumpPow[0] > 4) {\n        this.state.jumpPow[0] = 4\n      }\n      this.state.orientation = 1\n    }\n    if (\n      !cmd.left &&\n      !cmd.right &&\n      !cmd.space &&\n      this.state.onGround &&\n      this.state.jumpPow[0] !== 0 &&\n      this.state.jumpPow[1] === 0\n    ) {\n      this.state.onGround = false\n      this.state.vel = [this.state.jumpPow[0], -4]\n      this.state.jumpPow = [0, 0]\n    }\n    let interacting = false\n    if (!cmd.space || !this.state.onGround) {\n      if (\n        this.state.jumpPow[0] == 0 &&\n        this.state.jumpPow[1] < 0 &&\n        this.state.jumpPow[1] > -6\n      ) {\n        interacting = true\n      } else if (!cmd.space && this.state.jumpPow[1] < 0) {\n        this.state.onGround = false\n        if (this.state.popped == 0) {\n          this.state.vel = this.state.jumpPow\n        } else {\n          this.state.vel = [this.state.jumpPow[0], this.state.jumpPow[1] * 0.5]\n        }\n        this.state.jumpPow = [0, 0]\n      } else if (!this.state.onGround) {\n        if (this.state.popped == 0) {\n          this.state.vel[1] += 2\n        } else {\n          this.state.vel[1] += 1.5\n        }\n        if (this.state.vel[1] > 14) {\n          this.state.vel[1] = 14\n        }\n      }\n    }\n\n    const mpBottom: Vec2 = [\n      Math.round((this.state.pos[0] - 2) / 16),\n      Math.floor(this.state.pos[1] / 16),\n    ]\n    const col = colMap.check(\n      [this.state.pos[0] + 6, this.state.pos[1]],\n      [\n        this.state.pos[0] + this.state.vel[0] + 6,\n        this.state.pos[1] + this.state.vel[1],\n      ],\n    )\n    const headUpTextModePrev = this.headUpTextMode\n    this.headUpTextMode = gameMap.at(mpBottom).headUpText()\n    if (this.headUpTextMode > 0 && headUpTextModePrev == 0) {\n      this.headUpText.tick(0)\n    }\n\n    this.currentAnime = this.anime.idle\n    if (cmd.space && this.state.onGround) {\n      this.currentAnime = this.anime.squat\n      this.state.jumpPow[1] -= 2\n      if (this.state.jumpPow[1] < -11) {\n        this.state.jumpPow[1] = -11\n      }\n    } else if (!this.state.onGround) {\n      if (col.top && this.state.vel[1] < 0) {\n        this.state.vel[1] *= -this.ellasticCoeff\n        this.state.vel[0] *= this.ellasticCoeff\n        this.state.pos[1] = col.top * 16\n      }\n      if (\n        (col.left && this.state.vel[0] < 0) ||\n        (col.right && this.state.vel[0] > 0)\n      ) {\n        this.state.vel[0] *= -this.ellasticCoeff\n        this.state.pos[0] += this.state.vel[0]\n      }\n      if (col.bottom && this.state.vel[1] >= 0) {\n        this.state.pos[1] = col.bottom * 16\n        this.state.vel = [0, 0]\n        this.state.onGround = true\n        this.currentAnime = this.anime.squat\n      }\n      if (this.state.vel[1] < 0) {\n        this.currentAnime = this.anime.jump\n      } else if (this.state.vel[1] > 0) {\n        this.currentAnime = this.anime.squat\n      }\n    }\n\n    this.state.pos[0] += this.state.vel[0]\n    this.state.pos[1] += this.state.vel[1]\n\n    if (this.explosionNum && this.explosionNum > 0) {\n      this.explosionNum--\n      if (this.explosionNum == 2) {\n        this.state.heat = 5 * heatCount\n        this.state.popped = popResume\n\n        this.state.onGround = false\n        this.state.vel = [0, -17]\n        this.state.jumpPow = [0, 0]\n      }\n    } else if (gameMap.at(mpBottom).heat()) {\n      this.state.heat++\n      if (this.state.heat > 5 * heatCount - 2 && this.state.popped == 0) {\n        this.explosionPos = [this.state.pos[0], this.state.pos[1]]\n        this.explosionNum = 3\n      }\n    } else {\n      this.state.heat--\n      if (this.state.heat < 0) {\n        this.state.heat = 0\n      }\n      if (this.state.popped > 0) {\n        this.state.popped--\n        this.state.heat = 0\n        if (this.state.popped < 0) {\n          this.state.popped = 0\n        }\n      }\n    }\n    if (this.state.trans < 8) {\n      this.state.trans++\n    }\n\n    if (interacting && !this.interacting) {\n      const mpBottom0: Vec2 = [\n        Math.round((this.state.pos[0] - 2) / 16),\n        Math.floor(this.state.pos[1] / 16),\n      ]\n      const cell = gameMap.at(mpBottom0)\n      cell.onAction.forEach((h) => h({ target: cell }))\n      this.onInteract && this.onInteract()\n    }\n    this.interacting = interacting\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const kernelMode = this.currentAnime.tick()\n    if (this.headUpTextMode > 0) {\n      this.headUpText.tick()\n    }\n    const mode =\n      (this.state.popped > 0 && this.state.popped != 2) ||\n      this.state.heat == heatCount * 5 - 1\n        ? 5\n        : Math.min(4, Math.floor(this.state.heat / heatCount))\n    if (this.state.onGround) {\n      this.shadow.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        mode * 4 + kernelMode,\n        0,\n      )\n    }\n    if (this.state.trans > 2) {\n      this.currentAnime.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 6],\n        scale,\n        mode,\n        this.state.orientation,\n      )\n    }\n    if (this.state.trans < 8) {\n      this.trans.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        this.state.trans - 2,\n        0,\n      )\n    }\n    if (this.explosionNum > 0) {\n      this.explosion.draw(\n        ctx,\n        [\n          offset[0] + this.explosionPos[0] - 12,\n          offset[1] + this.explosionPos[1] - 8,\n        ],\n        scale,\n        3 - this.explosionNum,\n        0,\n      )\n    }\n    if (this.headUpTextMode > 0) {\n      this.headUpText.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 15],\n        scale,\n        this.headUpTextMode - 1,\n        0,\n      )\n    }\n  }\n}\n","export type EventHandler<T> = (e: GameEvent<T>) => void\n\nexport class GameEventTarget<T> {\n  onArrive: EventHandler<T>[]\n  onAction: EventHandler<T>[]\n\n  constructor() {\n    this.onArrive = []\n    this.onAction = []\n  }\n}\n\nexport type GameEvent<T> = {\n  target: T\n}\n","import { Cell, Appearance } from './lib/GameMap'\nimport { Polygon } from './lib/Vec'\n\nimport { GameEventTarget } from './events'\n\ntype CollisionDir = {\n  top: boolean\n  bottom: boolean\n  left: boolean\n  right: boolean\n}\n\nexport class MapCell extends GameEventTarget<MapCell> implements Cell {\n  readonly v: { [layer: string]: Appearance }\n  readonly typ: number\n  readonly colDir: CollisionDir\n\n  constructor(\n    v: { [layer: string]: Appearance },\n    typ: number,\n    col: CollisionDir,\n  ) {\n    super()\n    this.v = v\n    this.typ = typ\n    this.colDir = col\n  }\n\n  appearance(layer: string): Appearance {\n    return this.v[layer]\n  }\n\n  heat(): boolean {\n    return this.typ == 2\n  }\n\n  collision(): Polygon[] {\n    const topOffset = 0.05\n    const pol: Polygon[] = []\n    if (this.colDir.top) {\n      pol.push([\n        [0, topOffset],\n        [1, topOffset],\n      ])\n    }\n    if (this.colDir.right && this.colDir.bottom && !this.colDir.left) {\n      pol.push([\n        [1, topOffset],\n        [1, 0.9],\n        [0.3, 1.4],\n        [0, 1.4],\n      ])\n      return pol\n    }\n    if (this.colDir.left && this.colDir.bottom && !this.colDir.right) {\n      pol.push([\n        [1, 1.4],\n        [0.7, 1.4],\n        [0, 0.9],\n        [0, topOffset],\n      ])\n      return pol\n    }\n\n    if (this.colDir.right) {\n      pol.push([\n        [1, 0.1],\n        [1, 1.4],\n      ])\n    }\n    if (this.colDir.bottom) {\n      pol.push([\n        [1, 1.4],\n        [0, 1.4],\n      ])\n    }\n    if (this.colDir.left) {\n      pol.push([\n        [0, 1.4],\n        [0, 0.1],\n      ])\n    }\n\n    return pol\n  }\n\n  headUpText(): number {\n    if (this.onAction.length > 0) {\n      return 1\n    }\n    if (this.typ == 2) {\n      return 2\n    }\n    return 0\n  }\n}\n","import { Anime } from './lib/Anime'\nimport { Vec2 } from './lib/Vec'\n\nimport { GameEventTarget } from './events'\n\nexport class NPCState {\n  pos: Vec2\n  mode: number\n\n  constructor(s: InitialNPCState) {\n    this.pos = s.pos || [0, 0]\n    this.mode = s.mode || 0\n  }\n}\n\nexport type InitialNPCState = {\n  pos?: Vec2\n  mode?: number\n}\n\nexport class NPC<State extends NPCState = NPCState> extends GameEventTarget<\n  NPC<State>\n> {\n  private readonly anime: Anime\n  private readonly headUpText: Anime\n  state: State\n  active: boolean\n  hasDialog: boolean\n\n  constructor(anime: Anime, headUpText: Anime, s: State) {\n    super()\n    this.anime = anime\n    this.headUpText = headUpText\n    this.state = s\n    this.active = false\n    this.hasDialog = false\n  }\n\n  tick(p: Vec2) {\n    const sz = this.anime.sz()\n    const activePrev = this.active\n    this.active =\n      Math.abs(p[0] - this.state.pos[0]) < sz[0] / 2 &&\n      Math.abs(p[1] - this.state.pos[1]) < sz[1] / 2\n\n    if (!activePrev && this.active && this.onArrive) {\n      this.onArrive.forEach((h) => h({ target: this }))\n    }\n\n    this.anime.tick()\n    this.headUpText.tick()\n  }\n\n  interact() {\n    if (this.active && this.onAction.length) {\n      this.onAction.forEach((h) => h({ target: this }))\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const sz = this.anime.sz()\n    this.anime.draw(\n      ctx,\n      [\n        offset[0] + this.state.pos[0] - sz[0] / 2,\n        offset[1] + this.state.pos[1] - sz[1] + 6,\n      ],\n      scale,\n      this.state.mode,\n      0,\n    )\n    if (this.hasDialog) {\n      this.headUpText.draw(\n        ctx,\n        [\n          offset[0] + this.state.pos[0] - sz[0] / 2,\n          offset[1] + this.state.pos[1] - sz[1] + 4,\n        ],\n        scale,\n        2 + (this.active ? 1 : 0),\n        0,\n      )\n    }\n  }\n}\n","import { Anime } from './lib/Anime'\n\nimport { NPC, NPCState, InitialNPCState } from './NPC'\n\nexport class ZEA extends NPC {\n  constructor(sprite: HTMLImageElement, state0: InitialNPCState) {\n    super(\n      new Anime(sprite, {\n        topLeft: [0, 72],\n        sz: [24, 24],\n        frames: [\n          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,\n          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2,\n          2, 2, 2, 2, 2, 2, 2, 2,\n        ],\n        patterns: 5,\n      }),\n      new Anime(sprite, {\n        topLeft: [0, 60],\n        sz: [24, 12],\n        frames: [0, 1],\n        patterns: 2,\n        countDiv: 8,\n      }),\n      new NPCState(state0),\n    )\n  }\n}\n","type DialogOption = {\n  timeout?: number\n}\n\nexport class DialogManager {\n  readonly messageBox: HTMLDivElement\n\n  private timeoutTimer?: ReturnType<typeof setTimeout>\n\n  constructor(messageBox: HTMLDivElement) {\n    this.messageBox = messageBox\n  }\n\n  showMessage(text: string, opt?: DialogOption) {\n    if (this.timeoutTimer) {\n      clearTimeout(this.timeoutTimer)\n    }\n    this.messageBox.innerHTML = text\n    this.messageBox.style.display = 'block'\n    this.messageBox.classList.remove('hide')\n\n    if (opt?.timeout) {\n      this.timeoutTimer = setTimeout(this.hideMessage.bind(this), opt.timeout)\n    }\n  }\n\n  hideMessage() {\n    this.messageBox.classList.add('hide')\n  }\n}\n","import { Sprite } from './lib/Sprite'\nimport { Anime } from './lib/Anime'\nimport { GameMap } from './lib/GameMap'\nimport { CollisionMap } from './lib/Collision'\nimport { Vec2 } from './lib/Vec'\nimport { StateMachine, State, nopState } from './lib/StateMachine'\n\nimport { Kernel } from './Kernel'\nimport { MapCell } from './MapCell'\nimport { ZEA } from './ZEA'\nimport { EventHandler } from './events'\nimport { DialogManager } from './dialog'\n\nimport mapData from './data/map.yaml'\n\nimport '@doramanjyu/z-game/css/layout.css'\n\nclass Game {\n  readonly canvas: HTMLCanvasElement\n  readonly ctx: CanvasRenderingContext2D\n  readonly sprite: HTMLImageElement\n  cleanup?: () => void\n\n  readonly scale: number\n\n  readonly sm: StateMachine\n  readonly dm: DialogManager\n\n  readonly gameMap: GameMap<MapCell>\n  readonly bgUnder: Sprite\n  readonly bg: Sprite\n  readonly bgOverlay: Sprite\n  readonly bgOverlayAnime: Anime\n  readonly bgGrad: Sprite\n  readonly kernel: Kernel\n  readonly collisionMap: CollisionMap\n  readonly zea: ZEA\n\n  command: Map<string, boolean>\n\n  origin: Vec2\n  viewpoint: Vec2\n  debugView: boolean\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    sprite: HTMLImageElement,\n    messageBox: HTMLDivElement,\n  ) {\n    const self = this\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw 'failed to get canvas context'\n    }\n    this.ctx = ctx\n    this.canvas = canvas\n    this.ctx.imageSmoothingEnabled = false\n    this.sprite = sprite\n\n    this.dm = new DialogManager(messageBox)\n\n    this.scale = 3\n    this.origin = [mapData.start.pos[0] * 16, mapData.start.pos[1] * 16]\n    this.viewpoint = [0, 0]\n    this.debugView = false\n\n    this.kernel = new Kernel(this.sprite, {\n      pos: this.origin,\n    })\n    this.bgUnder = new Sprite(this.sprite, {\n      topLeft: [512, 512],\n      sz: [16, 16],\n      baseScale: 2,\n    })\n    this.bg = new Sprite(this.sprite, {\n      topLeft: [0, 512],\n      sz: [16, 16],\n    })\n    this.bgOverlay = new Sprite(this.sprite, {\n      topLeft: [0, 896],\n      sz: [16, 16],\n    })\n    this.bgOverlayAnime = new Anime(this.sprite, {\n      topLeft: [0, 768],\n      sz: [16, 16],\n      frames: [0, 0, 1, 1, 2, 2, 1, 1],\n    })\n    this.bgGrad = new Sprite(this.sprite, {\n      topLeft: [1024 - 16, 0],\n      sz: [16, 1024],\n    })\n    this.zea = new ZEA(this.sprite, {\n      pos: [70, 48],\n      mode: 1,\n    })\n    const zDialogs = ['Hemlo', '...']\n    let zTalkCnt = 0\n    const [zTalk, zTalkHandler] = this.newEventState<ZEA>({\n      nextStates: { next: nopState },\n      tick: () => {\n        self.dm.showMessage(zDialogs[zTalkCnt], { timeout: 2000 })\n        zTalkCnt += 1\n        return zTalkCnt < zDialogs.length ? null : 'next'\n      },\n      enter: () => {\n        this.zea.hasDialog = true\n      },\n      leave: () => {\n        this.zea.hasDialog = false\n      },\n    })\n    this.zea.onAction.push(zTalkHandler)\n    this.sm = new StateMachine(zTalk)\n\n    this.kernel.onInteract = () => {\n      this.zea.interact()\n    }\n\n    const mw = mapData.main[0].length\n    const mh = mapData.main.length\n    this.gameMap = new GameMap<MapCell>(\n      [mw, mh],\n      (x: number, y: number) => {\n        const t = mapData.type[y][x]\n        const tr = x + 1 > mw - 1 ? mw - 1 : mapData.type[y][x + 1]\n        const tl = x - 1 < 0 ? 0 : mapData.type[y][x - 1]\n        const tt = y - 1 < 0 ? 0 : mapData.type[y - 1][x]\n        const tb = y + 1 > mh - 1 ? mh - 1 : mapData.type[y + 1][x]\n        const col = {\n          top: t == 2 || t == 3 || (t == 1 && tt != 1),\n          bottom: t == 1 && tb != 1,\n          left: t == 1 && tl != 1,\n          right: t == 1 && tr != 1,\n        }\n        const c = new MapCell(\n          {\n            main: [mapData.main[y][x][1], mapData.main[y][x][0]],\n            under: [mapData.under[y][x][1], mapData.under[y][x][0]],\n            overlay: [mapData.overlay[y][x][1], mapData.overlay[y][x][0]],\n            overlayAnime:\n              mapData.item[y][x] > 0\n                ? [0, 2]\n                : [\n                    mapData.overlayAnime[y][x][1],\n                    mapData.overlayAnime[y][x][0],\n                  ],\n          },\n          t,\n          col,\n        )\n        if (mapData.item[y][x] > 0) {\n          c.onAction.push((e) => {\n            c.onAction = []\n            e.target.v['overlayAnime'] = [0, 0]\n            self.dm.showMessage('Yum Yum', { timeout: 2000 })\n          })\n        }\n        return c\n      },\n      [-100, 0],\n      [100, mh],\n      [640, 480],\n    )\n    this.collisionMap = new CollisionMap(this.gameMap, [16, 16])\n    this.command = new Map<string, boolean>()\n  }\n\n  start() {\n    const tickTimer = setInterval(this.tick.bind(this), 80)\n\n    this.dm.showMessage(\"What's poppin?\", { timeout: 5000 })\n\n    this.cleanup = () => {\n      clearInterval(tickTimer)\n    }\n  }\n\n  stop() {\n    if (this.cleanup) {\n      this.cleanup()\n    }\n  }\n\n  tick() {\n    this.ctx.fillStyle = 'black'\n    this.ctx.fillRect(0, 0, 640, 480)\n\n    try {\n      const kernelCmd = {\n        left: this.command.has('ArrowLeft'),\n        right: this.command.has('ArrowRight'),\n        space: this.command.has('Space'),\n      }\n      this.kernel.tick(kernelCmd, this.gameMap, this.collisionMap)\n      this.bgOverlayAnime.tick()\n\n      const state = this.kernel.state\n      if (state.pos[1] > 16 * 18) {\n        this.kernel.reset()\n      }\n\n      this.zea.tick(state.pos)\n\n      const diffY = (state.pos[1] - this.origin[1]) / 1.25\n      if (this.viewpoint[1] < diffY - 16) {\n        this.viewpoint[1] += (diffY - 16 - this.viewpoint[1]) / 4\n      }\n      if (this.viewpoint[1] > diffY + 16) {\n        this.viewpoint[1] += (diffY + 16 - this.viewpoint[1]) / 4\n      }\n      const diffX =\n        (Math.round(((state.pos[0] - this.origin[0] - 6) * 3) / 640) * 640) / 3\n      this.viewpoint[0] += Math.max(\n        -50,\n        Math.min(50, (diffX - this.viewpoint[0]) / 2),\n      )\n\n      const offset = this.offset()\n\n      for (let x = 0; x < 640 / this.scale; x += 16) {\n        this.bgGrad.draw(\n          this.ctx,\n          [x, -1024 + 480 / this.scale - this.viewpoint[1] / 3 + 12],\n          this.scale,\n          0,\n          0,\n        )\n      }\n      this.gameMap.draw(this.ctx, this.bgUnder, offset, this.scale, 'under')\n      this.gameMap.draw(this.ctx, this.bg, offset, this.scale, 'main')\n      this.zea.draw(this.ctx, offset, this.scale)\n\n      this.kernel.draw(this.ctx, offset, this.scale)\n      this.gameMap.draw(this.ctx, this.bgOverlay, offset, this.scale, 'overlay')\n      this.gameMap.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n      this.gameMap.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n\n      if (this.debugView) {\n        this.collisionMap.draw(this.ctx, offset, this.scale)\n      }\n    } catch (err) {\n      console.error(err)\n      this.stop()\n    }\n  }\n\n  private offset(): Vec2 {\n    return [-this.viewpoint[0], 110 - this.origin[1] - this.viewpoint[1]]\n  }\n\n  keydown(e: Pick<KeyboardEvent, 'code'>) {\n    this.command.set(e.code, true)\n  }\n\n  keyup(e: Pick<KeyboardEvent, 'code'>) {\n    if (this.command.has('F2')) {\n      this.debugView = !this.debugView\n    }\n    this.command.delete(e.code)\n  }\n\n  private newEventState<T>(state: State): [State, EventHandler<T>] {\n    const h = () => {\n      if (this.sm.current === state) {\n        this.sm.tick()\n      }\n    }\n    return [state, h]\n  }\n}\n\nexport default Game\n","export default __webpack_public_path__ + \"static/frame-ca82859c688250bcb14362e22a5d3408.svg\";","export default __webpack_public_path__ + \"static/frame_inner-60f1e379dcb3ddb7d26173360cdc65ba.svg\";","import React, { useEffect, useRef } from 'react'\nimport { css, keyframes } from '@emotion/react'\n\nimport Game from '@doramanjyu/z-game/game'\n\nimport frame from '@doramanjyu/z-game/images/frame.svg'\nimport frameInner from '@doramanjyu/z-game/images/frame_inner.svg'\nimport sprite from '@doramanjyu/z-game/images/sprite.png'\n\nconst IndexPage = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const spriteRef = useRef<HTMLImageElement>(null)\n  const messageRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!canvasRef.current || !spriteRef.current || !messageRef.current) {\n      return\n    }\n    const g = new Game(canvasRef.current, spriteRef.current, messageRef.current)\n    g.start()\n    const keydown = g.keydown.bind(g)\n    const keyup = g.keyup.bind(g)\n    document.addEventListener('keydown', keydown)\n    document.addEventListener('keyup', keyup)\n\n    const noPreventDefault = (e: TouchEvent): boolean => {\n      if (!e.target || !(e.target instanceof Element)) {\n        return false\n      }\n      return e.target.closest('a') !== null\n    }\n    let [tx, ty] = [0, 0]\n    let touching = false\n    const touchMoveThreshold = 32\n    const touchStart = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (!touching) {\n        tx = e.touches[0].screenX\n        ty = e.touches[0].screenY\n        touching = true\n      }\n    }\n    const touchMove = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches[0].screenY > ty + touchMoveThreshold) {\n        keydown({ code: 'Space' })\n      }\n      if (e.touches[0].screenX > tx + touchMoveThreshold) {\n        keydown({ code: 'ArrowLeft' })\n        keyup({ code: 'ArrowRight' })\n      } else if (e.touches[0].screenX < tx - touchMoveThreshold) {\n        keydown({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      } else {\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      }\n    }\n    const touchEnd = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches.length === 0) {\n        keyup({ code: 'Space' })\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n        touching = false\n      }\n    }\n\n    document.addEventListener('touchstart', touchStart)\n    document.addEventListener('touchmove', touchMove)\n    document.addEventListener('touchend', touchEnd)\n    document.addEventListener('touchcancel', touchEnd)\n\n    return () => {\n      document.removeEventListener('touchstart', touchStart)\n      document.removeEventListener('touchmove', touchMove)\n      document.removeEventListener('touchend', touchEnd)\n      document.removeEventListener('touchcancel', touchEnd)\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n      g.stop()\n    }\n  }, [canvasRef, spriteRef, messageRef])\n\n  return (\n    <main style={{ width: '788px', margin: '0 auto' }}>\n      <title>What's poppin?</title>\n      <h1 style={{ textAlign: 'center', margin: '3px' }}>UNDER DEVELOPMENT</h1>\n      <div\n        style={{\n          width: '788px',\n          height: '689px',\n          backgroundImage: `url(${frame})`,\n          position: 'relative',\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          style={{\n            backgroundColor: '#000',\n            width: '640px',\n            height: '480px',\n            borderRadius: '30px',\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n          css={css`\n            &:focus-visible {\n              outline-style: none !important;\n            }\n          `}\n          width=\"640\"\n          height=\"480\"\n        />\n        <div\n          style={{\n            width: '640px',\n            height: '480px',\n            backgroundImage: `url(${frameInner})`,\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n        />\n        <div\n          ref={messageRef}\n          style={{\n            boxSizing: 'border-box',\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderWidth: '2px',\n            borderStyle: 'dotted',\n            borderRadius: '0 20px 20px 20px',\n            borderColor: 'white',\n            position: 'absolute',\n            width: '540px',\n            height: '85px',\n            left: '124px',\n            bottom: '34px',\n            padding: '10px 20px',\n            fontSize: '20px',\n            lineHeight: '25px',\n            color: '#600',\n            display: 'none',\n            animationIterationCount: 1,\n            animationFillMode: 'forwards',\n          }}\n          css={css`\n            animation: ${bounceIn} 0.8s ease;\n            &.hide {\n              animation: ${bounceOut} 0.5s ease;\n            }\n          `}\n        ></div>\n      </div>\n      <img\n        ref={spriteRef}\n        src={sprite}\n        style={{\n          display: 'none',\n        }}\n      />\n      <div\n        style={{\n          paddingTop: '10px',\n          textAlign: 'right',\n          color: '#666',\n        }}\n        css={css`\n          > a {\n            color: #666;\n          }\n          > a:hover {\n            color: #999;\n          }\n        `}\n      >\n        <a\n          href=\"https://github.com/Doramanjyu/z-game\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source repository\n        </a>\n      </div>\n    </main>\n  )\n}\n\nconst bounceIn = keyframes`\n  from, 20%, 46%, 80%, to {\n    transform: translate3d(0,0,0);\n    visibility: visible;\n  }\n  40%, 42% {\n    transform: translate3d(0, -20px, 0);\n  }\n  70% {\n    transform: translate3d(0, -8px, 0);\n  }\n  90% {\n    transform: translate3d(0,-2px,0);\n  }\n`\n\nconst bounceOut = keyframes`\n  from, 50% {\n    transform: translate3d(0,0,0);\n  }\n  20% {\n    transform: translate3d(0,-2px,0);\n  }\n  70% {\n    transform: translate3d(0,-5px,0);\n  }\n  to {\n    visibility: hidden;\n  }\n`\n\nexport default IndexPage\n","export default __webpack_public_path__ + \"static/sprite-cd853a3e08192952875ad489b5b32e2b.png\";"],"names":["_taggedTemplateLiteralLoose","strings","raw","slice","Sprite","sprite","prop","this","baseScale","draw","ctx","p","scale","mode1","mode2","drawImage","topLeft","sz","Math","floor","Anime","cnt","frame","propAnime","patterns","frames","reduce","acc","v","countDiv","tick","forceCnt","undefined","length","GameMap","loader","s","e","screenSize","data","Array","j","i","at","p2","posMod","set","d","o","layer","cellRange","cw","ch","a","appearance","b","m","gw","round","gh","left","top","si2","ei2","sj2","diff","cross","intersected","sa","ea","sb","eb","tolerance","c1","c2","c3","c4","CollisionMap","map","cellSz","scanned","intersection","check","col","right","min","max","motion","collision","forEach","pp","pol","push","k","bottom","strokeStyle","lineWidth","beginPath","c","x","y","moveTo","lineTo","stroke","closePath","xy","drawPolygon","poly","StateMachine","initial","current","nopState","states","Map","next","n","pop","Object","values","nextStates","has","leave","enter","console","log","reset","KernelState","pos","vel","onGround","orientation","jumpPow","heat","popped","trans","clone","Kernel","state0","ellasticCoeff","anime","idle","squat","jump","currentAnime","shadow","explosion","headUpText","state","explosionPos","explosionNum","headUpTextMode","interacting","cmd","gameMap","colMap","space","mpBottom","headUpTextModePrev","mpBottom0","cell","onAction","h","target","onInteract","offset","kernelMode","mode","heatCount","GameEventTarget","onArrive","MapCell","typ","colDir","topOffset","NPCState","ZEA","active","hasDialog","activePrev","abs","interact","DialogManager","messageBox","showMessage","text","opt","timeoutTimer","clearTimeout","innerHTML","style","display","classList","remove","timeout","setTimeout","hideMessage","bind","add","Game","canvas","self","getContext","imageSmoothingEnabled","dm","origin","mapData","viewpoint","debugView","kernel","bgUnder","bg","bgOverlay","bgOverlayAnime","bgGrad","zea","zDialogs","zTalkCnt","newEventState","zTalk","zTalkHandler","sm","mw","mh","t","tr","tl","tt","tb","main","under","overlay","overlayAnime","collisionMap","command","start","tickTimer","setInterval","cleanup","clearInterval","stop","fillStyle","fillRect","kernelCmd","diffY","diffX","err","error","keydown","code","keyup","delete","bounceIn","keyframes","bounceOut","canvasRef","useRef","spriteRef","messageRef","useEffect","g","document","addEventListener","noPreventDefault","Element","closest","tx","ty","touching","touchStart","preventDefault","stopPropagation","touches","screenX","screenY","touchMove","touchEnd","removeEventListener","width","margin","textAlign","height","backgroundImage","position","ref","backgroundColor","borderRadius","css","frameInner","boxSizing","borderWidth","borderStyle","borderColor","padding","fontSize","lineHeight","color","animationIterationCount","animationFillMode","src","paddingTop","href","rel"],"sourceRoot":""}