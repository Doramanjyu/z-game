{"version":3,"file":"component---src-pages-index-tsx-3a849be7934c927f7136.js","mappings":"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","sources":["webpack://z-game/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://z-game/./src/game/lib/Sprite.ts","webpack://z-game/./src/game/lib/Anime.ts","webpack://z-game/./src/game/lib/vec.ts","webpack://z-game/./src/game/lib/CollisionMap.ts","webpack://z-game/./src/game/lib/StateMachine.ts","webpack://z-game/./src/game/Kernel.ts","webpack://z-game/./src/game/NPC.ts","webpack://z-game/./src/game/ZEA.ts","webpack://z-game/./src/game/DialogManager.ts","webpack://z-game/./src/game/Game.ts","webpack://z-game/./src/game/index.ts","webpack://z-game/./src/images/frame.svg","webpack://z-game/./src/images/frame_inner.svg","webpack://z-game/./src/pages/index.tsx"],"sourcesContent":["export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { Vec2 } from './vec'\n\nexport interface Drawer {\n  draw(\n    ctx: CanvasRenderingContext2D,\n    s: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ): void\n  sz(): Vec2\n}\n\nexport type SpriteProp = {\n  topLeft: Vec2\n  sz: Vec2\n  baseScale?: number\n}\n\nclass Sprite implements Drawer {\n  readonly sprite: HTMLImageElement\n  readonly prop: Required<SpriteProp>\n\n  constructor(sprite: HTMLImageElement, prop: SpriteProp) {\n    this.sprite = sprite\n    this.prop = {\n      baseScale: 1,\n      ...prop,\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    ctx.drawImage(\n      this.sprite,\n      this.prop.topLeft[0] + mode1 * this.prop.sz[0],\n      this.prop.topLeft[1] + mode2 * this.prop.sz[1],\n      this.prop.sz[0],\n      this.prop.sz[1],\n      Math.floor(p[0] * scale),\n      Math.floor(p[1] * scale),\n      this.prop.sz[0] * scale * this.prop.baseScale,\n      this.prop.sz[1] * scale * this.prop.baseScale,\n    )\n  }\n\n  sz() {\n    return this.prop.sz\n  }\n}\n\nexport default Sprite\n","import { Vec2 } from './vec'\nimport Sprite, { SpriteProp, Drawer } from './Sprite'\n\nexport type AnimeProp = SpriteProp & {\n  frames: number[]\n  patterns?: number\n  countDiv?: number\n}\n\nclass Anime extends Sprite implements Drawer {\n  readonly propAnime: AnimeProp\n  private readonly patterns: number\n  private readonly countDiv: number\n  private cnt = 0\n  frame = 0\n\n  constructor(sprite: HTMLImageElement, prop: AnimeProp) {\n    super(sprite, prop)\n    this.propAnime = prop\n    if (prop.patterns) {\n      this.patterns = prop.patterns\n    } else {\n      this.patterns = prop.frames.reduce((acc, v) => (acc > v ? acc : v), 0) + 1\n    }\n    if (prop.countDiv) {\n      this.countDiv = prop.countDiv\n    } else {\n      this.countDiv = 1\n    }\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    p: Vec2,\n    scale: number,\n    mode1: number,\n    mode2: number,\n  ) {\n    super.draw(\n      ctx,\n      p,\n      scale,\n      this.propAnime.frames[this.frame] + this.patterns * mode1,\n      mode2,\n    )\n  }\n\n  tick(forceCnt?: number): number {\n    if (forceCnt !== undefined) {\n      this.cnt = forceCnt\n    }\n    this.frame = Math.floor(\n      (this.cnt / this.countDiv) % this.propAnime.frames.length,\n    )\n    this.cnt++\n    return this.propAnime.frames[this.frame]\n  }\n}\n\nexport default Anime\n","export type Vec2 = [number, number]\nexport type Polygon = Vec2[]\n\nexport const diff = (a: Vec2, b: Vec2): Vec2 => [a[0] - b[0], a[1] - b[1]]\nexport const cross = (a: Vec2, b: Vec2): number => a[0] * b[1] - a[1] * b[0]\n\nexport const intersected = (\n  sa: Vec2,\n  ea: Vec2,\n  sb: Vec2,\n  eb: Vec2,\n  tolerance: number,\n): boolean => {\n  const a = diff(ea, sa)\n  const b = diff(eb, sb)\n  const c1 = cross(a, diff(sb, sa))\n  const c2 = cross(a, diff(eb, sa))\n  const c3 = cross(b, diff(sa, sb))\n  const c4 = cross(b, diff(ea, sb))\n  return c1 < tolerance && c2 > -tolerance && c3 > -tolerance && c4 < tolerance\n}\n\nexport const norm = (a: Vec2): number => Math.sqrt(a[0] * a[0] + a[1] * a[1])\n","import GameMap, { CollisionCell, cellRange } from './GameMap'\nimport { Vec2, Polygon, intersected } from './vec'\n\ntype CollisionState = {\n  right: boolean\n  left: boolean\n\n  bottom?: number\n  top?: number\n}\n\nclass CollisionMap {\n  readonly map: GameMap<CollisionCell>\n  readonly cellSz: Vec2\n\n  private scanned: Polygon[]\n  private intersection: Polygon[]\n  private motion?: Polygon\n\n  constructor(map: GameMap<CollisionCell>, cellSz: Vec2) {\n    this.map = map\n    this.cellSz = cellSz\n    this.scanned = []\n    this.intersection = []\n  }\n\n  check(a: Vec2, b: Vec2): CollisionState {\n    const col: CollisionState = {\n      right: false,\n      left: false,\n    }\n    const s: Vec2 = [\n      Math.floor(Math.min(a[0], b[0]) / this.cellSz[0] - 0.5),\n      Math.floor(Math.min(a[1], b[1]) / this.cellSz[1] - 0.5),\n    ]\n    const e: Vec2 = [\n      Math.floor(Math.max(a[0], b[0]) / this.cellSz[0] + 0.5),\n      Math.floor(Math.max(a[1], b[1]) / this.cellSz[1] + 0.5),\n    ]\n    const motion: [Vec2, Vec2] = [\n      [a[0] / this.cellSz[0], a[1] / this.cellSz[1]],\n      [b[0] / this.cellSz[0], b[1] / this.cellSz[1]],\n    ]\n    this.motion = motion\n    for (let j = s[1]; j < e[1] + 1; j++) {\n      for (let i = s[0]; i < e[0] + 1; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          const pol = pp.reduce<Polygon>(\n            (acc, p) => (acc.push([i + p[0], j + p[1]]), acc),\n            [],\n          )\n          pol.length > 0 && this.scanned.push(pol)\n          for (let k = 0; k < pol.length - 1; k++) {\n            if (!intersected(pol[k], pol[k + 1], motion[0], motion[1], 0.005)) {\n              continue\n            }\n            if (pol[k][0] > pol[k + 1][0]) {\n              col.top = pol[k][1] + 0.01\n            } else if (pol[k][0] < pol[k + 1][0]) {\n              col.bottom = pol[k][1] - 0.01\n            }\n            if (pol[k][1] > pol[k + 1][1]) {\n              col.right = true\n            } else if (pol[k][1] < pol[k + 1][1]) {\n              col.left = true\n            }\n            this.intersection.push([pol[k], pol[k + 1]])\n          }\n        })\n      }\n    }\n    return col\n  }\n\n  draw(ctx: CanvasRenderingContext2D, o: Vec2, scale: number) {\n    ctx.strokeStyle = 'white'\n    ctx.lineWidth = 1\n\n    const v = cellRange(\n      this.cellSz,\n      this.map.s,\n      this.map.e,\n      o,\n      this.map.screenSize,\n      scale,\n      1,\n    )\n    const [cw, ch] = this.cellSz\n\n    ctx.beginPath()\n    for (let j = v.s[1]; j < v.e[1]; j++) {\n      for (let i = v.s[0]; i < v.e[0]; i++) {\n        const c = this.map.at([i, j])\n        c.collision().forEach((pp) => {\n          pp.forEach((p, c) => {\n            const [x, y] = [\n              (v.o[0] + cw * (i + p[0])) * scale,\n              (v.o[1] + ch * (j + p[1])) * scale,\n            ]\n            c == 0 ? ctx.moveTo(x, y) : ctx.lineTo(x, y)\n          })\n          ctx.stroke()\n        })\n      }\n    }\n    ctx.closePath()\n\n    const xy = (p: Vec2): Vec2 => [\n      (v.o[0] + cw * p[0]) * scale,\n      (v.o[1] + ch * p[1]) * scale,\n    ]\n    const drawPolygon = (poly: Polygon[]) => {\n      ctx.beginPath()\n      poly.forEach((pp) => {\n        pp.forEach((p, c) =>\n          c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n        )\n        ctx.stroke()\n      })\n      ctx.closePath()\n    }\n\n    ctx.strokeStyle = 'yellow'\n    ctx.lineWidth = 1\n    drawPolygon(this.scanned)\n    this.scanned = []\n\n    ctx.strokeStyle = 'orange'\n    ctx.lineWidth = 5\n    drawPolygon(this.intersection)\n    this.intersection = []\n\n    if (this.motion) {\n      ctx.strokeStyle = 'red'\n      ctx.lineWidth = 4\n      ctx.beginPath()\n      this.motion.forEach((p, c) =>\n        c == 0 ? ctx.moveTo(...xy(p)) : ctx.lineTo(...xy(p)),\n      )\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n\nexport default CollisionMap\n","class StateMachine {\n  private readonly initial: State\n  private readonly states: Map<State, null>\n  current: State\n\n  constructor(initial: State) {\n    this.current = nopState\n    this.initial = initial\n    this.states = new Map<State, null>()\n    this.set(initial)\n\n    const next = [initial]\n    while (next.length > 0) {\n      const n = next.pop()\n      if (!n) {\n        continue\n      }\n      this.states.set(n, null)\n      Object.values(n.nextStates).forEach(\n        (s) => this.states.has(s) || next.push(s),\n      )\n    }\n  }\n\n  set(s: State) {\n    this.current.leave && this.current.leave()\n    this.current = s\n    s.enter && s.enter()\n  }\n\n  tick() {\n    const next = this.current.tick()\n    if (next === null) {\n      return\n    }\n    console.log(next, this.current.nextStates)\n    this.set(this.current.nextStates[next])\n  }\n\n  reset() {\n    this.current = nopState\n    this.states.forEach((v, s) => s.reset && s.reset())\n    this.set(this.initial)\n  }\n}\n\nexport type State = {\n  nextStates: { [name: string]: State }\n  tick: () => string | null\n  reset?: () => void\n  enter?: () => void\n  leave?: () => void\n}\n\nexport const nopState = {\n  nextStates: {},\n  tick: () => null,\n}\n\nexport default StateMachine\n","import Anime from './lib/Anime'\nimport Sprite from './lib/Sprite'\nimport { Vec2 } from './lib/vec'\nimport GameMap from './lib/GameMap'\nimport CollisionMap from './lib/CollisionMap'\n\nimport MapCell from './MapCell'\n\nconst heatCount = 8\nconst popResume = 96\n\ntype KernelCommand = {\n  left: boolean\n  right: boolean\n  space: boolean\n}\n\ntype InitialKernelState = {\n  pos?: Vec2\n  vel?: Vec2\n  onGround?: boolean\n  orientation?: number\n}\n\nclass KernelState {\n  pos: Vec2\n  vel: Vec2\n  onGround: boolean\n  orientation: number\n\n  jumpPow: Vec2\n  heat: number\n  popped: number\n  trans: number\n\n  constructor(s: InitialKernelState) {\n    this.pos = s.pos || [0, 0]\n    this.vel = s.vel || [0, 0]\n    this.onGround = s.onGround || true\n    this.orientation = s.orientation || 0\n    this.jumpPow = [0, 0]\n    this.heat = 0\n    this.popped = 0\n    this.trans = 0\n  }\n\n  clone(): KernelState {\n    return {\n      ...this,\n      pos: [this.pos[0], this.pos[1]],\n      vel: [this.vel[0], this.vel[1]],\n      jumpPow: [this.jumpPow[0], this.jumpPow[1]],\n    }\n  }\n}\n\nclass Kernel {\n  private readonly anime: {\n    idle: Anime\n    squat: Anime\n    jump: Anime\n  }\n  private readonly shadow: Sprite\n  private readonly trans: Sprite\n  private readonly explosion: Sprite\n  private readonly headUpText: Anime\n  private readonly ellasticCoeff: number\n  private currentAnime: Anime\n  private state0: KernelState\n  private interacting: boolean\n\n  onInteract?: () => void\n\n  state: KernelState\n  explosionPos: Vec2\n  explosionNum: number\n  headUpTextMode: number\n\n  constructor(sprite: HTMLImageElement, state0: InitialKernelState) {\n    this.ellasticCoeff = 0.5\n\n    this.anime = {\n      idle: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [0, 0, 0, 2, 0, 1, 0],\n        patterns: 4,\n      }),\n      squat: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [3],\n        patterns: 4,\n      }),\n      jump: new Anime(sprite, {\n        topLeft: [0, 0],\n        sz: [12, 12],\n        frames: [2, 2, 0, 2, 2, 2, 0],\n        patterns: 4,\n      }),\n    }\n    this.currentAnime = this.anime.idle\n    this.shadow = new Sprite(sprite, {\n      topLeft: [0, 24],\n      sz: [12, 12],\n    })\n    this.trans = new Sprite(sprite, {\n      topLeft: [0, 36],\n      sz: [12, 12],\n    })\n    this.explosion = new Sprite(sprite, {\n      topLeft: [0, 48],\n      sz: [36, 12],\n    })\n    this.headUpText = new Anime(sprite, {\n      topLeft: [0, 60],\n      sz: [24, 12],\n      frames: [0, 1],\n      patterns: 2,\n      countDiv: 8,\n    })\n\n    this.state0 = new KernelState(state0)\n    this.state = this.state0.clone()\n\n    this.explosionPos = this.state.pos\n    this.explosionNum = 0\n    this.headUpTextMode = 0\n    this.interacting = false\n  }\n\n  reset() {\n    this.state = this.state0.clone()\n  }\n\n  tick(cmd: KernelCommand, gameMap: GameMap<MapCell>, colMap: CollisionMap) {\n    if (cmd.left && this.state.onGround) {\n      this.state.jumpPow[0]--\n      if (this.state.jumpPow[0] < -4) {\n        this.state.jumpPow[0] = -4\n      }\n      this.state.orientation = 0\n    }\n    if (cmd.right && this.state.onGround) {\n      this.state.jumpPow[0]++\n      if (this.state.jumpPow[0] > 4) {\n        this.state.jumpPow[0] = 4\n      }\n      this.state.orientation = 1\n    }\n    if (\n      !cmd.left &&\n      !cmd.right &&\n      !cmd.space &&\n      this.state.onGround &&\n      this.state.jumpPow[0] !== 0 &&\n      this.state.jumpPow[1] === 0\n    ) {\n      this.state.onGround = false\n      this.state.vel = [this.state.jumpPow[0], -4]\n      this.state.jumpPow = [0, 0]\n    }\n    let interacting = false\n    if (!cmd.space || !this.state.onGround) {\n      if (\n        this.state.jumpPow[0] == 0 &&\n        this.state.jumpPow[1] < 0 &&\n        this.state.jumpPow[1] > -6\n      ) {\n        interacting = true\n      } else if (!cmd.space && this.state.jumpPow[1] < 0) {\n        this.state.onGround = false\n        if (this.state.popped == 0) {\n          this.state.vel = this.state.jumpPow\n        } else {\n          this.state.vel = [this.state.jumpPow[0], this.state.jumpPow[1] * 0.5]\n        }\n        this.state.jumpPow = [0, 0]\n      } else if (!this.state.onGround) {\n        if (this.state.popped == 0) {\n          this.state.vel[1] += 2\n        } else {\n          this.state.vel[1] += 1.5\n        }\n        if (this.state.vel[1] > 14) {\n          this.state.vel[1] = 14\n        }\n      }\n    }\n\n    const mpBottom: Vec2 = [\n      Math.round((this.state.pos[0] - 2) / 16),\n      Math.floor(this.state.pos[1] / 16),\n    ]\n    const col = colMap.check(\n      [this.state.pos[0] + 6, this.state.pos[1]],\n      [\n        this.state.pos[0] + this.state.vel[0] + 6,\n        this.state.pos[1] + this.state.vel[1],\n      ],\n    )\n    const headUpTextModePrev = this.headUpTextMode\n    this.headUpTextMode = gameMap.at(mpBottom).headUpText()\n    if (this.headUpTextMode > 0 && headUpTextModePrev == 0) {\n      this.headUpText.tick(0)\n    }\n\n    this.currentAnime = this.anime.idle\n    if (cmd.space && this.state.onGround) {\n      this.currentAnime = this.anime.squat\n      this.state.jumpPow[1] -= 2\n      if (this.state.jumpPow[1] < -11) {\n        this.state.jumpPow[1] = -11\n      }\n    } else if (!this.state.onGround) {\n      if (col.top && this.state.vel[1] < 0) {\n        this.state.vel[1] *= -this.ellasticCoeff\n        this.state.vel[0] *= this.ellasticCoeff\n        this.state.pos[1] = col.top * 16\n      }\n      if (\n        (col.left && this.state.vel[0] < 0) ||\n        (col.right && this.state.vel[0] > 0)\n      ) {\n        this.state.vel[0] *= -this.ellasticCoeff\n        this.state.pos[0] += this.state.vel[0]\n      }\n      if (col.bottom && this.state.vel[1] >= 0) {\n        this.state.pos[1] = col.bottom * 16\n        this.state.vel = [0, 0]\n        this.state.onGround = true\n        this.currentAnime = this.anime.squat\n      }\n      if (this.state.vel[1] < 0) {\n        this.currentAnime = this.anime.jump\n      } else if (this.state.vel[1] > 0) {\n        this.currentAnime = this.anime.squat\n      }\n    }\n\n    this.state.pos[0] += this.state.vel[0]\n    this.state.pos[1] += this.state.vel[1]\n\n    if (this.explosionNum && this.explosionNum > 0) {\n      this.explosionNum--\n      if (this.explosionNum == 2) {\n        this.state.heat = 5 * heatCount\n        this.state.popped = popResume\n\n        this.state.onGround = false\n        this.state.vel = [0, -17]\n        this.state.jumpPow = [0, 0]\n      }\n    } else if (gameMap.at(mpBottom).heat()) {\n      this.state.heat++\n      if (this.state.heat > 5 * heatCount - 2 && this.state.popped == 0) {\n        this.explosionPos = [this.state.pos[0], this.state.pos[1]]\n        this.explosionNum = 3\n      }\n    } else {\n      this.state.heat--\n      if (this.state.heat < 0) {\n        this.state.heat = 0\n      }\n      if (this.state.popped > 0) {\n        this.state.popped--\n        this.state.heat = 0\n        if (this.state.popped < 0) {\n          this.state.popped = 0\n        }\n      }\n    }\n    if (this.state.trans < 8) {\n      this.state.trans++\n    }\n\n    if (interacting && !this.interacting) {\n      const mpBottom0: Vec2 = [\n        Math.round((this.state.pos[0] - 2) / 16),\n        Math.floor(this.state.pos[1] / 16),\n      ]\n      const cell = gameMap.at(mpBottom0)\n      cell.onAction.forEach((h) => h({ target: cell }))\n      this.onInteract && this.onInteract()\n    }\n    this.interacting = interacting\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const kernelMode = this.currentAnime.tick()\n    if (this.headUpTextMode > 0) {\n      this.headUpText.tick()\n    }\n    const mode =\n      (this.state.popped > 0 && this.state.popped != 2) ||\n      this.state.heat == heatCount * 5 - 1\n        ? 5\n        : Math.min(4, Math.floor(this.state.heat / heatCount))\n    if (this.state.onGround) {\n      this.shadow.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        mode * 4 + kernelMode,\n        0,\n      )\n    }\n    if (this.state.trans > 2) {\n      this.currentAnime.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 6],\n        scale,\n        mode,\n        this.state.orientation,\n      )\n    }\n    if (this.state.trans < 8) {\n      this.trans.draw(\n        ctx,\n        [offset[0] + this.state.pos[0], offset[1] + this.state.pos[1] - 5],\n        scale,\n        this.state.trans - 2,\n        0,\n      )\n    }\n    if (this.explosionNum > 0) {\n      this.explosion.draw(\n        ctx,\n        [\n          offset[0] + this.explosionPos[0] - 12,\n          offset[1] + this.explosionPos[1] - 8,\n        ],\n        scale,\n        3 - this.explosionNum,\n        0,\n      )\n    }\n    if (this.headUpTextMode > 0) {\n      this.headUpText.draw(\n        ctx,\n        [offset[0] + this.state.pos[0] - 6, offset[1] + this.state.pos[1] - 15],\n        scale,\n        this.headUpTextMode - 1,\n        0,\n      )\n    }\n  }\n}\n\nexport default Kernel\n","import Anime from './lib/Anime'\nimport { Vec2 } from './lib/vec'\n\nimport { GameEventTarget } from './events'\n\nexport class NPCState {\n  pos: Vec2\n  mode: number\n\n  constructor(s: InitialNPCState) {\n    this.pos = s.pos || [0, 0]\n    this.mode = s.mode || 0\n  }\n}\n\nexport type InitialNPCState = {\n  pos?: Vec2\n  mode?: number\n}\n\nclass NPC<State extends NPCState = NPCState> extends GameEventTarget<\n  NPC<State>\n> {\n  private readonly anime: Anime\n  private readonly headUpText: Anime\n  state: State\n  active: boolean\n  hasDialog: boolean\n\n  constructor(anime: Anime, headUpText: Anime, s: State) {\n    super()\n    this.anime = anime\n    this.headUpText = headUpText\n    this.state = s\n    this.active = false\n    this.hasDialog = false\n  }\n\n  tick(p: Vec2) {\n    const sz = this.anime.sz()\n    const activePrev = this.active\n    this.active =\n      Math.abs(p[0] - this.state.pos[0]) < sz[0] / 2 &&\n      Math.abs(p[1] - this.state.pos[1]) < sz[1] / 2\n\n    if (!activePrev && this.active && this.onArrive) {\n      this.onArrive.forEach((h) => h({ target: this }))\n    }\n\n    this.anime.tick()\n    this.headUpText.tick()\n  }\n\n  interact() {\n    if (this.active && this.onAction.length) {\n      this.onAction.forEach((h) => h({ target: this }))\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D, offset: Vec2, scale: number) {\n    const sz = this.anime.sz()\n    this.anime.draw(\n      ctx,\n      [\n        offset[0] + this.state.pos[0] - sz[0] / 2,\n        offset[1] + this.state.pos[1] - sz[1] + 6,\n      ],\n      scale,\n      this.state.mode,\n      0,\n    )\n    if (this.hasDialog) {\n      this.headUpText.draw(\n        ctx,\n        [\n          offset[0] + this.state.pos[0] - sz[0] / 2,\n          offset[1] + this.state.pos[1] - sz[1] + 4,\n        ],\n        scale,\n        2 + (this.active ? 1 : 0),\n        0,\n      )\n    }\n  }\n}\n\nexport default NPC\n","import Anime from './lib/Anime'\n\nimport NPC, { NPCState, InitialNPCState } from './NPC'\n\nclass ZEA extends NPC {\n  constructor(sprite: HTMLImageElement, state0: InitialNPCState) {\n    super(\n      new Anime(sprite, {\n        topLeft: [0, 72],\n        sz: [24, 24],\n        frames: [\n          0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,\n          0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2,\n          2, 2, 2, 2, 2, 2, 2, 2,\n        ],\n        patterns: 5,\n      }),\n      new Anime(sprite, {\n        topLeft: [0, 60],\n        sz: [24, 12],\n        frames: [0, 1],\n        patterns: 2,\n        countDiv: 8,\n      }),\n      new NPCState(state0),\n    )\n  }\n}\n\nexport default ZEA\n","type DialogOption = {\n  timeout?: number\n}\n\nclass DialogManager {\n  readonly messageBox: HTMLDivElement\n\n  private timeoutTimer?: ReturnType<typeof setTimeout>\n\n  constructor(messageBox: HTMLDivElement) {\n    this.messageBox = messageBox\n  }\n\n  showMessage(text: string, opt?: DialogOption) {\n    if (this.timeoutTimer) {\n      clearTimeout(this.timeoutTimer)\n    }\n    this.messageBox.innerHTML = text\n    this.messageBox.style.display = 'block'\n    this.messageBox.classList.remove('hide')\n\n    if (opt?.timeout) {\n      this.timeoutTimer = setTimeout(this.hideMessage.bind(this), opt.timeout)\n    }\n  }\n\n  hideMessage() {\n    this.messageBox.classList.add('hide')\n  }\n}\n\nexport default DialogManager\n","import Sprite from './lib/Sprite'\nimport Anime from './lib/Anime'\nimport CollisionMap from './lib/CollisionMap'\nimport { Vec2 } from './lib/vec'\nimport StateMachine, { State, nopState } from './lib/StateMachine'\n\nimport Kernel from './Kernel'\nimport ZEA from './ZEA'\nimport { EventHandler } from './events'\nimport DialogManager from './DialogManager'\nimport GameData, { importGameData } from './GameData'\n\nclass Game {\n  readonly canvas: HTMLCanvasElement\n  readonly ctx: CanvasRenderingContext2D\n  readonly sprite: HTMLImageElement\n  cleanup?: () => void\n\n  readonly scale: number\n\n  readonly sm: StateMachine\n  readonly dm: DialogManager\n\n  readonly game: GameData\n  readonly bgUnder: Sprite\n  readonly bg: Sprite\n  readonly bgOverlay: Sprite\n  readonly bgOverlayAnime: Anime\n  readonly bgGrad: Sprite\n  readonly kernel: Kernel\n  readonly collisionMap: CollisionMap\n  readonly zea: ZEA\n\n  command: Map<string, boolean>\n\n  origin: Vec2\n  viewpoint: Vec2\n  debugView: boolean\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    sprite: HTMLImageElement,\n    messageBox: HTMLDivElement,\n  ) {\n    const self = this\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw 'failed to get canvas context'\n    }\n    this.ctx = ctx\n    this.canvas = canvas\n    this.ctx.imageSmoothingEnabled = false\n    this.sprite = sprite\n\n    this.dm = new DialogManager(messageBox)\n    this.game = importGameData({\n      getItem: () => {\n        self.dm.showMessage('Yum Yum', { timeout: 2000 })\n      },\n    })\n\n    this.scale = 3\n    this.origin = this.game.init.kernel\n    this.viewpoint = [0, 0]\n    this.debugView = false\n\n    this.kernel = new Kernel(this.sprite, {\n      pos: this.origin,\n    })\n    this.bgUnder = new Sprite(this.sprite, {\n      topLeft: [512, 512],\n      sz: [16, 16],\n      baseScale: 2,\n    })\n    this.bg = new Sprite(this.sprite, {\n      topLeft: [0, 512],\n      sz: [16, 16],\n    })\n    this.bgOverlay = new Sprite(this.sprite, {\n      topLeft: [0, 896],\n      sz: [16, 16],\n    })\n    this.bgOverlayAnime = new Anime(this.sprite, {\n      topLeft: [0, 768],\n      sz: [16, 16],\n      frames: [0, 0, 1, 1, 2, 2, 1, 1],\n    })\n    this.bgGrad = new Sprite(this.sprite, {\n      topLeft: [1024 - 16, 0],\n      sz: [16, 1024],\n    })\n    this.zea = new ZEA(this.sprite, {\n      pos: this.game.spawn.ZEA,\n      mode: 1,\n    })\n    const zDialogs = ['Hemlo', '...']\n    let zTalkCnt = 0\n    const [zTalk, zTalkHandler] = this.newEventState<ZEA>({\n      nextStates: { next: nopState },\n      tick: () => {\n        self.dm.showMessage(zDialogs[zTalkCnt], { timeout: 2000 })\n        zTalkCnt += 1\n        return zTalkCnt < zDialogs.length ? null : 'next'\n      },\n      enter: () => {\n        this.zea.hasDialog = true\n      },\n      leave: () => {\n        this.zea.hasDialog = false\n      },\n    })\n    this.zea.onAction.push(zTalkHandler)\n    this.sm = new StateMachine(zTalk)\n\n    this.kernel.onInteract = () => {\n      this.zea.interact()\n    }\n\n    this.collisionMap = new CollisionMap(this.game.m, [16, 16])\n    this.command = new Map<string, boolean>()\n  }\n\n  start() {\n    const tickTimer = setInterval(this.tick.bind(this), 80)\n\n    this.dm.showMessage(\"What's poppin?\", { timeout: 5000 })\n\n    this.cleanup = () => {\n      clearInterval(tickTimer)\n    }\n  }\n\n  stop() {\n    if (this.cleanup) {\n      this.cleanup()\n    }\n  }\n\n  tick() {\n    this.ctx.fillStyle = 'black'\n    this.ctx.fillRect(0, 0, 640, 480)\n\n    try {\n      const kernelCmd = {\n        left: this.command.has('ArrowLeft'),\n        right: this.command.has('ArrowRight'),\n        space: this.command.has('Space'),\n      }\n      this.kernel.tick(kernelCmd, this.game.m, this.collisionMap)\n      this.bgOverlayAnime.tick()\n\n      const state = this.kernel.state\n      if (state.pos[1] > 16 * 18) {\n        this.kernel.reset()\n      }\n\n      this.zea.tick(state.pos)\n\n      const diffY = (state.pos[1] - this.origin[1]) / 1.25\n      if (this.viewpoint[1] < diffY - 16) {\n        this.viewpoint[1] += (diffY - 16 - this.viewpoint[1]) / 4\n      }\n      if (this.viewpoint[1] > diffY + 16) {\n        this.viewpoint[1] += (diffY + 16 - this.viewpoint[1]) / 4\n      }\n      const widthBlocks = Math.floor(640 / (16 * this.scale)) * 16 * this.scale\n      console.log(this.origin[0])\n      const diffX =\n        (Math.round(((state.pos[0] - 320 / this.scale) * 3) / widthBlocks) *\n          widthBlocks) /\n        3\n      this.viewpoint[0] += Math.max(\n        -50,\n        Math.min(50, (diffX - this.viewpoint[0]) / 2),\n      )\n\n      const offset = this.offset()\n\n      for (let x = 0; x < 640 / this.scale; x += 16) {\n        this.bgGrad.draw(\n          this.ctx,\n          [x, -1024 + 480 / this.scale - this.viewpoint[1] / 3 + 12],\n          this.scale,\n          0,\n          0,\n        )\n      }\n      this.game.m.draw(this.ctx, this.bgUnder, offset, this.scale, 'under')\n      this.game.m.draw(this.ctx, this.bg, offset, this.scale, 'main')\n      this.zea.draw(this.ctx, offset, this.scale)\n\n      this.kernel.draw(this.ctx, offset, this.scale)\n      this.game.m.draw(this.ctx, this.bgOverlay, offset, this.scale, 'overlay')\n      this.game.m.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n      this.game.m.draw(\n        this.ctx,\n        this.bgOverlayAnime,\n        offset,\n        this.scale,\n        'overlayAnime',\n      )\n\n      if (this.debugView) {\n        this.collisionMap.draw(this.ctx, offset, this.scale)\n      }\n    } catch (err) {\n      console.error(err)\n      this.stop()\n    }\n  }\n\n  private offset(): Vec2 {\n    return [-this.viewpoint[0], 110 - this.origin[1] - this.viewpoint[1]]\n  }\n\n  keydown(e: Pick<KeyboardEvent, 'code'>) {\n    this.command.set(e.code, true)\n  }\n\n  keyup(e: Pick<KeyboardEvent, 'code'>) {\n    if (this.command.has('F2')) {\n      this.debugView = !this.debugView\n    }\n    this.command.delete(e.code)\n  }\n\n  private newEventState<T>(state: State): [State, EventHandler<T>] {\n    const h = () => {\n      if (this.sm.current === state) {\n        this.sm.tick()\n      }\n    }\n    return [state, h]\n  }\n}\n\nexport default Game\n","import Game from './Game'\n\nexport default Game\n","export default __webpack_public_path__ + \"static/frame-ca82859c688250bcb14362e22a5d3408.svg\";","export default __webpack_public_path__ + \"static/frame_inner-60f1e379dcb3ddb7d26173360cdc65ba.svg\";","import React, { useEffect, useRef } from 'react'\nimport { css, keyframes } from '@emotion/react'\n\nimport Game from '@doramanjyu/z-game/game'\n\nimport frame from '@doramanjyu/z-game/images/frame.svg'\nimport frameInner from '@doramanjyu/z-game/images/frame_inner.svg'\nimport sprite from '@doramanjyu/z-game/images/sprite.png'\n\nconst IndexPage = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const spriteRef = useRef<HTMLImageElement>(null)\n  const messageRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!canvasRef.current || !spriteRef.current || !messageRef.current) {\n      return\n    }\n    const g = new Game(canvasRef.current, spriteRef.current, messageRef.current)\n    g.start()\n    const keydown = g.keydown.bind(g)\n    const keyup = g.keyup.bind(g)\n    document.addEventListener('keydown', keydown)\n    document.addEventListener('keyup', keyup)\n\n    const noPreventDefault = (e: TouchEvent): boolean => {\n      if (!e.target || !(e.target instanceof Element)) {\n        return false\n      }\n      return e.target.closest('a') !== null\n    }\n    let [tx, ty] = [0, 0]\n    let touching = false\n    const touchMoveThreshold = 32\n    const touchStart = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (!touching) {\n        tx = e.touches[0].screenX\n        ty = e.touches[0].screenY\n        touching = true\n      }\n    }\n    const touchMove = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches[0].screenY > ty + touchMoveThreshold) {\n        keydown({ code: 'Space' })\n      }\n      if (e.touches[0].screenX > tx + touchMoveThreshold) {\n        keydown({ code: 'ArrowLeft' })\n        keyup({ code: 'ArrowRight' })\n      } else if (e.touches[0].screenX < tx - touchMoveThreshold) {\n        keydown({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      } else {\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n      }\n    }\n    const touchEnd = (e: TouchEvent) => {\n      if (noPreventDefault(e)) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      if (e.touches.length === 0) {\n        keyup({ code: 'Space' })\n        keyup({ code: 'ArrowRight' })\n        keyup({ code: 'ArrowLeft' })\n        touching = false\n      }\n    }\n\n    document.addEventListener('touchstart', touchStart)\n    document.addEventListener('touchmove', touchMove)\n    document.addEventListener('touchend', touchEnd)\n    document.addEventListener('touchcancel', touchEnd)\n\n    return () => {\n      document.removeEventListener('touchstart', touchStart)\n      document.removeEventListener('touchmove', touchMove)\n      document.removeEventListener('touchend', touchEnd)\n      document.removeEventListener('touchcancel', touchEnd)\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n      g.stop()\n    }\n  }, [canvasRef, spriteRef, messageRef])\n\n  return (\n    <main style={{ width: '788px', margin: '0 auto' }}>\n      <title>What's poppin?</title>\n      <h1 style={{ textAlign: 'center', margin: '3px' }}>UNDER DEVELOPMENT</h1>\n      <div\n        style={{\n          width: '788px',\n          height: '689px',\n          backgroundImage: `url(${frame})`,\n          position: 'relative',\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          style={{\n            backgroundColor: '#000',\n            width: '640px',\n            height: '480px',\n            borderRadius: '30px',\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n          css={css`\n            &:focus-visible {\n              outline-style: none !important;\n            }\n          `}\n          width=\"640\"\n          height=\"480\"\n        />\n        <div\n          style={{\n            width: '640px',\n            height: '480px',\n            backgroundImage: `url(${frameInner})`,\n            position: 'absolute',\n            left: '74px',\n            top: '188px',\n          }}\n        />\n        <div\n          ref={messageRef}\n          style={{\n            boxSizing: 'border-box',\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderWidth: '2px',\n            borderStyle: 'dotted',\n            borderRadius: '0 20px 20px 20px',\n            borderColor: 'white',\n            position: 'absolute',\n            width: '540px',\n            height: '85px',\n            left: '124px',\n            bottom: '34px',\n            padding: '10px 20px',\n            fontSize: '20px',\n            lineHeight: '25px',\n            color: '#600',\n            display: 'none',\n            animationIterationCount: 1,\n            animationFillMode: 'forwards',\n          }}\n          css={css`\n            animation: ${bounceIn} 0.8s ease;\n            &.hide {\n              animation: ${bounceOut} 0.5s ease;\n            }\n          `}\n        ></div>\n      </div>\n      <img\n        ref={spriteRef}\n        src={sprite}\n        style={{\n          display: 'none',\n        }}\n      />\n      <div\n        style={{\n          paddingTop: '10px',\n          textAlign: 'right',\n          color: '#666',\n        }}\n        css={css`\n          > a {\n            color: #666;\n          }\n          > a:hover {\n            color: #999;\n          }\n        `}\n      >\n        <a\n          href=\"https://github.com/Doramanjyu/z-game\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source repository\n        </a>\n      </div>\n    </main>\n  )\n}\n\nconst bounceIn = keyframes`\n  from, 20%, 46%, 80%, to {\n    transform: translate3d(0,0,0);\n    visibility: visible;\n  }\n  40%, 42% {\n    transform: translate3d(0, -20px, 0);\n  }\n  70% {\n    transform: translate3d(0, -8px, 0);\n  }\n  90% {\n    transform: translate3d(0,-2px,0);\n  }\n`\n\nconst bounceOut = keyframes`\n  from, 50% {\n    transform: translate3d(0,0,0);\n  }\n  20% {\n    transform: translate3d(0,-2px,0);\n  }\n  70% {\n    transform: translate3d(0,-5px,0);\n  }\n  to {\n    visibility: hidden;\n  }\n`\n\nexport default IndexPage\n"],"names":["_taggedTemplateLiteralLoose","strings","raw","slice","Sprite","sprite","prop","this","baseScale","draw","ctx","p","scale","mode1","mode2","drawImage","topLeft","sz","Math","floor","Anime","cnt","frame","propAnime","patterns","frames","reduce","acc","v","countDiv","tick","forceCnt","undefined","length","diff","a","b","cross","intersected","sa","ea","sb","eb","tolerance","c1","c2","c3","c4","CollisionMap","map","cellSz","scanned","intersection","check","col","right","left","s","min","e","max","motion","j","i","at","collision","forEach","pp","pol","push","k","top","bottom","o","strokeStyle","lineWidth","cellRange","screenSize","cw","ch","beginPath","c","x","y","moveTo","lineTo","stroke","closePath","xy","drawPolygon","poly","StateMachine","initial","current","nopState","states","Map","set","next","n","pop","Object","values","nextStates","has","leave","enter","console","log","reset","KernelState","pos","vel","onGround","orientation","jumpPow","heat","popped","trans","clone","Kernel","state0","ellasticCoeff","anime","idle","squat","jump","currentAnime","shadow","explosion","headUpText","state","explosionPos","explosionNum","headUpTextMode","interacting","cmd","gameMap","colMap","space","mpBottom","round","headUpTextModePrev","mpBottom0","cell","onAction","h","target","onInteract","offset","kernelMode","mode","heatCount","NPCState","ZEA","NPC","active","hasDialog","activePrev","abs","onArrive","interact","GameEventTarget","DialogManager","messageBox","showMessage","text","opt","timeoutTimer","clearTimeout","innerHTML","style","display","classList","remove","timeout","setTimeout","hideMessage","bind","add","Game","canvas","self","getContext","imageSmoothingEnabled","dm","game","importGameData","getItem","origin","init","kernel","viewpoint","debugView","bgUnder","bg","bgOverlay","bgOverlayAnime","bgGrad","zea","spawn","zDialogs","zTalkCnt","newEventState","zTalk","zTalkHandler","sm","collisionMap","m","command","start","tickTimer","setInterval","cleanup","clearInterval","stop","fillStyle","fillRect","kernelCmd","diffY","widthBlocks","diffX","err","error","keydown","code","keyup","delete","bounceIn","keyframes","bounceOut","canvasRef","useRef","spriteRef","messageRef","useEffect","g","document","addEventListener","noPreventDefault","Element","closest","tx","ty","touching","touchStart","preventDefault","stopPropagation","touches","screenX","screenY","touchMove","touchEnd","removeEventListener","width","margin","textAlign","height","backgroundImage","position","ref","backgroundColor","borderRadius","css","frameInner","boxSizing","borderWidth","borderStyle","borderColor","padding","fontSize","lineHeight","color","animationIterationCount","animationFillMode","src","paddingTop","href","rel"],"sourceRoot":""}